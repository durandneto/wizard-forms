[{"/private/var/www/oberholtzermedia-form/src/reportWebVitals.ts":"1","/private/var/www/oberholtzermedia-form/src/App.tsx":"2","/private/var/www/oberholtzermedia-form/src/components/TabHeader.tsx":"3","/private/var/www/oberholtzermedia-form/src/components/Profile/index.tsx":"4","/private/var/www/oberholtzermedia-form/src/components/Profile/personal-info.component.tsx":"5","/private/var/www/oberholtzermedia-form/src/components/Profile/medical.component.tsx":"6","/private/var/www/oberholtzermedia-form/src/components/Cancer/index.tsx":"7","/private/var/www/oberholtzermedia-form/src/components/Cardiac/index.tsx":"8","/private/var/www/oberholtzermedia-form/src/components/Diabets/index.tsx":"9","/private/var/www/oberholtzermedia-form/src/components/Profile/address.component.tsx":"10","/private/var/www/oberholtzermedia-form/src/index.tsx":"11","/private/var/www/oberholtzermedia-form/src/components/Profile/physician-information.component.tsx":"12","/private/var/www/oberholtzermedia-form/src/components/Progress.tsx":"13","/private/var/www/oberholtzermedia-form/src/components/ProgressHeader.tsx":"14","/private/var/www/oberholtzermedia-form/src/components/DummyComponent.tsx":"15","/private/var/www/oberholtzermedia-form/src/components/Review/index.tsx":"16"},{"size":425,"mtime":1612288231251,"results":"17","hashOfConfig":"18"},{"size":4893,"mtime":1612539559933,"results":"19","hashOfConfig":"18"},{"size":1569,"mtime":1612363409115,"results":"20","hashOfConfig":"18"},{"size":2422,"mtime":1612539460721,"results":"21","hashOfConfig":"18"},{"size":5641,"mtime":1612531885708,"results":"22","hashOfConfig":"18"},{"size":941,"mtime":1612460476284,"results":"23","hashOfConfig":"18"},{"size":1929,"mtime":1612472496839,"results":"24","hashOfConfig":"18"},{"size":2098,"mtime":1612472291258,"results":"25","hashOfConfig":"18"},{"size":2056,"mtime":1612472304456,"results":"26","hashOfConfig":"18"},{"size":1620,"mtime":1612536557810,"results":"27","hashOfConfig":"18"},{"size":500,"mtime":1612288231247,"results":"28","hashOfConfig":"18"},{"size":1019,"mtime":1612465362849,"results":"29","hashOfConfig":"18"},{"size":2622,"mtime":1612474141840,"results":"30","hashOfConfig":"18"},{"size":797,"mtime":1612539587735,"results":"31","hashOfConfig":"18"},{"size":251,"mtime":1612469479224,"results":"32","hashOfConfig":"18"},{"size":2062,"mtime":1612540673343,"results":"33","hashOfConfig":"18"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},"1j9z5km",{"filePath":"37","messages":"38","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"39","messages":"40","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"41","messages":"42","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"43","messages":"44","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"45","messages":"46","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"36"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50","usedDeprecatedRules":"36"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"54"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"57","messages":"58","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64","usedDeprecatedRules":"65"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68","usedDeprecatedRules":"54"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/private/var/www/oberholtzermedia-form/src/reportWebVitals.ts",[],["75","76"],"/private/var/www/oberholtzermedia-form/src/App.tsx",["77","78"],"/private/var/www/oberholtzermedia-form/src/components/TabHeader.tsx",["79"],"/private/var/www/oberholtzermedia-form/src/components/Profile/index.tsx",["80"],"/private/var/www/oberholtzermedia-form/src/components/Profile/personal-info.component.tsx",["81","82","83"],"/private/var/www/oberholtzermedia-form/src/components/Profile/medical.component.tsx",["84","85","86","87","88","89"],"import React, { useState } from 'react';\nimport {\n  InputGroup,\n  InputGroupAddon,\n  InputGroupButtonDropdown,\n  Input,\n  Button,\n  DropdownToggle,\n  DropdownMenu,\n  DropdownItem,\n  Form,\n  Col,\n  Row,\n  Container\n } from 'reactstrap';\n\nconst MedicareID = () => {\n  const [dropdownOpen, setDropdownOpen] = useState(false);\n  const [splitButtonOpen, setSplitButtonOpen] = useState(false);\n\n  const toggleDropDown = () => setDropdownOpen(!dropdownOpen);\n\n  const toggleSplit = () => setSplitButtonOpen(!splitButtonOpen);\n\n  return (\n      <Container>\n        <Row>\n          <Col xs=\"12\">\n            <Form>\n              <InputGroup>\n                <Input placeholder=\"Medicare ID\" />\n                <InputGroupAddon addonType=\"append\"><Button color=\"secondary\">Check Elgibility</Button></InputGroupAddon>\n              </InputGroup>\n            </Form>\n          </Col>\n        </Row>\n      </Container>\n  );\n}\n\n\nexport default MedicareID;","/private/var/www/oberholtzermedia-form/src/components/Cancer/index.tsx",["90","91","92"],"import { Fragment, useState } from \"react\"\nimport { Container, Row, Col, Breadcrumb, BreadcrumbItem } from 'reactstrap';\nimport { TabItemInterface } from '../TabHeader'\nimport DummyComponent from \"../DummyComponent\"\nimport Progress from \"../Progress\"\n\nconst Tabs: Array<TabItemInterface> = [\n   {\n      id: 1,\n      label: \"Diagnostic\",\n      component: <DummyComponent />,\n      index: 0\n   },\n   {\n      id: 3,\n      label: \"Family Member\",\n      component: <DummyComponent />,\n      index: 1\n   },\n]\n\nconst Cancer = (props: any) => {\n   const [tabIndex, setTab] = useState<number>(0)\n   const activeTab: TabItemInterface = Tabs[tabIndex]\n   return (\n      <div id=\"wizard_container\">\n      <div id=\"top-wizard\">\n         <Container>\n            <Row>\n               <Col>\n                  <Progress\n                     tabs={Tabs}\n                     activeTab={activeTab}\n                     nextTab={props.nextTab}\n                     prevTab={props.prevTab}\n                     setTab={setTab}\n                     currentIndex={tabIndex}\n                     onNext={() => {\n                        setTab(tabIndex + 1)\n                     }}\n                     goToNextTab={props.goToNextTab}\n                     backToPrevTab={props.backToPrevTab}\n                     onPrev={() => {\n                        setTab(tabIndex - 1)\n                     }}\n                  />\n               </Col>\n            </Row>\n            <Row>\n               <Col>\n                  <h3>{activeTab.label}</h3>\n                  <p>Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, </p>\n               </Col>\n            </Row>\n         </Container>\n      </div>\n      <div id=\"middle-wizard\">\n         {activeTab.component}\n      </div>\n      <div id=\"bottom-wizard\">\n      </div>\n   </div>\n)}\n\n\nexport default Cancer","/private/var/www/oberholtzermedia-form/src/components/Cardiac/index.tsx",["93","94","95"],"import { Fragment, useState } from \"react\"\nimport { Container, Row, Col, Breadcrumb, BreadcrumbItem } from 'reactstrap';\nimport { TabItemInterface } from '../TabHeader'\nimport DummyComponent from \"../DummyComponent\"\nimport Progress from \"../Progress\"\n\nconst Tabs: Array<TabItemInterface> = [\n   {\n      id: 1,\n      label: \"Diagnostic\",\n      component: <DummyComponent />,\n      success: true,\n      index: 0\n   },\n   {\n      id: 2,\n      label: \"Medications\",\n      component: <DummyComponent />,\n      success: true,\n      index: 1\n   },\n   {\n      id: 3,\n      label: \"Family Member\",\n      component: <DummyComponent />,\n      success: true,\n      index: 3\n   },\n]\n\nconst Cardiac = (props: any) => {\n   const [tabIndex, setTab] = useState<number>(0)\n   const activeTab: TabItemInterface = Tabs[tabIndex]\n   return (\n      <div id=\"wizard_container\">\n      <div id=\"top-wizard\">\n         <Container>\n            <Row>\n               <Col>\n                  <Progress\n                     tabs={Tabs}\n                     activeTab={activeTab}\n                     nextTab={props.nextTab}\n                     prevTab={props.prevTab}\n                     setTab={setTab}\n                     currentIndex={tabIndex}\n                     onNext={() => {\n                        setTab(tabIndex + 1)\n                     }}\n                     goToNextTab={props.goToNextTab}\n                     backToPrevTab={props.backToPrevTab}\n                     onPrev={() => {\n                        setTab(tabIndex - 1)\n                     }}\n                  />\n               </Col>\n            </Row>\n            <Row>\n               <Col>\n                  <h3>{activeTab.label}</h3>\n                  <p>Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, </p>\n               </Col>\n            </Row>\n         </Container>\n      </div>\n      <div id=\"middle-wizard\">\n         {activeTab.component}\n      </div>\n      <div id=\"bottom-wizard\">\n      </div>\n   </div>\n)}\n\n\nexport default Cardiac",["96","97"],"/private/var/www/oberholtzermedia-form/src/components/Diabets/index.tsx",["98","99","100"],"/private/var/www/oberholtzermedia-form/src/components/Profile/address.component.tsx",["101","102"],"import { Container, Row, Col, Form, FormGroup, Label, Input, CustomInput, FormFeedback, FormText,\n  InputGroup, Button, InputGroupAddon } from 'reactstrap';\n\ninterface formInputInterface {\n  id: string;\n  label: string;\n}\nconst FormInput = ({id, label}: formInputInterface) => (\n  <FormGroup>\n    <Label for={`form-input-id-${id}`}>{label}</Label>\n    <Input type=\"text\" bsSize=\"sm\" name=\"lastName\" id={`form-input-id-${id}`} placeholder={label} />\n  </FormGroup>\n)\nconst Address = () => {\n  return (\n  <div className=\"col-xs-12\">\n    <Form>\n      <Container>\n        <Row>\n          <Col  xs=\"4\">\n            <FormGroup className=\"position-relative\">\n              <Label>Postal code</Label>\n              <InputGroup>\n                <Input placeholder=\"Postal code\" />\n                <InputGroupAddon addonType=\"append\"><Button color=\"secondary\">Search Address</Button></InputGroupAddon>\n              </InputGroup>\n            </FormGroup>\n          </Col>\n        </Row>\n        <Row>\n          <Col xs=\"12\" sm=\"6\">\n            <FormGroup className=\"position-relative\">\n              <Label for=\"examplePassword\">Full Address</Label>\n              <Input invalid />\n              <FormFeedback tooltip>Invalid Address, Example of a valid address here.</FormFeedback>\n            </FormGroup>\n          </Col>\n          <Col xs=\"12\" sm=\"6\">\n            <FormInput id=\"address2\" label=\"Address (line 2)\" />\n          </Col> \n          <Col xs=\"12\" sm=\"6\" >\n            <FormInput id=\"city\" label=\"City / State\" />\n          </Col> \n        </Row>\n      </Container>\n      </Form>\n  </div>\n)}\n\n\nexport default Address","/private/var/www/oberholtzermedia-form/src/index.tsx",[],"/private/var/www/oberholtzermedia-form/src/components/Profile/physician-information.component.tsx",["103"],"import { Container, Row, Col, Form, FormGroup, Label, Input, CustomInput } from 'reactstrap';\n\ninterface formInputInterface {\n  id: string;\n  label: string;\n}\nconst FormInput = ({id, label}: formInputInterface) => (\n  <FormGroup>\n    <Label for={`form-input-id-${id}`}>{label}</Label>\n    <Input bsSize=\"sm\" type=\"text\" name=\"lastName\" id={`form-input-id-${id}`} placeholder={label} />\n  </FormGroup>\n)\n\n/** \nPrimary Care Doctor Full name - Primary Care Contact Phone\nPrimary Care Address - Address (Line 2)\nPrimary Care City - Primary Care State  - Primary Care Postal\n*/\nconst PhysicianInformation = () => {\n  return (\n  <div className=\"col-xs-12\">\n    <Form>\n      <Container>\n        <Row>\n          <Col xs=\"12\" sm=\"6\">\n            <FormInput id=\" DoctorFullname\" label=\" Doctor Full name\" />\n          </Col>\n          <Col xs=\"12\" sm=\"6\">\n            <FormInput id=\"ContactPhone\" label=\"Phone\" />\n          </Col> \n        </Row>\n      </Container>\n      </Form>\n  </div>\n)}\n\n\nexport default PhysicianInformation",["104","105"],"/private/var/www/oberholtzermedia-form/src/components/Progress.tsx",["106","107","108","109","110","111","112","113","114"],"import React, { useState } from 'react';\nimport { TabItemInterface } from './TabHeader'\nimport {\n  Collapse,\n  Navbar,\n  Nav,\n  NavItem,\n  NavLink,\n  Alert,\n  Progress,\n  Container,\n  Row,\n  Col,\n  ToastBody\n} from 'reactstrap';\n\nconst MyProgress = (props: any) => {\n\n  return (\n   <div className=\"progress_container\">\n      <Container>\n        <Row>\n          <Col className=\"progress_left_col\">\n          {\n               props.tabs.map((tab: TabItemInterface, index: number) => {\n\n                   const style = tab.success ? {color: '#222' } : {}\n                   if (tab.id === props.activeTab.id) style.color = \"#409fff\"\n                   return (\n                        <span style={style} onClick={() => props.setTab(index)} key={`profile-tab-index-${index}`} >\n                           {\n                              index > 0 && ` | `\n                           }\n                           {\n                              tab.label\n                           }\n                           {\n                              tab.error && <i  style={{color: \"#dc3545\"}}  className=\"icon-attention-filled\"></i>\n                           }\n                           {\n                              tab.success && <i style={{color: \"#155724\"}} className=\"icon-ok-1\"></i>\n                           }\n                        </span>\n                  )}\n               )\n            }\n            </Col>\n            <Col className=\"progress_right_col\">\n               {\n                  props.currentIndex > 0 && <button onClick={props.onPrev} type=\"button\" className=\"backward\"  name=\"prev\">Prev</button>\n               }\n               {\n                  props.prevTab?.label !==  props.tabs[props.currenIndex]?.label && props.currentIndex === 0 && <button onClick={props.backToPrevTab} type=\"button\" className=\"backward\"  name=\"prev\">Back to {props.prevTab.label}</button>\n               }\n               {\n                 props.currentIndex < props.tabs.length - 1 && <button onClick={props.onNext} type=\"button\" className=\"forward\"  name=\"save\">Next</button>\n               }\n               {\n                 props.nextTab && props.currentIndex === props.tabs.length - 1 && <button onClick={props.goToNextTab} type=\"button\" className=\"forward\"  name=\"save\">Got to {props.nextTab.label}</button>\n               }\n               {\n                 !props.nextTab && props.currentIndex === props.tabs.length - 1 && <button type=\"button\" className=\"forward\"  name=\"save\">Submit</button>\n               }\n            </Col> \n         </Row> \n      </Container> \n   </div>\n  );\n}\n\nexport default MyProgress;","/private/var/www/oberholtzermedia-form/src/components/ProgressHeader.tsx",[],"/private/var/www/oberholtzermedia-form/src/components/DummyComponent.tsx",[],"/private/var/www/oberholtzermedia-form/src/components/Review/index.tsx",[],{"ruleId":"115","replacedBy":"116"},{"ruleId":"117","replacedBy":"118"},{"ruleId":"119","severity":1,"message":"120","line":3,"column":10,"nodeType":"121","messageId":"122","endLine":3,"endColumn":18},{"ruleId":"119","severity":1,"message":"123","line":4,"column":8,"nodeType":"121","messageId":"122","endLine":4,"endColumn":17},{"ruleId":"124","severity":1,"message":"125","line":25,"column":29,"nodeType":"126","endLine":25,"endColumn":98},{"ruleId":"119","severity":1,"message":"127","line":1,"column":10,"nodeType":"121","messageId":"122","endLine":1,"endColumn":18},{"ruleId":"119","severity":1,"message":"128","line":2,"column":92,"nodeType":"121","messageId":"122","endLine":2,"endColumn":107},{"ruleId":"119","severity":1,"message":"129","line":2,"column":109,"nodeType":"121","messageId":"122","endLine":2,"endColumn":115},{"ruleId":"119","severity":1,"message":"130","line":16,"column":7,"nodeType":"121","messageId":"122","endLine":16,"endColumn":16},{"ruleId":"119","severity":1,"message":"131","line":5,"column":3,"nodeType":"121","messageId":"122","endLine":5,"endColumn":27},{"ruleId":"119","severity":1,"message":"132","line":8,"column":3,"nodeType":"121","messageId":"122","endLine":8,"endColumn":17},{"ruleId":"119","severity":1,"message":"133","line":9,"column":3,"nodeType":"121","messageId":"122","endLine":9,"endColumn":15},{"ruleId":"119","severity":1,"message":"134","line":10,"column":3,"nodeType":"121","messageId":"122","endLine":10,"endColumn":15},{"ruleId":"119","severity":1,"message":"135","line":21,"column":9,"nodeType":"121","messageId":"122","endLine":21,"endColumn":23},{"ruleId":"119","severity":1,"message":"136","line":23,"column":9,"nodeType":"121","messageId":"122","endLine":23,"endColumn":20},{"ruleId":"119","severity":1,"message":"127","line":1,"column":10,"nodeType":"121","messageId":"122","endLine":1,"endColumn":18},{"ruleId":"119","severity":1,"message":"137","line":2,"column":31,"nodeType":"121","messageId":"122","endLine":2,"endColumn":41},{"ruleId":"119","severity":1,"message":"138","line":2,"column":43,"nodeType":"121","messageId":"122","endLine":2,"endColumn":57},{"ruleId":"119","severity":1,"message":"127","line":1,"column":10,"nodeType":"121","messageId":"122","endLine":1,"endColumn":18},{"ruleId":"119","severity":1,"message":"137","line":2,"column":31,"nodeType":"121","messageId":"122","endLine":2,"endColumn":41},{"ruleId":"119","severity":1,"message":"138","line":2,"column":43,"nodeType":"121","messageId":"122","endLine":2,"endColumn":57},{"ruleId":"115","replacedBy":"139"},{"ruleId":"117","replacedBy":"140"},{"ruleId":"119","severity":1,"message":"127","line":1,"column":10,"nodeType":"121","messageId":"122","endLine":1,"endColumn":18},{"ruleId":"119","severity":1,"message":"137","line":2,"column":31,"nodeType":"121","messageId":"122","endLine":2,"endColumn":41},{"ruleId":"119","severity":1,"message":"138","line":2,"column":43,"nodeType":"121","messageId":"122","endLine":2,"endColumn":57},{"ruleId":"119","severity":1,"message":"141","line":1,"column":62,"nodeType":"121","messageId":"122","endLine":1,"endColumn":73},{"ruleId":"119","severity":1,"message":"142","line":1,"column":89,"nodeType":"121","messageId":"122","endLine":1,"endColumn":97},{"ruleId":"119","severity":1,"message":"141","line":1,"column":62,"nodeType":"121","messageId":"122","endLine":1,"endColumn":73},{"ruleId":"115","replacedBy":"143"},{"ruleId":"117","replacedBy":"144"},{"ruleId":"119","severity":1,"message":"145","line":1,"column":17,"nodeType":"121","messageId":"122","endLine":1,"endColumn":25},{"ruleId":"119","severity":1,"message":"146","line":4,"column":3,"nodeType":"121","messageId":"122","endLine":4,"endColumn":11},{"ruleId":"119","severity":1,"message":"147","line":5,"column":3,"nodeType":"121","messageId":"122","endLine":5,"endColumn":9},{"ruleId":"119","severity":1,"message":"148","line":6,"column":3,"nodeType":"121","messageId":"122","endLine":6,"endColumn":6},{"ruleId":"119","severity":1,"message":"149","line":7,"column":3,"nodeType":"121","messageId":"122","endLine":7,"endColumn":10},{"ruleId":"119","severity":1,"message":"150","line":8,"column":3,"nodeType":"121","messageId":"122","endLine":8,"endColumn":10},{"ruleId":"119","severity":1,"message":"151","line":9,"column":3,"nodeType":"121","messageId":"122","endLine":9,"endColumn":8},{"ruleId":"119","severity":1,"message":"120","line":10,"column":3,"nodeType":"121","messageId":"122","endLine":10,"endColumn":11},{"ruleId":"119","severity":1,"message":"152","line":14,"column":3,"nodeType":"121","messageId":"122","endLine":14,"endColumn":12},"no-native-reassign",["153"],"no-negated-in-lhs",["154"],"@typescript-eslint/no-unused-vars","'Progress' is defined but never used.","Identifier","unusedVar","'TabHeader' is defined but never used.","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","'Fragment' is defined but never used.","'InputGroupAddon' is defined but never used.","'Button' is defined but never used.","'Separator' is assigned a value but never used.","'InputGroupButtonDropdown' is defined but never used.","'DropdownToggle' is defined but never used.","'DropdownMenu' is defined but never used.","'DropdownItem' is defined but never used.","'toggleDropDown' is assigned a value but never used.","'toggleSplit' is assigned a value but never used.","'Breadcrumb' is defined but never used.","'BreadcrumbItem' is defined but never used.",["153"],["154"],"'CustomInput' is defined but never used.","'FormText' is defined but never used.",["153"],["154"],"'useState' is defined but never used.","'Collapse' is defined but never used.","'Navbar' is defined but never used.","'Nav' is defined but never used.","'NavItem' is defined but never used.","'NavLink' is defined but never used.","'Alert' is defined but never used.","'ToastBody' is defined but never used.","no-global-assign","no-unsafe-negation"]