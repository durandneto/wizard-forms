[{"/private/var/www/oberholtzermedia-form/src/components/Profile/Address/index.tsx":"1","/private/var/www/oberholtzermedia-form/src/components/Profile/PersonalInfo/index.tsx":"2","/private/var/www/oberholtzermedia-form/src/App.tsx":"3","/private/var/www/oberholtzermedia-form/src/context/Profile.Contex.tsx":"4","/private/var/www/oberholtzermedia-form/src/components/Profile/MedicareID/index.tsx":"5","/private/var/www/oberholtzermedia-form/src/components/Profile/PrimaryCare/index.tsx":"6","/private/var/www/oberholtzermedia-form/src/components/Profile/PrimaryCare/table.tsx":"7","/private/var/www/oberholtzermedia-form/src/components/Profile/PersonalInfo/table.tsx":"8","/private/var/www/oberholtzermedia-form/src/components/Profile/Address/table.tsx":"9","/private/var/www/oberholtzermedia-form/src/components/Profile/MedicareID/table.tsx":"10","/private/var/www/oberholtzermedia-form/src/components/ProgressHeader.tsx":"11","/private/var/www/oberholtzermedia-form/src/context/App.Contex.tsx":"12","/private/var/www/oberholtzermedia-form/src/context/Tabs.Context.tsx":"13","/private/var/www/oberholtzermedia-form/src/actions/profile.ts":"14","/private/var/www/oberholtzermedia-form/src/index.tsx":"15","/private/var/www/oberholtzermedia-form/src/components/Progress.tsx":"16","/private/var/www/oberholtzermedia-form/src/components/Review/index.tsx":"17","/private/var/www/oberholtzermedia-form/src/reportWebVitals.ts":"18","/private/var/www/oberholtzermedia-form/src/components/Form/Item.tsx":"19","/private/var/www/oberholtzermedia-form/src/context/Diabetes.Contex.tsx":"20","/private/var/www/oberholtzermedia-form/src/components/Diabetes/Diagnostic/index.tsx":"21","/private/var/www/oberholtzermedia-form/src/components/Diabetes/BMI/index.tsx":"22","/private/var/www/oberholtzermedia-form/src/components/Diabetes/BMI/table.tsx":"23","/private/var/www/oberholtzermedia-form/src/components/Diabetes/FamilyMember/index.tsx":"24","/private/var/www/oberholtzermedia-form/src/components/Diabetes/FamilyMember/table.tsx":"25","/private/var/www/oberholtzermedia-form/src/components/Diabetes/Diagnostic/table.tsx":"26","/private/var/www/oberholtzermedia-form/src/components/Form/DiabetesFamilyMember.tsx":"27","/private/var/www/oberholtzermedia-form/src/components/Cardiac/FamilyMember/index.tsx":"28","/private/var/www/oberholtzermedia-form/src/components/Form/CardiacFamilyMember.tsx":"29","/private/var/www/oberholtzermedia-form/src/components/Cardiac/FamilyMember/table.tsx":"30","/private/var/www/oberholtzermedia-form/src/context/Cardiac.Contex.tsx":"31","/private/var/www/oberholtzermedia-form/src/components/Cardiac/Diagnostic/index.tsx":"32","/private/var/www/oberholtzermedia-form/src/components/Cardiac/Diagnostic/table.tsx":"33","/private/var/www/oberholtzermedia-form/src/components/Cancer/FamilyMember/index.tsx":"34","/private/var/www/oberholtzermedia-form/src/components/Cancer/Diagnostic/table.tsx":"35","/private/var/www/oberholtzermedia-form/src/components/Cancer/FamilyMember/table.tsx":"36","/private/var/www/oberholtzermedia-form/src/components/Cancer/Diagnostic/index.tsx":"37","/private/var/www/oberholtzermedia-form/src/context/Cancer.Contex.tsx":"38","/private/var/www/oberholtzermedia-form/src/components/Form/CancerFamilyMember.tsx":"39","/private/var/www/oberholtzermedia-form/src/utils/index.ts":"40","/private/var/www/oberholtzermedia-form/src/components/SubmitFormModal/index.tsx":"41","/private/var/www/oberholtzermedia-form/src/components/ProgressBottom.tsx":"42","/private/var/www/oberholtzermedia-form/src/context/Agent.Contex.tsx":"43","/private/var/www/oberholtzermedia-form/src/components/Agent/Info/table.tsx":"44","/private/var/www/oberholtzermedia-form/src/components/Agent/Info/index.tsx":"45","/private/var/www/oberholtzermedia-form/src/components/templates/index.tsx":"46","/private/var/www/oberholtzermedia-form/src/actions/medicare.ts":"47","/private/var/www/oberholtzermedia-form/src/context/Auth.Context.tsx":"48"},{"size":5385,"mtime":1613508727808,"results":"49","hashOfConfig":"50"},{"size":14727,"mtime":1613576461043,"results":"51","hashOfConfig":"50"},{"size":13339,"mtime":1613574601326,"results":"52","hashOfConfig":"50"},{"size":3762,"mtime":1613513416408,"results":"53","hashOfConfig":"50"},{"size":3567,"mtime":1613508710127,"results":"54","hashOfConfig":"50"},{"size":3946,"mtime":1613508794444,"results":"55","hashOfConfig":"50"},{"size":703,"mtime":1613403705684,"results":"56","hashOfConfig":"50"},{"size":1312,"mtime":1613576467503,"results":"57","hashOfConfig":"50"},{"size":686,"mtime":1613403327887,"results":"58","hashOfConfig":"50"},{"size":630,"mtime":1613403306888,"results":"59","hashOfConfig":"50"},{"size":544,"mtime":1613143561414,"results":"60","hashOfConfig":"50"},{"size":89,"mtime":1612819422010,"results":"61","hashOfConfig":"50"},{"size":724,"mtime":1613488546809,"results":"62","hashOfConfig":"50"},{"size":2024,"mtime":1613572165400,"results":"63","hashOfConfig":"50"},{"size":500,"mtime":1612288231247,"results":"64","hashOfConfig":"50"},{"size":4578,"mtime":1613577304153,"results":"65","hashOfConfig":"50"},{"size":6888,"mtime":1613577424324,"results":"66","hashOfConfig":"50"},{"size":425,"mtime":1613576502476,"results":"67","hashOfConfig":"50"},{"size":710,"mtime":1613570208513,"results":"68","hashOfConfig":"50"},{"size":2776,"mtime":1613574064582,"results":"69","hashOfConfig":"50"},{"size":3806,"mtime":1613514194876,"results":"70","hashOfConfig":"50"},{"size":2210,"mtime":1613514336515,"results":"71","hashOfConfig":"50"},{"size":521,"mtime":1613403417425,"results":"72","hashOfConfig":"50"},{"size":3062,"mtime":1613401599127,"results":"73","hashOfConfig":"50"},{"size":1028,"mtime":1613403774860,"results":"74","hashOfConfig":"50"},{"size":757,"mtime":1613403391480,"results":"75","hashOfConfig":"50"},{"size":6071,"mtime":1613509366464,"results":"76","hashOfConfig":"50"},{"size":3067,"mtime":1613401415700,"results":"77","hashOfConfig":"50"},{"size":6488,"mtime":1613509400924,"results":"78","hashOfConfig":"50"},{"size":1047,"mtime":1613403435426,"results":"79","hashOfConfig":"50"},{"size":4113,"mtime":1613574054464,"results":"80","hashOfConfig":"50"},{"size":6954,"mtime":1613513163057,"results":"81","hashOfConfig":"50"},{"size":1038,"mtime":1613403449855,"results":"82","hashOfConfig":"50"},{"size":3062,"mtime":1613401165026,"results":"83","hashOfConfig":"50"},{"size":1027,"mtime":1613403481121,"results":"84","hashOfConfig":"50"},{"size":953,"mtime":1613403467909,"results":"85","hashOfConfig":"50"},{"size":6143,"mtime":1613509574140,"results":"86","hashOfConfig":"50"},{"size":4299,"mtime":1613573407710,"results":"87","hashOfConfig":"50"},{"size":6538,"mtime":1613509400924,"results":"88","hashOfConfig":"50"},{"size":363,"mtime":1613508520838,"results":"89","hashOfConfig":"50"},{"size":917,"mtime":1613576476343,"results":"90","hashOfConfig":"50"},{"size":1876,"mtime":1613145467747,"results":"91","hashOfConfig":"50"},{"size":747,"mtime":1613576513265,"results":"92","hashOfConfig":"50"},{"size":589,"mtime":1613403507544,"results":"93","hashOfConfig":"50"},{"size":2515,"mtime":1613508898803,"results":"94","hashOfConfig":"50"},{"size":1916,"mtime":1613577190448,"results":"95","hashOfConfig":"50"},{"size":6155,"mtime":1613497616519,"results":"96","hashOfConfig":"50"},{"size":982,"mtime":1613576453991,"results":"97","hashOfConfig":"50"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"100","usedDeprecatedRules":"101"},"1j9z5km",{"filePath":"102","messages":"103","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"104","messages":"105","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"108","messages":"109","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"110","usedDeprecatedRules":"101"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"113","usedDeprecatedRules":"101"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"116","usedDeprecatedRules":"101"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"119","messages":"120","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"121","usedDeprecatedRules":"122"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"125","usedDeprecatedRules":"101"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"101"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"135","messages":"136","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"137"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"140"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"143","messages":"144","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"145","messages":"146","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"147","messages":"148","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"149","messages":"150","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"151","messages":"152","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"153","messages":"154","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"101"},{"filePath":"155","messages":"156","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"157","usedDeprecatedRules":"101"},{"filePath":"158","messages":"159","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"101"},{"filePath":"160","messages":"161","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"162","usedDeprecatedRules":"130"},{"filePath":"163","messages":"164","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"165","messages":"166","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"167","usedDeprecatedRules":"101"},{"filePath":"168","messages":"169","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"170","messages":"171","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"172","messages":"173","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"174","messages":"175","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"176","messages":"177","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"178","usedDeprecatedRules":"179"},{"filePath":"180","messages":"181","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"182","usedDeprecatedRules":"101"},{"filePath":"183","messages":"184","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"185","usedDeprecatedRules":"101"},{"filePath":"186","messages":"187","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"188","messages":"189","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"190","usedDeprecatedRules":"101"},{"filePath":"191","messages":"192","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"193","messages":"194","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"195","messages":"196","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"101"},{"filePath":"197","messages":"198","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"199","messages":"200","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"201","messages":"202","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"203","messages":"204","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"101"},{"filePath":"205","messages":"206","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"207","usedDeprecatedRules":"101"},{"filePath":"208","messages":"209","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"210","messages":"211","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"212","usedDeprecatedRules":"101"},{"filePath":"213","messages":"214","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/private/var/www/oberholtzermedia-form/src/components/Profile/Address/index.tsx",["215"],"import { useCallback, useContext, useEffect, useMemo, useState } from 'react';\nimport { Container, Row, Col, Form, FormGroup, Label, Input,\n    Alert, Button } from 'reactstrap';\nimport { AppContext } from '../../../context/App.Contex';\nimport { ProfileAddressDataInterface } from '../../../context/Profile.Contex';\nimport { calculateError } from '../../../utils';\nimport TableInfo from \"./table\"\n\n\nconst Address = (props:any) => {\n\n  const [loading, setLoading] = useState<boolean>(false)\n\n  const { Profile, updateContext, validateAddress }  = useContext(AppContext)\n  const { tabs: { Address } } = Profile\n\n  const save = useCallback(() => {\n    const error: ProfileAddressDataInterface = {\n      streetLine: null,\n      streetLine2: null,\n      city: null,\n      state: null,\n      postalCode: null,\n    }\n\n    if (Address.data.streetLine === null || Address.data.streetLine === \"\") {\n      error.streetLine = \"Street line can not be empty.\"\n    }\n\n    if (Address.data.postalCode === null || Address.data.postalCode === \"\") {\n      error.postalCode = \"Postal Code can not be empty.\"\n    }\n     \n    if (Address.data.city === null || Address.data.city === \"\") {\n      error.city = \"City can not be empty.\"\n    }\n     \n    if (Address.data.state === null || Address.data.state === \"\") {\n      error.state = \"State can not be empty.\"\n    }\n\n    updateContext(\"error\", error)\n    updateContext(\"success\", !calculateError(error))\n\n  },[Address.data, updateContext])\n\n  useEffect(() => {\n    updateContext(\"save\", save)\n    return () => {\n      save()\n    }\n  }, [Address.data])\n\n  const showError: boolean = useMemo(() => {\n    return calculateError(Address.error)\n  },[Address.error])\n\n  if (props.table) {\n    return <TableInfo {...props} />\n}\nconsole.log(\"Address\", {Address})\n    return (\n    <div className=\"col-xs-12\">\n      <Form>\n        <Container>\n            {\n              showError && (\n                <Row>\n                    <Col>\n                        <Alert color=\"danger\">\n                            error\n                        </Alert>\n                    </Col>\n                </Row>\n              )\n            }\n          <Row>\n            <Col xs=\"12\" sm=\"6\">\n              <FormGroup className=\"position-relative\">\n                <Label for=\"examplePassword\">Full Address</Label>\n                <Input \n                invalid={Address.error?.streetLine}\n                disabled={loading} value={Address.data.streetLine} onChange={(e) => {\n                  updateContext(\"streetLine\", e.target.value)\n                }}/>\n              </FormGroup>\n            </Col>\n            <Col xs=\"12\" sm=\"6\">\n              <FormGroup className=\"position-relative\">\n                <Label for=\"address2\">Address (line 2)</Label>\n                <Input\n                \n                disabled={loading} value={Address.data.streetLine2} id=\"address2\" onChange={(e) => {\n                  updateContext(\"streetLine2\", e.target.value)\n                }}/>\n              </FormGroup>\n            </Col> \n            <Col xs=\"12\" sm=\"4\" >\n              <FormGroup className=\"position-relative\">\n                <Label for=\"city\">City</Label>\n                <Input\n                invalid={Address.error?.city}\n                disabled={loading} value={Address.data.city} id=\"city\"  onChange={(e) => {\n                  updateContext(\"city\", e.target.value)\n                }}/>\n              </FormGroup>\n            </Col> \n            <Col xs=\"12\" sm=\"4\" >\n              <FormGroup className=\"position-relative\">\n                <Label for=\"State\">State</Label>\n                <Input\n                invalid={Address.error?.state}\n                disabled={loading} value={Address.data.state} id=\"State\" onChange={(e) => {\n                  updateContext(\"state\", e.target.value)\n                }} />\n              </FormGroup>\n            </Col> \n            <Col xs=\"12\" sm=\"4\" >\n              <FormGroup className=\"position-relative\">\n                <Label for=\"postalcode\">Postal code</Label>\n                <Input\n                invalid={Address.error?.postalCode}\n                disabled={loading} value={Address.data.postalCode} id=\"postalcode\" \n                 onChange={(e) => {\n                  updateContext(\"postalCode\", e.target.value)\n                }}/>\n              </FormGroup>\n            </Col> \n          </Row>\n          <Row>\n            <Col xs={{ size: 12, offset: 0 }} sm={{ size: 4, offset: 8 }}>\n                <Button color={loading ? '' : \"success\"} onClick={() => {\n                    if (!loading) {\n\n                      setLoading(true)\n                      validateAddress(Address.data)\n                      .then((r: any) => {\n                        setLoading(false)\n                        updateContext(\"error\", null)\n                      })\n                      .catch((err: any) => {\n                        updateContext(\"error\", err.response.data.message)\n                        setLoading(false)\n                      })\n                    }\n                     \n                }} \n                >\n                 {\n                   loading \n                    ? `Validating ...`\n                    : `Validate Address`\n                 } \n                </Button>\n            </Col> \n          </Row>\n        </Container>\n        </Form>\n    </div>\n  )}\n  \n  \n  export default Address",["216","217"],"/private/var/www/oberholtzermedia-form/src/components/Profile/PersonalInfo/index.tsx",["218","219"],"/private/var/www/oberholtzermedia-form/src/App.tsx",["220","221","222"],"/private/var/www/oberholtzermedia-form/src/context/Profile.Contex.tsx",[],"/private/var/www/oberholtzermedia-form/src/components/Profile/MedicareID/index.tsx",["223","224","225","226","227","228","229"],"import { useCallback, useContext, useEffect, useMemo, useState } from 'react';\nimport {\n  InputGroupAddon,\n  Button,\n  Form,\n  Col,\n  Row,\n  Alert,\n  Container,\n } from 'reactstrap';\nimport { AppContext } from '../../../context/App.Contex';\n\nimport TableInfo from \"./table\";\nimport FormItem from \"../../Form/Item\"\nimport { ProfileMedicareDataInterface } from '../../../context/Profile.Contex';\nimport { calculateError } from '../../../utils';\n\nconst MedicareID = (props:any) => {\n  const [loading, setLoading] = useState<boolean>(false)\n\n  const { activeTab, Profile, checkMedicare, registerFunction, updateContext, Error, setError, setActiveTab }  = useContext(AppContext)\n  const { tabs: { Medicare } } = Profile\n  const { tabs: { PersonalInfo } } = Profile\n  console.log({Medicare})\n  // const [internalError, setInternalError]  = useState<string | null>(null)\n\n  const save = useCallback(() => {\n    if (Medicare.data.memberID === \"\" || Medicare.data.memberID === null) {\n      updateContext(\"error\", \"Medicare ID can not be empty.\")\n    } else {\n      setLoading(true)\n      checkMedicare(PersonalInfo.data, Medicare.data)\n      .then((r: any) => {\n        updateContext(\"error\", r.EDIErrorMessage)\n        updateContext(\"success\", r.AddtionalInfo)\n        setLoading(false)\n      }).catch((err: any) => {\n        updateContext(\"success\", false)\n        updateContext(\"error\", err.response.data.message)\n        setLoading(false)\n      })\n    }\n  },[Medicare.data, PersonalInfo.data, checkMedicare, updateContext])\n\n  useEffect(() => {\n    updateContext(\"save\", save)\n    return () => {\n      save()\n    }\n  }, [PersonalInfo.data])\n\n\n  const showError: boolean = useMemo(() => {\n    return calculateError(Medicare.error)\n  },[Medicare.error])\n\n  if (props.table) {\n    return <TableInfo {...props} />\n  }\n\n  return (\n    <div className=\"col-xs-12\">\n      <Container>\n      {\n        (showError || Medicare.success) && !loading && (\n          <Row>\n              <Col>\n              {\n                Medicare.error && (<Alert color=\"danger\">\n                  <div dangerouslySetInnerHTML={{__html: JSON.stringify(Medicare.error)}} ></div>\n                  </Alert>)\n              }\n              {\n                Medicare.success && (<Alert color=\"success\">\n                  <div dangerouslySetInnerHTML={{__html: Medicare.success}} ></div>\n                  </Alert>)\n              }\n              </Col>\n          </Row>\n        )\n      }\n        <Row>\n          <Col xs=\"12\">\n            <Form >\n            <FormItem \n              label=\"Medicare ID\"\n                // error={Medicare.error}\n                onChange={(e: any) => {\n                  updateContext(\"memberID\", e.target.value)\n                }}\n                placeholder=\"Medicare ID\"\n                id=\"memberID\"\n                value={Medicare.data.memberID}\n                disabled={loading}\n                appendAddon={() => <InputGroupAddon addonType=\"append\">\n                <Button color={\n                    loading \n                      ? ``\n                      : `secondary`\n                  }  onClick={() => {\n                    if (!loading) {\n                       save()\n                    }\n                }}>\n                  {\n                    loading \n                      ? `Checking ...`\n                      : `Check Elgibility`\n                  } \n               </Button>\n              </InputGroupAddon>}\n              />\n            </Form>\n          </Col>\n        </Row>\n      </Container>\n    </div>\n  );\n}\n\n\nexport default MedicareID;","/private/var/www/oberholtzermedia-form/src/components/Profile/PrimaryCare/index.tsx",["230","231"],"import { useCallback, useContext, useEffect, useMemo, useState } from 'react';\nimport { InputGroup, DropdownToggle, DropdownItem, DropdownMenu, InputGroupButtonDropdown,  Container, Alert, Row, Col, Form, FormGroup, Label, Input } from 'reactstrap';\nimport { AppContext } from '../../../context/App.Contex';\nimport InputMask from 'react-input-mask';\nimport TableInfo from \"./table\"\nimport FormItem from \"../../Form/Item\"\nimport { ProfilePrimaryCareDataInterface } from '../../../context/Profile.Contex';\nimport { calculateError } from '../../../utils';\n\nconst PhysicianInformation = (props:any) => {\n  const { Profile, updateContext }  = useContext(AppContext)\n  const { tabs: { PrimaryCare } } = Profile\n\n  const [dropdownOpen, setDropdownOpen] = useState(false);\n  const [code, setCode] = useState(PrimaryCare.data.code || \"Area\")\n\n  const toggleDropDown = () => setDropdownOpen(!dropdownOpen);\n\n  const save = useCallback(() => {\n    const error: ProfilePrimaryCareDataInterface = {\n      fullName: null ,\n      phone: null \n    }\n\n    if (PrimaryCare.data.fullName === null || PrimaryCare.data.fullName === \"\" ) {\n      error.fullName = \"Name can not be empty.\"\n    }\n\n    if (PrimaryCare.data.phone === null || PrimaryCare.data.phone === \"\" ) {\n      error.phone = \"Name can not be empty.\"\n    }\n\n    updateContext(\"error\", error)\n    updateContext(\"success\", !calculateError(error))\n\n  },[PrimaryCare.data, updateContext])\n\n  useEffect(() => {\n    updateContext(\"save\", save)\n    return () => {\n      save()\n    }\n  }, [PrimaryCare.data])\n\n\n  const showError: boolean = useMemo(() => {\n    return calculateError(PrimaryCare.error)\n  },[PrimaryCare.error])\n\n\n  if (props.table) {\n    return <TableInfo {...props} />\n  }\n\n  return (\n  <div className=\"col-xs-12\">\n    <Form>\n      <Container>\n        {\n          showError && (\n              <Row>\n                  <Col>\n                      <Alert color=\"danger\">\n                         error\n                      </Alert>\n                  </Col>\n              </Row>\n          )\n        }\n        <Row>\n          <Col xs=\"12\" sm=\"6\">\n            <FormItem\n              label=\"Doctor Full name\"\n              id={`DoctorFullname`}\n              placeholder={\"Doctor Full name\"}\n              value={PrimaryCare.data.fullName}\n              error={PrimaryCare.error?.fullName}\n              onChange={(e: any) => {\n                updateContext(\"fullName\", e.target.value)\n              }}\n            />\n          </Col>\n          <Col xs=\"12\" sm=\"6\">\n          <Label for={`form-input-id-phone`}>Phone</Label>\n              <InputGroup>\n                <InputGroupButtonDropdown addonType=\"append\" isOpen={dropdownOpen} toggle={toggleDropDown}   >\n                  <DropdownToggle caret>\n                    {code}\n                  </DropdownToggle>\n                  <DropdownMenu>\n                    <DropdownItem header>Area</DropdownItem>\n                    <DropdownItem onClick={() => {\n                      setCode(\"+ 1\")\n                      updateContext(\"phoneCode\", \"+ 1\")\n                      }}>+ 1</DropdownItem>\n                    <DropdownItem onClick={() => {\n                      setCode(\"+ 778\")\n                      updateContext(\"phoneCode\", \"+ 778\")\n                      }}>+ 778</DropdownItem>\n                  </DropdownMenu>\n                </InputGroupButtonDropdown>\n                <Input\n                  type=\"tel\"\n                  mask=\"999 999 9999\"\n                  maskChar=\" \"\n                  id=\"form-input-id-phone\"\n                  value={PrimaryCare.data.phone} \n                  invalid={PrimaryCare.error?.phone}\n                  tag={InputMask}\n                  onChange={e => {\n                    updateContext(\"phone\", e.target.value)\n                  }}\n                />\n              </InputGroup>\n          </Col> \n        </Row>\n      </Container>\n      </Form>\n  </div>\n)}\n\n\nexport default PhysicianInformation","/private/var/www/oberholtzermedia-form/src/components/Profile/PrimaryCare/table.tsx",["232"],"import { useContext } from 'react';\nimport { Table } from 'reactstrap';\nimport { AppContext } from '../../../context/App.Contex';\nimport { ProfileInterface } from '../../../context/Profile.Contex';\n\nconst PrimaryCareTable = (props: any) => {\n  const { Profile }  = useContext(AppContext)\n  const { tabs: { PrimaryCare: {data: PrimaryCare} } } = Profile\n  return (\n    <Table size=\"sm\" responsive>\n      <thead>\n        <tr>\n          <th>Doctor fullname</th>\n          <th>Phone</th>\n        </tr>\n      </thead>\n      <tbody>\n        <tr>\n          <td>{PrimaryCare.fullName}</td>\n          <td>{PrimaryCare.phone}</td>\n        </tr>\n      </tbody>\n    </Table>\n  );\n}\n\nexport default PrimaryCareTable;","/private/var/www/oberholtzermedia-form/src/components/Profile/PersonalInfo/table.tsx",["233"],"/private/var/www/oberholtzermedia-form/src/components/Profile/Address/table.tsx",["234"],"import { useContext } from 'react';\nimport { Table } from 'reactstrap';\nimport { AppContext } from '../../../context/App.Contex';\nimport { ProfileInterface } from '../../../context/Profile.Contex';\n\nconst AddressTable = (props: any) => {\n  const { Profile }  = useContext(AppContext)\n  const { tabs: { Address : { data: Address} } } = Profile\n  \n  return (\n    <Table size=\"sm\" responsive>\n      <thead>\n        <tr>\n          <th>Full Address</th>\n        </tr>\n      </thead>\n      <tbody>\n        <tr>\n          <td>{`${Address.streetLine}, ${Address.city} - ${Address.state} ${Address.postalCode}`}</td>\n        </tr>\n      </tbody>\n    </Table>\n  );\n}\n\nexport default AddressTable;",["235","236"],"/private/var/www/oberholtzermedia-form/src/components/Profile/MedicareID/table.tsx",["237"],"import { useContext } from 'react';\nimport { Table } from 'reactstrap';\nimport { AppContext } from '../../../context/App.Contex';\nimport { ProfileInterface } from '../../../context/Profile.Contex';\n\nconst MedicareTable = (props: any) => {\n\n  const { Profile }  = useContext(AppContext)\n  const { tabs: { Medicare : { data: Medicare} } } = Profile\n\n  return (\n    <Table size=\"sm\" responsive>\n      <thead>\n        <tr>\n          <th>Medicare memberID</th>\n        </tr>\n      </thead>\n      <tbody>\n        <tr>\n          <td>{Medicare.memberID}</td>\n        </tr>\n      </tbody>\n    </Table>\n  );\n}\n\nexport default MedicareTable;","/private/var/www/oberholtzermedia-form/src/components/ProgressHeader.tsx",[],"/private/var/www/oberholtzermedia-form/src/context/App.Contex.tsx",[],["238","239"],"/private/var/www/oberholtzermedia-form/src/context/Tabs.Context.tsx",[],"/private/var/www/oberholtzermedia-form/src/actions/profile.ts",[],"/private/var/www/oberholtzermedia-form/src/index.tsx",[],["240","241"],"/private/var/www/oberholtzermedia-form/src/components/Progress.tsx",["242","243","244","245","246","247","248","249"],"import { TabItemInterface } from \"./TabHeader\";\nimport {\n  Container,\n  Row,\n  Col,\n  Button,\n  PopoverHeader,\n  PopoverBody,\n  UncontrolledPopover,\n} from \"reactstrap\";\nimport { useContext, useMemo } from \"react\";\nimport { AppContext } from \"../context/App.Contex\";\nimport { calculateError } from \"../utils\";\n\nconst PopoverContent = ({ tab }: any) => {\n  return (\n    <>\n      <PopoverHeader>\n        Error{\" \"}\n        <i style={{ color: \"#dc3545\" }} className=\"icon-attention-filled\"></i>\n      </PopoverHeader>\n      <PopoverBody>\n        {Object.values(tab.error).map((error: any) => (\n          <span>{error}</span>\n        ))}\n      </PopoverBody>\n    </>\n  );\n};\n\nconst MyProgress = () => {\n  const {\n    activeTab,\n    activePanel,\n    setCurrentPanel,\n    nextTab,\n    validateSubmitForm,\n    prevTab,\n    backToPrevTab,\n    goToNextTab,\n    setIsReviewingData,\n  } = useContext(AppContext);\n\n  if (!activePanel.isRequired && activePanel.index === 0) {\n    return <span />;\n  }\n  return (\n    <div className=\"progress_container\">\n      <Container>\n        <Row>\n          <Col className=\"progress_left_col\">\n            {Object.values(activeTab.tabs).map((tab: any, index: number) => {\n              const style = tab.success ? { color: \"#222\" } : {};\n              if (tab.id === activePanel.id) style.color = \"#409fff\";\n\n              const showError: boolean = calculateError(tab.error);\n\n              console.log({ tab }, { showError }, tab.error);\n              return (\n                <span\n                  style={style}\n                  onClick={() => {\n                    setCurrentPanel(tab);\n                  }}\n                  key={`profile-tab-index-progress-${index}`}\n                  id={`profile-tab-index-progress-${index}`}\n                >\n                  {index > 0 && ` | `}\n                  {tab.label}\n                  {showError && (\n                    <>\n                      <i\n                        style={{ color: \"#dc3545\" }}\n                        className=\"icon-attention-filled\"\n                      ></i>\n                      <UncontrolledPopover\n                        trigger=\"hover\"\n                        placement=\"left\"\n                        target={`profile-tab-index-progress-${index}`}\n                      >\n                        {({ scheduleUpdate }) => <PopoverContent tab={tab} />}\n                      </UncontrolledPopover>\n                    </>\n                  )}\n                  {tab.success && (\n                    <i style={{ color: \"#155724\" }} className=\"icon-ok-1\"></i>\n                  )}\n                </span>\n              );\n            })}\n          </Col>\n          <Col className=\"progress_right_col\">\n            {/* {\n                  activePanel.index > 0 && <Button onClick={() => {\n                     // setCurrentPanel(activeTab.tabs[activePanel.index - 1])\n                  }} type=\"button\" className=\"backward\"  size=\"sm\" name=\"prev\">Prev</Button>\n               }\n               {\n                  prevTab && activePanel.index === 0 && <Button onClick={backToPrevTab} type=\"button\" className=\"backward\" size=\"sm\" name=\"prev\">Back to {prevTab?.label}</Button>\n               } */}\n            <Button\n              onClick={activePanel.save}\n              type=\"button\"\n              color=\"success\"\n              size=\"sm\"\n              name=\"save\"\n            >\n              Save {activePanel.label}\n            </Button>\n            {/* {\n                 activePanel.index < activeTab.tabs.length - 1 && <Button onClick={() => {\n                  activePanel.save()\n                  // setCurrentPanel(activeTab.tabs[activePanel.index + 1])\n               }} tpe=\"button\" className=\"forward\"  size=\"sm\" name=\"save\">Save and Next</Button>\n               }\n               \n               {\n                 nextTab && activePanel.index === activeTab.tabs.length - 1 && <Button onClick={() => {\n                     activePanel.save()\n                     goToNextTab()\n                  }\n                  } type=\"button\" className=\"forward\" size=\"sm\" name=\"save\">Save and Go to {nextTab?.label}</Button>\n               }\n               {\n                 !nextTab && activePanel.index === activeTab.tabs.length - 1 && <Button type=\"button\" className=\"forward\" size=\"sm\" onClick={() => {\n                    console.log({validateSubmitForm})\n\n                    setIsReviewingData(true)}} name=\"save\">Save and Submit</Button>\n               }  */}\n          </Col>\n        </Row>\n      </Container>\n    </div>\n  );\n};\n\nexport default MyProgress;\n","/private/var/www/oberholtzermedia-form/src/components/Review/index.tsx",["250","251","252","253"],"/private/var/www/oberholtzermedia-form/src/reportWebVitals.ts",[],"/private/var/www/oberholtzermedia-form/src/components/Form/Item.tsx",[],"/private/var/www/oberholtzermedia-form/src/context/Diabetes.Contex.tsx",[],"/private/var/www/oberholtzermedia-form/src/components/Diabetes/Diagnostic/index.tsx",["254","255","256","257","258"],"/private/var/www/oberholtzermedia-form/src/components/Diabetes/BMI/index.tsx",["259","260","261","262","263","264","265"],"/private/var/www/oberholtzermedia-form/src/components/Diabetes/BMI/table.tsx",[],"/private/var/www/oberholtzermedia-form/src/components/Diabetes/FamilyMember/index.tsx",["266","267","268","269"],"import { useContext, useState } from 'react';\nimport DiabetesFamilyMemberForm from  \"../../Form/DiabetesFamilyMember\"\nimport { Container, Row, Col, Form, FormGroup, Label, Input,\n    Alert, Button } from 'reactstrap';\nimport { AppContext } from '../../../context/App.Contex';\nimport TableInfo from \"./table\"\nimport { familyMemberData, DiabetesFamilyMemberInterface } from '../../../context/Diabetes.Contex';\n\nimport { guidGenerator } from \"../../../utils\"\n\nconst DiabetesFamilyMemberComponent = (props:any) => {\n\n  const [loading, setLoading] = useState<boolean>(false)\n  const [limit, setLimit] = useState<number>(3)\n\n  const { Diabetes, updateContext }  = useContext(AppContext)\n  const { tabs: { FamilyMember }} = Diabetes\n\n    if (props.table) {\n        return <TableInfo {...props} />\n    }\n    return (\n    <div className=\"col-xs-12\">\n      <Form>\n        <Container>\n            {\n              FamilyMember.error && (\n                <Row>\n                    <Col>\n                        <Alert color=\"danger\">\n                            {FamilyMember.error}\n                        </Alert>\n                    </Col>\n                </Row>\n              )\n            }\n            {\n              FamilyMember.data.list.length > 0 && FamilyMember.data.list.map((FM: DiabetesFamilyMemberInterface, index: number) =>(\n                <Row key={`FamilyMemberDataInterface-${FM.id}`}>\n                  <Col xs=\"12\">\n                    <DiabetesFamilyMemberForm \n                      index={index}\n                      error={FamilyMember.error && FamilyMember.error[index]}\n                      id={`FamilyMemberDataInterface-id-${FM.id}`}\n                      success={false}\n                      onSave={(fm: DiabetesFamilyMemberInterface) => {\n                        FamilyMember.data.list[index] = fm;\n                        updateContext(\"list\",FamilyMember.data.list)\n                      }}\n                      loading={loading}\n                      disabled={loading}\n                      model={FM}\n                      onRemove={() => {\n                        FamilyMember.data.list.splice(index,1);\n                        updateContext(\"list\",FamilyMember.data.list)\n                        setLimit(limit + 1)\n                      }}\n                    />\n                  </Col>\n                </Row>\n              ))\n            }\n            {\n              ( limit > 0 ) && (\n                <Row>\n                  <Col xs=\"12\">\n                    <Button onClick={() => {\n                      updateContext(\"list\", [\n                        ...FamilyMember.data.list,\n                        {\n                          ...familyMemberData,\n                          id: guidGenerator()\n                        }\n                      ])\n                      setLimit(limit - 1)\n                    }}>Add Family Member</Button>\n                  </Col>\n                </Row>\n              )\n            }\n        </Container>\n      </Form>\n    </div>\n  )}\n  \n  \n  export default DiabetesFamilyMemberComponent","/private/var/www/oberholtzermedia-form/src/components/Diabetes/FamilyMember/table.tsx",[],"/private/var/www/oberholtzermedia-form/src/components/Diabetes/Diagnostic/table.tsx",["270"],"import { useContext } from 'react';\nimport { Table } from 'reactstrap';\nimport { AppContext } from '../../../context/App.Contex';\nimport { ProfileInterface } from '../../../context/Profile.Contex';\n\nconst AddressTable = (props: any) => {\n  const { Diabetes }  = useContext(AppContext)\n  const { tabs: { Diagnostic : { data: Diagnostic} } } = Diabetes\n  return (\n    <Table size=\"sm\" responsive>\n      <thead>\n        <tr>\n          <th>List of diagnostics</th>\n          <th>Is RCE Diabetes transfer</th>\n        </tr>\n      </thead>\n      <tbody>\n        <tr>\n          <td>{Diagnostic.list.join(\", \")}.</td>\n          <td>{Diagnostic.isRCEDiabetesTransfer ? 'Yes' : 'No'}</td>\n        </tr>\n      </tbody>\n    </Table>\n  );\n}\n\nexport default AddressTable;","/private/var/www/oberholtzermedia-form/src/components/Form/DiabetesFamilyMember.tsx",["271"],"/private/var/www/oberholtzermedia-form/src/components/Cardiac/FamilyMember/index.tsx",["272","273","274","275"],"import { useContext, useState } from 'react';\nimport CardiacFamilyMemberForm from  \"../../Form/CardiacFamilyMember\"\nimport { Container, Row, Col, Form, FormGroup, Label, Input,\n    Alert, Button } from 'reactstrap';\nimport { AppContext } from '../../../context/App.Contex';\nimport TableInfo from \"./table\"\nimport { familyMemberData, CardiacFamilyMemberInterface } from '../../../context/Cardiac.Contex';\nimport { guidGenerator } from '../../../utils';\n\n\nconst CardiacFamilyMemberComponent = (props:any) => {\n\n  const [loading, setLoading] = useState<boolean>(false)\n  const [limit, setLimit] = useState<number>(3)\n\n  const { Cardiac, updateContext }  = useContext(AppContext)\n  const { tabs: { FamilyMember }} = Cardiac\n\n\n    if (props.table) {\n        return <TableInfo {...props} />\n    }\n    return (\n    <div className=\"col-xs-12\">\n      <Form>\n        <Container>\n            {\n              FamilyMember.error && (\n                <Row>\n                    <Col>\n                        <Alert color=\"danger\">\n                            {FamilyMember.error}\n                        </Alert>\n                    </Col>\n                </Row>\n              )\n            }\n            {\n              FamilyMember.data.list.length > 0 && FamilyMember.data.list.map((FM: CardiacFamilyMemberInterface, index: number) =>(\n                <Row key={`CardiacFamilyMemberDataInterface-${FM.id}`}>\n                  <Col xs=\"12\">\n                    <CardiacFamilyMemberForm \n                      index={index}\n                      error={FamilyMember.error && FamilyMember.error[index]}\n                      id={`CardiacFamilyMemberDataInterface-id-${FM.id}`}\n                      success={false}\n                      onSave={(fm: CardiacFamilyMemberInterface) => {\n                        FamilyMember.data.list[index] = fm;\n                        updateContext(\"list\",FamilyMember.data.list)\n                      }}\n                      loading={loading}\n                      disabled={loading}\n                      model={FM}\n                      onRemove={() => {\n                        FamilyMember.data.list.splice(index,1);\n                        updateContext(\"list\",FamilyMember.data.list)\n                        setLimit(limit + 1)\n                      }}\n                    />\n                  </Col>\n                </Row>\n              ))\n            }\n            {\n              ( limit > 0 ) && (\n                <Row>\n                  <Col xs=\"12\">\n                    <Button onClick={() => {\n                      updateContext(\"list\", [\n                        ...FamilyMember.data.list,\n                        {\n                          ...familyMemberData,\n                          id: guidGenerator()\n                        }\n                      ])\n                      setLimit(limit - 1)\n                    }}>Add Family Member</Button>\n                  </Col>\n                </Row>\n              )\n            }\n        </Container>\n      </Form>\n    </div>\n  )}\n  \n  \n  export default CardiacFamilyMemberComponent","/private/var/www/oberholtzermedia-form/src/components/Form/CardiacFamilyMember.tsx",[],"/private/var/www/oberholtzermedia-form/src/components/Cardiac/FamilyMember/table.tsx",[],"/private/var/www/oberholtzermedia-form/src/context/Cardiac.Contex.tsx",[],"/private/var/www/oberholtzermedia-form/src/components/Cardiac/Diagnostic/index.tsx",["276","277","278","279","280","281"],"/private/var/www/oberholtzermedia-form/src/components/Cardiac/Diagnostic/table.tsx",["282","283","284"],"import { useContext } from 'react';\nimport { Table } from 'reactstrap';\nimport { AppContext } from '../../../context/App.Contex';\nimport { ProfileInterface } from '../../../context/Profile.Contex';\n\nconst AddressTable = (props: any) => {\n  const { Cardiac, updateContext, Error }  = useContext(AppContext)\n  const { tabs: { Diagnostic : { data: Diagnostic } } } = Cardiac\n  return (\n    <Table size=\"sm\" responsive>\n      <thead>\n        <tr>\n          <th>Diagnosed</th>\n          <th>Prescribed Medications</th>\n          <th>Diabetes Type</th>\n          <th>Prescribed medications and all OTC</th>\n          <th>Is RCE cardio transfer?</th>\n        </tr>\n      </thead>\n      <tbody>\n        <tr>\n          <td>{Diagnostic.typeOfCardiac.join(\", \")}.</td>\n          <td>{Diagnostic.prescribedMedications}</td>\n          <td>{Diagnostic.diabetesType}</td>\n          <td>{Diagnostic.OTC}</td>\n          <td>{Diagnostic.isRCECardioTransfer ? 'Yes' : 'No'}</td>\n        </tr>\n      </tbody>\n    </Table>\n  );\n}\n\nexport default AddressTable;",["285","286"],"/private/var/www/oberholtzermedia-form/src/components/Cancer/FamilyMember/index.tsx",["287","288","289","290","291"],"import { useContext, useState } from 'react';\nimport CancerFamilyMemberForm from  \"../../Form/CancerFamilyMember\"\nimport { Container, Row, Col, Form, FormGroup, Label, Input,\n    Alert, Button } from 'reactstrap';\nimport { AppContext } from '../../../context/App.Contex';\nimport TableInfo from \"./table\"\nimport { familyMemberData, CancerFamilyMemberInterface } from '../../../context/Cancer.Contex';\nimport { guidGenerator } from '../../../utils';\n\n\nconst CancerFamilyMemberComponent = (props:any) => {\n\n  const [loading, setLoading] = useState<boolean>(false)\n  const [limit, setLimit] = useState<number>(3)\n\n  const { Cancer, updateContext, Error }  = useContext(AppContext)\n  const { tabs: { FamilyMember }} = Cancer\n  \n    if (props.table) {\n        return <TableInfo {...props} />\n    }\n    return (\n    <div className=\"col-xs-12\">\n      <Form>\n        <Container>\n            {\n              FamilyMember.error && (\n                <Row>\n                    <Col>\n                        <Alert color=\"danger\">\n                            {FamilyMember.error}\n                        </Alert>\n                    </Col>\n                </Row>\n              )\n            }\n            {\n              FamilyMember.data.list.length > 0 && FamilyMember.data.list.map((FM: CancerFamilyMemberInterface, index: number) =>(\n                <Row key={`CancerFamilyMemberDataInterface-${FM.id}`}>\n                  <Col xs=\"12\">\n                    <CancerFamilyMemberForm \n                      index={index}\n                      error={FamilyMember.error && FamilyMember.error[index]}\n                      id={`CancerFamilyMemberDataInterface-id-${FM.id}`}\n                      success={false}\n                      onSave={(fm: CancerFamilyMemberInterface) => {\n                        FamilyMember.data.list[index] = fm;\n                        updateContext(\"list\",FamilyMember.data.list)\n                      }}\n                      loading={loading}\n                      disabled={loading}\n                      model={FM}\n                      onRemove={() => {\n                        FamilyMember.data.list.splice(index,1);\n                        updateContext(\"list\",FamilyMember.data.list)\n                        setLimit(limit + 1)\n                      }}\n                    />\n                  </Col>\n                </Row>\n              ))\n            }\n            {\n              ( limit > 0 ) && (\n                <Row>\n                  <Col xs=\"12\">\n                    <Button onClick={() => {\n                      updateContext(\"list\", [\n                        ...FamilyMember.data.list,\n                        {\n                          ...familyMemberData,\n                          id: guidGenerator()\n                        }\n                      ])\n                      setLimit(limit - 1)\n                    }}>Add Family Member</Button>\n                  </Col>\n                </Row>\n              )\n            }\n        </Container>\n      </Form>\n    </div>\n  )}\n  \n  \n  export default CancerFamilyMemberComponent","/private/var/www/oberholtzermedia-form/src/components/Cancer/Diagnostic/table.tsx",["292","293","294"],"import { useContext } from 'react';\nimport { Table } from 'reactstrap';\nimport { AppContext } from '../../../context/App.Contex';\nimport { ProfileInterface } from '../../../context/Profile.Contex';\n\nconst AddressTable = (props: any) => {\n  const { Cancer, updateContext, Error }  = useContext(AppContext)\n  const { tabs: { Diagnostic : { data: Diagnostic } } } = Cancer\n  return (\n    <Table size=\"sm\" responsive>\n      <thead>\n        <tr>\n          <th>Diagnosed</th>\n          <th>Prescribed Medications</th>\n          <th>Diabetes Type</th>\n          <th>Prescribed medications and all OTC</th>\n          <th>Is RCE Cancer transfer?</th>\n        </tr>\n      </thead>\n      <tbody>\n        <tr>\n          <td>{Diagnostic.indicationTest}</td>\n          <td>{Diagnostic.isDiagnosed ? 'Yes' : 'No'}</td>\n          <td>{Diagnostic.treatment}</td>\n          <td>{Diagnostic.OTC}</td>\n          <td>{Diagnostic.isRCECancerTransfer ? 'Yes' : 'No'}</td>\n        </tr>\n      </tbody>\n    </Table>\n  );\n}\n\nexport default AddressTable;","/private/var/www/oberholtzermedia-form/src/components/Cancer/FamilyMember/table.tsx",[],"/private/var/www/oberholtzermedia-form/src/components/Cancer/Diagnostic/index.tsx",["295","296","297","298","299","300"],"import { useCallback, useContext, useEffect, useState } from 'react';\nimport { Container, Row, Col, Form, FormGroup, Label, Input,\n    Alert, CustomInput, CardImgOverlay } from 'reactstrap';\nimport { AppContext } from '../../../context/App.Contex';\nimport TableInfo from \"./table\"\n\nimport { FamilyMemberHeartConditions, DiagnosedCancerList, TreatmentCancerList, CancerDiagnosticInterface } from \"../../../context/Cancer.Contex\"\nimport { calculateError } from '../../../utils';\n\nconst Diagnostic = (props:any) => {\n\n  const [loading, setLoading] = useState<boolean>(false)\n\n  const { Cancer, updateContext }  = useContext(AppContext)\n  const { tabs: { Diagnostic }} = Cancer\n\n\n  const save = useCallback(() => {\n    const error: CancerDiagnosticInterface = {\n      indicationTest: null,\n      isDiagnosed: null,\n      isRCECancerTransfer: null,\n      treatment: null,\n      OTC: null,\n    }\n    \n    if (Diagnostic.data.indicationTest === \"\") {\n      error.indicationTest = \"Indicated test can not be empty.\"\n    }\n\n    if (Diagnostic.data.OTC === \"\") {\n      error.OTC = \"OTC can not be empty.\"\n    }\n\n    updateContext(\"error\", error)\n    updateContext(\"success\", !calculateError(error))\n\n  },[Diagnostic.data])\n\n  useEffect(() => {\n    updateContext(\"save\", save)\n    return () => {\n      save()\n    }\n  }, [Diagnostic.data])\n\n  if (props.table) {\n      return <TableInfo {...props} />\n    }\n    return (\n    <div className=\"col-xs-12\">\n      <Form>\n        <Container>\n            {\n              calculateError(Diagnostic.error) && (\n                <Row>\n                    <Col>\n                        <Alert color=\"danger\">\n                            error\n                        </Alert>\n                    </Col>\n                </Row>\n              )\n            }\n          <Row>\n            <Col xs=\"12\">\n             <FormGroup>\n                <Label for=\"Cancer-FamilyMemberHeartConditions-indicationTest-1\"><b>Indication for testing selection</b></Label>\n                <div>\n                  {\n                    DiagnosedCancerList.map((type: any, index: number) => (\n                      <CustomInput\n                      inline\n                      onClick={(e: any) => {\n                        updateContext(\"indicationTest\", e.target.value)\n                      }}\n                      value={type.value}\n                      checked={Diagnostic.data.indicationTest === type.value}\n                      type=\"radio\" id={`Cancer-FamilyMemberHeartConditions-indicationTest-${index}`} key={`Cancer-FamilyMemberHeartConditions-indicationTest-${index}`} name=\"Cancer-FamilyMemberHeartConditions-indicationTest-Radio\" label={type.label} />\n                    ))\n                  }\n                </div>\n              </FormGroup>\n            </Col> \n            </Row>\n          <Row>\n            <Col xs=\"12\">\n             <FormGroup>\n                <Label for=\"Cancer-FamilyMemberHeartConditions-isDiagnosed-1\"><b>Have you ever been diagnosed with any type of cancer?</b></Label>\n                <div>\n                  {\n                    [\"Yes\", \"No\"].map((type: string, index: number) => (\n                      <CustomInput\n                      inline\n                      onClick={(e: any) => {\n                        updateContext(\"isDiagnosed\", e.target.value)\n                      }}\n                      value={type}\n                      checked={Diagnostic.data.isDiagnosed === type}\n                      type=\"radio\" id={`Cancer-FamilyMemberHeartConditions-isDiagnosed-${index}`} key={`Cancer-FamilyMemberHeartConditions-isDiagnosed-${index}`} name=\"Cancer-FamilyMemberHeartConditions-isDiagnosed-Radio\" label={type} />\n                    ))\n                  }\n                </div>\n              </FormGroup>\n            </Col> \n            </Row>\n          <Row>\n            <Col xs=\"12\">\n             <FormGroup>\n                <Label for=\"Cancer-FamilyMemberHeartConditions-treatment-1\"><b>Previous or current treatment</b></Label>\n                <div>\n                  {\n                    TreatmentCancerList.map((treatment: any, index: number) => (\n                      <CustomInput\n                      inline\n                      onClick={(e: any) => {\n                        updateContext(\"treatment\", e.target.value)\n                      }}\n                      value={treatment.value}\n                      checked={Diagnostic.data.treatment.value}\n                      type=\"radio\" id={`Cancer-FamilyMemberHeartConditions-treatment-${index}`} key={`Cancer-FamilyMemberHeartConditions-treatment-${index}`} name=\"Cancer-FamilyMemberHeartConditions-treatment-Radio\" label={treatment.label} />\n                    ))\n                  }\n                </div>\n              </FormGroup>\n            </Col> \n            </Row>\n          <Row>\n            <Col xs=\"12\">\n              <FormGroup>\n                <Label for=\"Cancer-FamilyMemberHeartConditions-OTC\"><b>List All medications, prescribed medications and all OTC:</b></Label>\n                <Input\n                  onChange={(e:any) => {\n                    updateContext(\"OTC\", e.target.value)\n                  }}\n                  value={Diagnostic.data.OTC}\n                  type=\"textarea\"\n                  name=\"text\"\n                  id=\"Cancer-FamilyMemberHeartConditions-OTC\" />\n              </FormGroup>\n            </Col>\n          </Row> \n          <Row>\n            <Col xs=\"12\">\n              <FormGroup>\n                <Label for=\"isRCECancerTransferCheckbox\"><b>Check here if doing a RCE Cancer transfer</b></Label>\n                <div>\n                  <CustomInput\n                    onClick={(e: any) => {\n                      updateContext(\"isRCECancerTransfer\", e.target.checked)\n                    }}\n                    checked={Diagnostic.data.isRCECancerTransfer}\n                    type=\"checkbox\"\n                    id=\"isRCECancerTransferCheckbox\"\n                    label=\"Yes, I'm.\" />\n                </div>\n              </FormGroup>\n            </Col>\n          </Row>\n        </Container>\n        </Form>\n    </div>\n  )}\n  \n  \n  export default Diagnostic","/private/var/www/oberholtzermedia-form/src/context/Cancer.Contex.tsx",[],"/private/var/www/oberholtzermedia-form/src/components/Form/CancerFamilyMember.tsx",["301"],"/private/var/www/oberholtzermedia-form/src/utils/index.ts",[],"/private/var/www/oberholtzermedia-form/src/components/SubmitFormModal/index.tsx",["302","303","304"],"/private/var/www/oberholtzermedia-form/src/components/ProgressBottom.tsx",["305","306","307","308","309","310","311"],"/private/var/www/oberholtzermedia-form/src/context/Agent.Contex.tsx",[],"/private/var/www/oberholtzermedia-form/src/components/Agent/Info/table.tsx",[],"/private/var/www/oberholtzermedia-form/src/components/Agent/Info/index.tsx",["312","313","314","315","316","317","318","319"],"import { useCallback, useContext, useEffect, useMemo, useState } from 'react';\nimport { Container, Row, Col, Form, FormGroup, Label, Input,\n    Alert, CustomInput } from 'reactstrap';\nimport { AppContext } from '../../../context/App.Contex';\nimport TableInfo from \"./table\"\n\nimport FormItem from \"../../Form/Item\"\nimport { calculateError } from '../../../utils';\n\nconst AgentInfo = (props:any) => {\n\n  const [loading, setLoading] = useState<boolean>(false)\n\n  const { Agent, updateContext }  = useContext(AppContext)\n\n  const { tabs: { Info } } = Agent\n\n  const showError: boolean = useMemo(() => {\n    return calculateError(Info.error)\n  },[Info.error])\n\n\n  const save = useCallback(() => {\n    const error: {\n      url: null | string;\n      name: null | string\n    } = {\n      url: null,\n      name: null\n    }\n    \n    if (Info.data.url === \"\") {\n      error.url = \"Url can not be empty.\"\n    }\n    \n    if (Info.data.name === \"\") {\n      error.name = \"Name can not be empty.\"\n    }\n\n    updateContext(\"error\", error)\n    updateContext(\"success\", !calculateError(error))\n\n  },[Info.data])\n\n  useEffect(() => {\n    updateContext(\"save\", save)\n    return () => {\n      save()\n    }\n  }, [Info.data])\n\n\n  if (props.table) {\n      return <TableInfo {...props} />\n    }\n\n\n    return (\n    <div className=\"col-xs-12\">\n      <Form>\n        <Container>\n            {\n              showError  && (\n                <Row>\n                    <Col>\n                        <Alert color=\"danger\">\n                            {Object.values(Info.error).join(\" \")}\n                        </Alert>\n                    </Col>\n                </Row>\n              )\n            }\n          <Row>\n            <Col xs=\"12\" sm=\"6\">\n              <FormItem\n                id={`agentUrlFormFamilyMember-url`}\n                label=\"Recording URL\" \n                value={Info.data.url}\n                error={Info.error?.url}\n                onChange={(e: any)=>{\n                  updateContext(\"url\", e.target.value)\n                }}/>\n            </Col>\n            <Col xs=\"12\" sm=\"6\">\n              <FormItem\n                id={`agentNameFormFamilyMember-name`}\n                label=\"Agent name\" \n                value={Info.data.name}\n                error={Info.error?.name || null}\n                onChange={(e: any)=>{\n                  updateContext(\"name\", e.target.value)\n                }}/>\n            </Col> \n            </Row>\n        </Container>\n        </Form>\n    </div>\n  )}\n  \n  \n  export default AgentInfo","/private/var/www/oberholtzermedia-form/src/components/templates/index.tsx",[],"/private/var/www/oberholtzermedia-form/src/actions/medicare.ts",["320","321"],"import axios from \"axios\";\nimport { token } from \"../context/Auth.Context\"\nimport { AppDataInterface } from \"../context/Tabs.Context\";\nimport { BASE_URL, BASE_URL_ECS } from \"./profile\";\n\ninterface saveDataInterface {\n    recordingUrl: string | null;\n    agentName: string | null;\n    firstName: string | null;\n    lastName: string | null;\n    contactNumber: string | null;\n    altContactNumber: string | null;\n    isCellphone?: boolean;\n    gender: string | null;\n    city: string | null;\n    state: string | null;\n    zip: string | null;\n    address: string | null;\n    address2: string | null;\n    email: string | null;\n    nursingHome: boolean;\n    birthDate: string | null;\n    alzheimerorDementia: boolean;\n    medicareId: string | null;\n    extendedMedicareLeadData: any;\n    salivaSwabTest: boolean;\n    height: string | null;\n    weight: string | null;\n    ethnicity: string | null;\n    diabetesInformation: {\n        diagnostics: Array<string | null>;\n        bmi: string | null;\n        familyMembers: Array<{\n            relationship: string | null;\n            name: string | null;\n            gender: string | null;\n            diagnostic: string | null;\n            birthDate: string | null;\n            age: string | null;\n        }>;\n        transfer: boolean\n    };\n    cancerInformation: {\n        indication: string | null;\n        diagnosticCancer: boolean;\n        treatment: string | null;\n        medications: string | null;\n        familyMembers: Array<{\n            relationship: string | null;\n            from: string | null;\n            type: string | null;\n            birthDate: string | null;\n            ageOfDiagnostic: string | null;\n        }>;\n        transfer: boolean\n    };\n    cardiacInformation: {\n        diagnostics: Array<string | null>;\n        prescribedMedicationsNitratesRenaxaNitrostat: boolean;\n        prescribedMedications: string | null;\n        diabetes: boolean;\n        diabetesType: string | null;\n        familyMembers: [\n        {\n            relationship: string | null;\n            from: string | null;\n            toAge: string | null;\n            diagnostics: Array<string | null>;\n            birthDate: string | null;\n            diabetes: boolean;\n            diabetesType: string | null;\n        }\n        ];\n        transfer: boolean\n    };\n    physicianInformation: {\n        doctorFullName: string | null;\n        contactPhone: string | null;\n        address: string | null;\n        address2: string | null;\n        city: string | null;\n        state: string | null;\n        zip: string | null;\n    }     \n}\n\n\n\nexport const submitForm = (AppData: any) => {\n    const axiosConfig = {\n        headers: {\n            'Content-Type': 'application/json;charset=UTF-8',\n            \"Authorization\": `Bearer ${token}`\n        }\n    };\n    debugger\n    const postData: saveDataInterface = {\n        recordingUrl: AppData.Agent.tabs.Info.data.url,\n        agentName: AppData.Agent.tabs.Info.data.name,\n        firstName: AppData.Profile.tabs.PersonalInfo.data.firstName,\n        lastName: AppData.Profile.tabs.PersonalInfo.data.lastName,\n        contactNumber: `${AppData.Profile.tabs.PersonalInfo.data.phoneCode}${AppData.Profile.tabs.PersonalInfo.data.phone}`,\n        altContactNumber: `${AppData.Profile.tabs.PersonalInfo.data.altPhoneCode}${AppData.Profile.tabs.PersonalInfo.data.altPhoneCode}`,\n        isCellphone:false,\n        gender: AppData.Profile.tabs.PersonalInfo.data.gender,\n        city: AppData.Profile.tabs.Address.data.city,\n        state: AppData.Profile.tabs.Address.data.streetLine,\n        zip: AppData.Profile.tabs.Address.data.postalCode,\n        address: AppData.Profile.tabs.Address.data.streetLine,\n        address2: AppData.Profile.tabs.Address.data.streetLine2,\n        email: AppData.Profile.tabs.PersonalInfo.data.email,\n        nursingHome:false,\n        birthDate: AppData.Profile.tabs.PersonalInfo.data.birthDate,\n        alzheimerorDementia:false,\n        medicareId: AppData.Profile.tabs.Medicare.data.memberID,\n        extendedMedicareLeadData: \"\",\n        salivaSwabTest:false,\n        height: \"\",\n        weight: \"\",\n        ethnicity: AppData.Profile.tabs.PersonalInfo.data.ethnicity,\n        diabetesInformation: {\n            diagnostics: AppData.Diabetes.tabs.Diagnostic.data.list,\n            bmi: AppData.Diabetes.tabs.BMI.data.value,\n            familyMembers: [],\n            transfer: AppData.Diabetes.tabs.Diagnostic.data.isRCEDiabetesTransfer\n        },\n        cancerInformation: {\n            indication: AppData.Cancer.tabs.Diagnostic.data.indicationTest,\n            diagnosticCancer:  false,//`${AppData.Cancer.Diagnostic.isDiagnosed}`,\n            treatment: AppData.Cancer.tabs.Diagnostic.data.treatment,\n            medications: AppData.Cancer.tabs.Diagnostic.data.OTC,\n            familyMembers: [],\n            transfer: AppData.Cancer.tabs.Diagnostic.data.isRCECancerTransfer\n        },\n        cardiacInformation: {\n            diagnostics: AppData.Cardiac.tabs.Diagnostic.data.typeOfCardiac,\n            prescribedMedicationsNitratesRenaxaNitrostat:false,\n            prescribedMedications: AppData.Cardiac.tabs.Diagnostic.data.prescribedMedications,\n            diabetes: (AppData.Cardiac.tabs.Diagnostic.data.diabetesType !== \"No\"),\n            diabetesType: AppData.Cardiac.tabs.Diagnostic.data.diabetesType,\n            familyMembers: [\n            {\n                relationship: \"\",\n                from: \"\",\n                toAge: \"\",\n                diagnostics: [],\n                birthDate: \"\",\n                diabetes:false,\n                diabetesType: \"\",\n            }\n            ],\n            transfer: AppData.Cardiac.tabs.Diagnostic.data.isRCECardioTransfer\n        },\n        physicianInformation: {\n            doctorFullName: AppData.Profile.tabs.PrimaryCare.data.fullName,\n            contactPhone: AppData.Profile.tabs.PrimaryCare.data.phone,\n            address: \"\",\n            address2: \"\",\n            city: \"\",\n            state: \"\",\n            zip: \"\",\n        }     \n    };\n      \n    return axios.post(`${BASE_URL_ECS}/medicare`, postData, axiosConfig)\n    .then((res: any) => res.json() )\n}\n","/private/var/www/oberholtzermedia-form/src/context/Auth.Context.tsx",[],{"ruleId":"322","severity":1,"message":"323","line":52,"column":6,"nodeType":"324","endLine":52,"endColumn":20,"suggestions":"325"},{"ruleId":"326","replacedBy":"327"},{"ruleId":"328","replacedBy":"329"},{"ruleId":"322","severity":1,"message":"330","line":101,"column":6,"nodeType":"324","endLine":101,"endColumn":50,"suggestions":"331"},{"ruleId":"322","severity":1,"message":"323","line":108,"column":6,"nodeType":"324","endLine":108,"endColumn":25,"suggestions":"332"},{"ruleId":"333","severity":1,"message":"334","line":3,"column":30,"nodeType":"335","messageId":"336","endLine":3,"endColumn":46},{"ruleId":"333","severity":1,"message":"337","line":22,"column":10,"nodeType":"335","messageId":"336","endLine":22,"endColumn":20},{"ruleId":"333","severity":1,"message":"338","line":57,"column":7,"nodeType":"335","messageId":"336","endLine":57,"endColumn":22},{"ruleId":"333","severity":1,"message":"339","line":15,"column":10,"nodeType":"335","messageId":"336","endLine":15,"endColumn":38},{"ruleId":"333","severity":1,"message":"340","line":21,"column":11,"nodeType":"335","messageId":"336","endLine":21,"endColumn":20},{"ruleId":"333","severity":1,"message":"341","line":21,"column":46,"nodeType":"335","messageId":"336","endLine":21,"endColumn":62},{"ruleId":"333","severity":1,"message":"342","line":21,"column":79,"nodeType":"335","messageId":"336","endLine":21,"endColumn":84},{"ruleId":"333","severity":1,"message":"343","line":21,"column":86,"nodeType":"335","messageId":"336","endLine":21,"endColumn":94},{"ruleId":"333","severity":1,"message":"344","line":21,"column":96,"nodeType":"335","messageId":"336","endLine":21,"endColumn":108},{"ruleId":"322","severity":1,"message":"323","line":50,"column":6,"nodeType":"324","endLine":50,"endColumn":25,"suggestions":"345"},{"ruleId":"333","severity":1,"message":"346","line":2,"column":127,"nodeType":"335","messageId":"336","endLine":2,"endColumn":136},{"ruleId":"322","severity":1,"message":"323","line":43,"column":6,"nodeType":"324","endLine":43,"endColumn":24,"suggestions":"347"},{"ruleId":"333","severity":1,"message":"348","line":4,"column":10,"nodeType":"335","messageId":"336","endLine":4,"endColumn":26},{"ruleId":"333","severity":1,"message":"348","line":4,"column":10,"nodeType":"335","messageId":"336","endLine":4,"endColumn":26},{"ruleId":"333","severity":1,"message":"348","line":4,"column":10,"nodeType":"335","messageId":"336","endLine":4,"endColumn":26},{"ruleId":"326","replacedBy":"349"},{"ruleId":"328","replacedBy":"350"},{"ruleId":"333","severity":1,"message":"348","line":4,"column":10,"nodeType":"335","messageId":"336","endLine":4,"endColumn":26},{"ruleId":"326","replacedBy":"351"},{"ruleId":"328","replacedBy":"352"},{"ruleId":"326","replacedBy":"353"},{"ruleId":"328","replacedBy":"354"},{"ruleId":"333","severity":1,"message":"334","line":1,"column":10,"nodeType":"335","messageId":"336","endLine":1,"endColumn":26},{"ruleId":"333","severity":1,"message":"355","line":11,"column":22,"nodeType":"335","messageId":"336","endLine":11,"endColumn":29},{"ruleId":"333","severity":1,"message":"356","line":36,"column":5,"nodeType":"335","messageId":"336","endLine":36,"endColumn":12},{"ruleId":"333","severity":1,"message":"357","line":37,"column":5,"nodeType":"335","messageId":"336","endLine":37,"endColumn":23},{"ruleId":"333","severity":1,"message":"358","line":38,"column":5,"nodeType":"335","messageId":"336","endLine":38,"endColumn":12},{"ruleId":"333","severity":1,"message":"359","line":39,"column":5,"nodeType":"335","messageId":"336","endLine":39,"endColumn":18},{"ruleId":"333","severity":1,"message":"360","line":40,"column":5,"nodeType":"335","messageId":"336","endLine":40,"endColumn":16},{"ruleId":"333","severity":1,"message":"361","line":41,"column":5,"nodeType":"335","messageId":"336","endLine":41,"endColumn":23},{"ruleId":"333","severity":1,"message":"362","line":13,"column":3,"nodeType":"335","messageId":"336","endLine":13,"endColumn":13},{"ruleId":"333","severity":1,"message":"363","line":14,"column":3,"nodeType":"335","messageId":"336","endLine":14,"endColumn":17},{"ruleId":"333","severity":1,"message":"364","line":15,"column":3,"nodeType":"335","messageId":"336","endLine":15,"endColumn":11},{"ruleId":"333","severity":1,"message":"365","line":62,"column":18,"nodeType":"335","messageId":"336","endLine":62,"endColumn":27},{"ruleId":"333","severity":1,"message":"366","line":3,"column":12,"nodeType":"335","messageId":"336","endLine":3,"endColumn":18},{"ruleId":"333","severity":1,"message":"367","line":12,"column":10,"nodeType":"335","messageId":"336","endLine":12,"endColumn":17},{"ruleId":"333","severity":1,"message":"368","line":12,"column":19,"nodeType":"335","messageId":"336","endLine":12,"endColumn":29},{"ruleId":"322","severity":1,"message":"369","line":38,"column":5,"nodeType":"324","endLine":38,"endColumn":22,"suggestions":"370"},{"ruleId":"322","severity":1,"message":"323","line":45,"column":6,"nodeType":"324","endLine":45,"endColumn":23,"suggestions":"371"},{"ruleId":"333","severity":1,"message":"346","line":3,"column":37,"nodeType":"335","messageId":"336","endLine":3,"endColumn":46},{"ruleId":"333","severity":1,"message":"372","line":3,"column":48,"nodeType":"335","messageId":"336","endLine":3,"endColumn":53},{"ruleId":"333","severity":1,"message":"373","line":3,"column":55,"nodeType":"335","messageId":"336","endLine":3,"endColumn":60},{"ruleId":"333","severity":1,"message":"366","line":4,"column":12,"nodeType":"335","messageId":"336","endLine":4,"endColumn":18},{"ruleId":"333","severity":1,"message":"368","line":13,"column":19,"nodeType":"335","messageId":"336","endLine":13,"endColumn":29},{"ruleId":"322","severity":1,"message":"369","line":38,"column":5,"nodeType":"324","endLine":38,"endColumn":15,"suggestions":"374"},{"ruleId":"322","severity":1,"message":"323","line":45,"column":6,"nodeType":"324","endLine":45,"endColumn":16,"suggestions":"375"},{"ruleId":"333","severity":1,"message":"346","line":3,"column":37,"nodeType":"335","messageId":"336","endLine":3,"endColumn":46},{"ruleId":"333","severity":1,"message":"372","line":3,"column":48,"nodeType":"335","messageId":"336","endLine":3,"endColumn":53},{"ruleId":"333","severity":1,"message":"373","line":3,"column":55,"nodeType":"335","messageId":"336","endLine":3,"endColumn":60},{"ruleId":"333","severity":1,"message":"368","line":13,"column":19,"nodeType":"335","messageId":"336","endLine":13,"endColumn":29},{"ruleId":"333","severity":1,"message":"348","line":4,"column":10,"nodeType":"335","messageId":"336","endLine":4,"endColumn":26},{"ruleId":"333","severity":1,"message":"376","line":2,"column":31,"nodeType":"335","messageId":"336","endLine":2,"endColumn":35},{"ruleId":"333","severity":1,"message":"346","line":3,"column":37,"nodeType":"335","messageId":"336","endLine":3,"endColumn":46},{"ruleId":"333","severity":1,"message":"372","line":3,"column":48,"nodeType":"335","messageId":"336","endLine":3,"endColumn":53},{"ruleId":"333","severity":1,"message":"373","line":3,"column":55,"nodeType":"335","messageId":"336","endLine":3,"endColumn":60},{"ruleId":"333","severity":1,"message":"368","line":13,"column":19,"nodeType":"335","messageId":"336","endLine":13,"endColumn":29},{"ruleId":"333","severity":1,"message":"377","line":3,"column":25,"nodeType":"335","messageId":"336","endLine":3,"endColumn":39},{"ruleId":"333","severity":1,"message":"378","line":7,"column":10,"nodeType":"335","messageId":"336","endLine":7,"endColumn":30},{"ruleId":"333","severity":1,"message":"367","line":12,"column":10,"nodeType":"335","messageId":"336","endLine":12,"endColumn":17},{"ruleId":"333","severity":1,"message":"368","line":12,"column":19,"nodeType":"335","messageId":"336","endLine":12,"endColumn":29},{"ruleId":"322","severity":1,"message":"369","line":36,"column":5,"nodeType":"324","endLine":36,"endColumn":22,"suggestions":"379"},{"ruleId":"322","severity":1,"message":"323","line":43,"column":6,"nodeType":"324","endLine":43,"endColumn":23,"suggestions":"380"},{"ruleId":"333","severity":1,"message":"348","line":4,"column":10,"nodeType":"335","messageId":"336","endLine":4,"endColumn":26},{"ruleId":"333","severity":1,"message":"381","line":7,"column":20,"nodeType":"335","messageId":"336","endLine":7,"endColumn":33},{"ruleId":"333","severity":1,"message":"342","line":7,"column":35,"nodeType":"335","messageId":"336","endLine":7,"endColumn":40},{"ruleId":"326","replacedBy":"382"},{"ruleId":"328","replacedBy":"383"},{"ruleId":"333","severity":1,"message":"346","line":3,"column":37,"nodeType":"335","messageId":"336","endLine":3,"endColumn":46},{"ruleId":"333","severity":1,"message":"372","line":3,"column":48,"nodeType":"335","messageId":"336","endLine":3,"endColumn":53},{"ruleId":"333","severity":1,"message":"373","line":3,"column":55,"nodeType":"335","messageId":"336","endLine":3,"endColumn":60},{"ruleId":"333","severity":1,"message":"368","line":13,"column":19,"nodeType":"335","messageId":"336","endLine":13,"endColumn":29},{"ruleId":"333","severity":1,"message":"342","line":16,"column":34,"nodeType":"335","messageId":"336","endLine":16,"endColumn":39},{"ruleId":"333","severity":1,"message":"348","line":4,"column":10,"nodeType":"335","messageId":"336","endLine":4,"endColumn":26},{"ruleId":"333","severity":1,"message":"381","line":7,"column":19,"nodeType":"335","messageId":"336","endLine":7,"endColumn":32},{"ruleId":"333","severity":1,"message":"342","line":7,"column":34,"nodeType":"335","messageId":"336","endLine":7,"endColumn":39},{"ruleId":"333","severity":1,"message":"377","line":3,"column":25,"nodeType":"335","messageId":"336","endLine":3,"endColumn":39},{"ruleId":"333","severity":1,"message":"384","line":7,"column":10,"nodeType":"335","messageId":"336","endLine":7,"endColumn":37},{"ruleId":"333","severity":1,"message":"367","line":12,"column":10,"nodeType":"335","messageId":"336","endLine":12,"endColumn":17},{"ruleId":"333","severity":1,"message":"368","line":12,"column":19,"nodeType":"335","messageId":"336","endLine":12,"endColumn":29},{"ruleId":"322","severity":1,"message":"369","line":38,"column":5,"nodeType":"324","endLine":38,"endColumn":22,"suggestions":"385"},{"ruleId":"322","severity":1,"message":"323","line":45,"column":6,"nodeType":"324","endLine":45,"endColumn":23,"suggestions":"386"},{"ruleId":"333","severity":1,"message":"384","line":4,"column":39,"nodeType":"335","messageId":"336","endLine":4,"endColumn":66},{"ruleId":"333","severity":1,"message":"387","line":2,"column":22,"nodeType":"335","messageId":"336","endLine":2,"endColumn":31},{"ruleId":"333","severity":1,"message":"337","line":4,"column":10,"nodeType":"335","messageId":"336","endLine":4,"endColumn":20},{"ruleId":"333","severity":1,"message":"388","line":8,"column":11,"nodeType":"335","messageId":"336","endLine":8,"endColumn":22},{"ruleId":"333","severity":1,"message":"334","line":1,"column":10,"nodeType":"335","messageId":"336","endLine":1,"endColumn":26},{"ruleId":"333","severity":1,"message":"389","line":9,"column":3,"nodeType":"335","messageId":"336","endLine":9,"endColumn":22},{"ruleId":"333","severity":1,"message":"390","line":14,"column":7,"nodeType":"335","messageId":"336","endLine":14,"endColumn":21},{"ruleId":"333","severity":1,"message":"391","line":27,"column":23,"nodeType":"335","messageId":"336","endLine":27,"endColumn":37},{"ruleId":"333","severity":1,"message":"358","line":28,"column":7,"nodeType":"335","messageId":"336","endLine":28,"endColumn":14},{"ruleId":"333","severity":1,"message":"359","line":28,"column":16,"nodeType":"335","messageId":"336","endLine":28,"endColumn":29},{"ruleId":"333","severity":1,"message":"360","line":28,"column":31,"nodeType":"335","messageId":"336","endLine":28,"endColumn":42},{"ruleId":"333","severity":1,"message":"346","line":2,"column":37,"nodeType":"335","messageId":"336","endLine":2,"endColumn":46},{"ruleId":"333","severity":1,"message":"372","line":2,"column":48,"nodeType":"335","messageId":"336","endLine":2,"endColumn":53},{"ruleId":"333","severity":1,"message":"373","line":2,"column":55,"nodeType":"335","messageId":"336","endLine":2,"endColumn":60},{"ruleId":"333","severity":1,"message":"392","line":3,"column":12,"nodeType":"335","messageId":"336","endLine":3,"endColumn":23},{"ruleId":"333","severity":1,"message":"367","line":12,"column":10,"nodeType":"335","messageId":"336","endLine":12,"endColumn":17},{"ruleId":"333","severity":1,"message":"368","line":12,"column":19,"nodeType":"335","messageId":"336","endLine":12,"endColumn":29},{"ruleId":"322","severity":1,"message":"369","line":43,"column":5,"nodeType":"324","endLine":43,"endColumn":16,"suggestions":"393"},{"ruleId":"322","severity":1,"message":"323","line":50,"column":6,"nodeType":"324","endLine":50,"endColumn":17,"suggestions":"394"},{"ruleId":"333","severity":1,"message":"395","line":3,"column":10,"nodeType":"335","messageId":"336","endLine":3,"endColumn":26},{"ruleId":"333","severity":1,"message":"396","line":4,"column":10,"nodeType":"335","messageId":"336","endLine":4,"endColumn":18},"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'save' and 'updateContext'. Either include them or remove the dependency array.","ArrayExpression",["397"],"no-native-reassign",["398"],"no-negated-in-lhs",["399"],"React Hook useCallback has missing dependencies: 'PersonalInfo.data.birthDate', 'PersonalInfo.data.email', 'PersonalInfo.data.lastName', and 'PersonalInfo.data.phone'. Either include them or remove the dependency array.",["400"],["401"],"@typescript-eslint/no-unused-vars","'TabItemInterface' is defined but never used.","Identifier","unusedVar","'submitForm' is defined but never used.","'reversePopulate' is assigned a value but never used.","'ProfileMedicareDataInterface' is defined but never used.","'activeTab' is assigned a value but never used.","'registerFunction' is assigned a value but never used.","'Error' is assigned a value but never used.","'setError' is assigned a value but never used.","'setActiveTab' is assigned a value but never used.",["402"],"'FormGroup' is defined but never used.",["403"],"'ProfileInterface' is defined but never used.",["398"],["399"],["398"],["399"],["398"],["399"],"'useMemo' is defined but never used.","'nextTab' is assigned a value but never used.","'validateSubmitForm' is assigned a value but never used.","'prevTab' is assigned a value but never used.","'backToPrevTab' is assigned a value but never used.","'goToNextTab' is assigned a value but never used.","'setIsReviewingData' is assigned a value but never used.","'Breadcrumb' is defined but never used.","'BreadcrumbItem' is defined but never used.","'Collapse' is defined but never used.","'setTables' is assigned a value but never used.","'Button' is defined but never used.","'loading' is assigned a value but never used.","'setLoading' is assigned a value but never used.","React Hook useCallback has a missing dependency: 'updateContext'. Either include it or remove the dependency array.",["404"],["405"],"'Label' is defined but never used.","'Input' is defined but never used.",["406"],["407"],"'Form' is defined but never used.","'CardImgOverlay' is defined but never used.","'CardiacDataInterface' is defined but never used.",["408"],["409"],"'updateContext' is assigned a value but never used.",["398"],["399"],"'FamilyMemberHeartConditions' is defined but never used.",["410"],["411"],"'useEffect' is defined but never used.","'ContextData' is assigned a value but never used.","'UncontrolledPopover' is defined but never used.","'PopoverContent' is assigned a value but never used.","'setActivePanel' is assigned a value but never used.","'CustomInput' is defined but never used.",["412"],["413"],"'AppDataInterface' is defined but never used.","'BASE_URL' is defined but never used.",{"desc":"414","fix":"415"},"no-global-assign","no-unsafe-negation",{"desc":"416","fix":"417"},{"desc":"418","fix":"419"},{"desc":"418","fix":"420"},{"desc":"421","fix":"422"},{"desc":"423","fix":"424"},{"desc":"425","fix":"426"},{"desc":"427","fix":"428"},{"desc":"429","fix":"430"},{"desc":"431","fix":"432"},{"desc":"425","fix":"433"},{"desc":"434","fix":"435"},{"desc":"425","fix":"436"},{"desc":"437","fix":"438"},{"desc":"439","fix":"440"},"Update the dependencies array to be: [Address.data, save, updateContext]",{"range":"441","text":"442"},"Update the dependencies array to be: [PersonalInfo.data.birthDate, PersonalInfo.data.email, PersonalInfo.data.firstName, PersonalInfo.data.lastName, PersonalInfo.data.phone, updateContext]",{"range":"443","text":"444"},"Update the dependencies array to be: [PersonalInfo.data, save, updateContext]",{"range":"445","text":"446"},{"range":"447","text":"446"},"Update the dependencies array to be: [PrimaryCare.data, save, updateContext]",{"range":"448","text":"449"},"Update the dependencies array to be: [Diagnostic.data.list.length, updateContext]",{"range":"450","text":"451"},"Update the dependencies array to be: [Diagnostic.data, save, updateContext]",{"range":"452","text":"453"},"Update the dependencies array to be: [BMI.data.value, updateContext]",{"range":"454","text":"455"},"Update the dependencies array to be: [BMI.data, save, updateContext]",{"range":"456","text":"457"},"Update the dependencies array to be: [Diagnostic.data.typeOfCardiac.length, updateContext]",{"range":"458","text":"459"},{"range":"460","text":"453"},"Update the dependencies array to be: [Diagnostic.data.OTC, Diagnostic.data.indicationTest, updateContext]",{"range":"461","text":"462"},{"range":"463","text":"453"},"Update the dependencies array to be: [Info.data.name, Info.data.url, updateContext]",{"range":"464","text":"465"},"Update the dependencies array to be: [Info.data, save, updateContext]",{"range":"466","text":"467"},[1562,1576],"[Address.data, save, updateContext]",[2617,2661],"[PersonalInfo.data.birthDate, PersonalInfo.data.email, PersonalInfo.data.firstName, PersonalInfo.data.lastName, PersonalInfo.data.phone, updateContext]",[2763,2782],"[PersonalInfo.data, save, updateContext]",[1616,1635],[1525,1543],"[PrimaryCare.data, save, updateContext]",[1132,1149],"[Diagnostic.data.list.length, updateContext]",[1247,1264],"[Diagnostic.data, save, updateContext]",[1091,1101],"[BMI.data.value, updateContext]",[1199,1209],"[BMI.data, save, updateContext]",[1207,1224],"[Diagnostic.data.typeOfCardiac.length, updateContext]",[1322,1339],[1194,1211],"[Diagnostic.data.OTC, Diagnostic.data.indicationTest, updateContext]",[1309,1326],[1079,1090],"[Info.data.name, Info.data.url, updateContext]",[1188,1199],"[Info.data, save, updateContext]"]