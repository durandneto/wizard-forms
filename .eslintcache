[{"/private/var/www/oberholtzermedia-form/src/components/Profile/Address/index.tsx":"1","/private/var/www/oberholtzermedia-form/src/components/Profile/PersonalInfo/index.tsx":"2","/private/var/www/oberholtzermedia-form/src/App.tsx":"3","/private/var/www/oberholtzermedia-form/src/context/Profile.Contex.tsx":"4","/private/var/www/oberholtzermedia-form/src/components/Profile/MedicareID/index.tsx":"5","/private/var/www/oberholtzermedia-form/src/components/Profile/PrimaryCare/index.tsx":"6","/private/var/www/oberholtzermedia-form/src/components/Profile/PrimaryCare/table.tsx":"7","/private/var/www/oberholtzermedia-form/src/components/Profile/PersonalInfo/table.tsx":"8","/private/var/www/oberholtzermedia-form/src/components/Profile/Address/table.tsx":"9","/private/var/www/oberholtzermedia-form/src/components/Profile/MedicareID/table.tsx":"10","/private/var/www/oberholtzermedia-form/src/components/ProgressHeader.tsx":"11","/private/var/www/oberholtzermedia-form/src/context/App.Contex.tsx":"12","/private/var/www/oberholtzermedia-form/src/context/Tabs.Context.tsx":"13","/private/var/www/oberholtzermedia-form/src/actions/profile.ts":"14","/private/var/www/oberholtzermedia-form/src/index.tsx":"15","/private/var/www/oberholtzermedia-form/src/components/Progress.tsx":"16","/private/var/www/oberholtzermedia-form/src/components/Profile/index.tsx":"17","/private/var/www/oberholtzermedia-form/src/components/Review/index.tsx":"18","/private/var/www/oberholtzermedia-form/src/reportWebVitals.ts":"19","/private/var/www/oberholtzermedia-form/src/components/Form/Item.tsx":"20","/private/var/www/oberholtzermedia-form/src/components/Diabetes/index.tsx":"21","/private/var/www/oberholtzermedia-form/src/context/Diabetes.Contex.tsx":"22","/private/var/www/oberholtzermedia-form/src/components/Diabetes/Diagnostic/index.tsx":"23","/private/var/www/oberholtzermedia-form/src/components/Diabetes/BMI/index.tsx":"24","/private/var/www/oberholtzermedia-form/src/components/Diabetes/BMI/table.tsx":"25","/private/var/www/oberholtzermedia-form/src/components/Diabetes/FamilyMember/index.tsx":"26","/private/var/www/oberholtzermedia-form/src/components/Diabetes/FamilyMember/table.tsx":"27","/private/var/www/oberholtzermedia-form/src/components/Diabetes/Diagnostic/table.tsx":"28","/private/var/www/oberholtzermedia-form/src/components/Form/DiabetesFamilyMember.tsx":"29","/private/var/www/oberholtzermedia-form/src/components/Cardiac/FamilyMember/index.tsx":"30","/private/var/www/oberholtzermedia-form/src/components/Form/CardiacFamilyMember.tsx":"31","/private/var/www/oberholtzermedia-form/src/components/Cardiac/FamilyMember/table.tsx":"32","/private/var/www/oberholtzermedia-form/src/context/Cardiac.Contex.tsx":"33","/private/var/www/oberholtzermedia-form/src/components/Cardiac/Diagnostic/index.tsx":"34","/private/var/www/oberholtzermedia-form/src/components/Cardiac/Diagnostic/table.tsx":"35","/private/var/www/oberholtzermedia-form/src/components/Cancer/FamilyMember/index.tsx":"36","/private/var/www/oberholtzermedia-form/src/components/Cancer/Diagnostic/table.tsx":"37","/private/var/www/oberholtzermedia-form/src/components/Cancer/FamilyMember/table.tsx":"38","/private/var/www/oberholtzermedia-form/src/components/Cancer/Diagnostic/index.tsx":"39","/private/var/www/oberholtzermedia-form/src/context/Cancer.Contex.tsx":"40","/private/var/www/oberholtzermedia-form/src/components/Form/CancerFamilyMember.tsx":"41","/private/var/www/oberholtzermedia-form/src/components/Cardiac/index.tsx":"42","/private/var/www/oberholtzermedia-form/src/utils/index.ts":"43","/private/var/www/oberholtzermedia-form/src/components/Cancer/index.tsx":"44","/private/var/www/oberholtzermedia-form/src/components/SubmitFormModal/index.tsx":"45"},{"size":3802,"mtime":1612968269846,"results":"46","hashOfConfig":"47"},{"size":9767,"mtime":1613079558746,"results":"48","hashOfConfig":"47"},{"size":9982,"mtime":1613143676950,"results":"49","hashOfConfig":"47"},{"size":3292,"mtime":1612972860131,"results":"50","hashOfConfig":"47"},{"size":3454,"mtime":1613001381126,"results":"51","hashOfConfig":"47"},{"size":2900,"mtime":1613001302524,"results":"52","hashOfConfig":"47"},{"size":672,"mtime":1612968584170,"results":"53","hashOfConfig":"47"},{"size":1258,"mtime":1613079558746,"results":"54","hashOfConfig":"47"},{"size":649,"mtime":1612968423777,"results":"55","hashOfConfig":"47"},{"size":594,"mtime":1612968539338,"results":"56","hashOfConfig":"47"},{"size":544,"mtime":1613143561414,"results":"57","hashOfConfig":"47"},{"size":89,"mtime":1612819422010,"results":"58","hashOfConfig":"47"},{"size":359,"mtime":1613137571033,"results":"59","hashOfConfig":"47"},{"size":1225,"mtime":1613079558746,"results":"60","hashOfConfig":"47"},{"size":500,"mtime":1612288231247,"results":"61","hashOfConfig":"47"},{"size":3809,"mtime":1612972167375,"results":"62","hashOfConfig":"47"},{"size":1041,"mtime":1612902196665,"results":"63","hashOfConfig":"47"},{"size":7500,"mtime":1613142505816,"results":"64","hashOfConfig":"47"},{"size":425,"mtime":1612288231251,"results":"65","hashOfConfig":"47"},{"size":686,"mtime":1613001356181,"results":"66","hashOfConfig":"47"},{"size":1041,"mtime":1613066336415,"results":"67","hashOfConfig":"47"},{"size":2643,"mtime":1613137512319,"results":"68","hashOfConfig":"47"},{"size":3112,"mtime":1613135953058,"results":"69","hashOfConfig":"47"},{"size":1495,"mtime":1613088148436,"results":"70","hashOfConfig":"47"},{"size":490,"mtime":1613068760477,"results":"71","hashOfConfig":"47"},{"size":3203,"mtime":1613090270692,"results":"72","hashOfConfig":"47"},{"size":986,"mtime":1613080193643,"results":"73","hashOfConfig":"47"},{"size":742,"mtime":1613135991652,"results":"74","hashOfConfig":"47"},{"size":6040,"mtime":1613089900625,"results":"75","hashOfConfig":"47"},{"size":3202,"mtime":1613090249895,"results":"76","hashOfConfig":"47"},{"size":6476,"mtime":1613093128345,"results":"77","hashOfConfig":"47"},{"size":1007,"mtime":1613088677376,"results":"78","hashOfConfig":"47"},{"size":4086,"mtime":1613137497419,"results":"79","hashOfConfig":"47"},{"size":6173,"mtime":1613135735667,"results":"80","hashOfConfig":"47"},{"size":1005,"mtime":1613135699665,"results":"81","hashOfConfig":"47"},{"size":3184,"mtime":1613140685792,"results":"82","hashOfConfig":"47"},{"size":994,"mtime":1613140221741,"results":"83","hashOfConfig":"47"},{"size":913,"mtime":1613141749962,"results":"84","hashOfConfig":"47"},{"size":5408,"mtime":1613140033524,"results":"85","hashOfConfig":"47"},{"size":4228,"mtime":1613141801339,"results":"86","hashOfConfig":"47"},{"size":6514,"mtime":1613141819593,"results":"87","hashOfConfig":"47"},{"size":1041,"mtime":1613087117325,"results":"88","hashOfConfig":"47"},{"size":215,"mtime":1613090101515,"results":"89","hashOfConfig":"47"},{"size":1041,"mtime":1613137427705,"results":"90","hashOfConfig":"47"},{"size":659,"mtime":1613143805748,"results":"91","hashOfConfig":"47"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},"1j9z5km",{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"97"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"105","messages":"106","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"107","usedDeprecatedRules":"108"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"111","usedDeprecatedRules":"112"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"115","usedDeprecatedRules":"94"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"118","usedDeprecatedRules":"119"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"122","usedDeprecatedRules":"94"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"97"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"97"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"97"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"139","messages":"140","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"143","messages":"144","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"147","messages":"148","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"149","usedDeprecatedRules":"112"},{"filePath":"150","messages":"151","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"152","usedDeprecatedRules":"112"},{"filePath":"153","messages":"154","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"97"},{"filePath":"155","messages":"156","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"157","usedDeprecatedRules":"94"},{"filePath":"158","messages":"159","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"160","messages":"161","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"162","usedDeprecatedRules":"112"},{"filePath":"163","messages":"164","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"165","usedDeprecatedRules":"97"},{"filePath":"166","messages":"167","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"168","usedDeprecatedRules":"108"},{"filePath":"169","messages":"170","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"171","messages":"172","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"173","messages":"174","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"97"},{"filePath":"175","messages":"176","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"177","messages":"178","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"179","messages":"180","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"181","messages":"182","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"183","usedDeprecatedRules":"112"},{"filePath":"184","messages":"185","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"186","messages":"187","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"188","usedDeprecatedRules":"97"},{"filePath":"189","messages":"190","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"191","messages":"192","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"193","messages":"194","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"195","messages":"196","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"197","messages":"198","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"199","messages":"200","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/private/var/www/oberholtzermedia-form/src/components/Profile/Address/index.tsx",[],["201","202"],"/private/var/www/oberholtzermedia-form/src/components/Profile/PersonalInfo/index.tsx",[],["203","204"],"/private/var/www/oberholtzermedia-form/src/App.tsx",[],"/private/var/www/oberholtzermedia-form/src/context/Profile.Contex.tsx",[],["205","206"],"/private/var/www/oberholtzermedia-form/src/components/Profile/MedicareID/index.tsx",[],"/private/var/www/oberholtzermedia-form/src/components/Profile/PrimaryCare/index.tsx",["207"],"import { useContext, useState } from 'react';\nimport { InputGroup, DropdownToggle, DropdownItem, DropdownMenu, InputGroupButtonDropdown,  Container, Alert, Row, Col, Form, FormGroup, Label, Input } from 'reactstrap';\nimport { AppContext } from '../../../context/App.Contex';\nimport InputMask from 'react-input-mask';\nimport TableInfo from \"./table\"\nimport FormItem from \"../../Form/Item\"\n\nconst PhysicianInformation = (props:any) => {\n  const { Profile, updateContext }  = useContext(AppContext)\n  const { PrimaryCare } = Profile\n\n\n  const [dropdownOpen, setDropdownOpen] = useState(false);\n  const [code, setCode] = useState(PrimaryCare.code || \"Area\")\n\n  const toggleDropDown = () => setDropdownOpen(!dropdownOpen);\n  \n  if (props.table) {\n    return <TableInfo {...props} />\n  }\n  return (\n  <div className=\"col-xs-12\">\n    <Form>\n      <Container>\n        {\n          props.error && (\n              <Row>\n                  <Col>\n                      <Alert color=\"danger\">\n                          {props.error}\n                      </Alert>\n                  </Col>\n              </Row>\n          )\n        }\n        <Row>\n          <Col xs=\"12\" sm=\"6\">\n            <FormItem\n              label=\"Doctor Full name\"\n              id={`DoctorFullname`}\n              placeholder={\"Doctor Full name\"}\n              value={PrimaryCare.fullName}\n              onChange={(e: any) => {\n                updateContext(\"fullName\", e.target.value)\n              }}\n            />\n          </Col>\n          <Col xs=\"12\" sm=\"6\">\n          <Label for={`form-input-id-phone`}>Phone</Label>\n              <InputGroup>\n                <InputGroupButtonDropdown addonType=\"append\" isOpen={dropdownOpen} toggle={toggleDropDown}   >\n                  <DropdownToggle caret>\n                    {code}\n                  </DropdownToggle>\n                  <DropdownMenu>\n                    <DropdownItem header>Area</DropdownItem>\n                    <DropdownItem onClick={() => {\n                      setCode(\"+ 1\")\n                      updateContext(\"phoneCode\", \"+ 1\")\n                      }}>+ 1</DropdownItem>\n                    <DropdownItem onClick={() => {\n                      setCode(\"+ 778\")\n                      updateContext(\"phoneCode\", \"+ 778\")\n                      }}>+ 778</DropdownItem>\n                  </DropdownMenu>\n                </InputGroupButtonDropdown>\n                <Input\n                  type=\"tel\"\n                  mask=\"999 999 9999\"\n                  maskChar=\" \"\n                  id=\"form-input-id-phone\"\n                  value={PrimaryCare.phone} \n                  tag={InputMask}\n                  onChange={e => {\n                    updateContext(\"phone\", e.target.value)\n                  }}\n                />\n              </InputGroup>\n          </Col> \n        </Row>\n      </Container>\n      </Form>\n  </div>\n)}\n\n\nexport default PhysicianInformation",["208","209"],"/private/var/www/oberholtzermedia-form/src/components/Profile/PrimaryCare/table.tsx",["210"],"import { useContext } from 'react';\nimport { Table } from 'reactstrap';\nimport { AppContext } from '../../../context/App.Contex';\nimport { ProfileInterface } from '../../../context/Profile.Contex';\n\nconst PrimaryCareTable = (props: any) => {\n  const { Profile }  = useContext(AppContext)\n  const { PrimaryCare } = Profile\n  return (\n    <Table size=\"sm\" responsive>\n      <thead>\n        <tr>\n          <th>Doctor fullname</th>\n          <th>Phone</th>\n        </tr>\n      </thead>\n      <tbody>\n        <tr>\n          <td>{PrimaryCare.fullName}</td>\n          <td>{PrimaryCare.phone}</td>\n        </tr>\n      </tbody>\n    </Table>\n  );\n}\n\nexport default PrimaryCareTable;",["211","212"],"/private/var/www/oberholtzermedia-form/src/components/Profile/PersonalInfo/table.tsx",["213"],"import { useContext } from 'react';\nimport { Table } from 'reactstrap';\nimport { AppContext } from '../../../context/App.Contex';\nimport { ProfileInterface } from '../../../context/Profile.Contex';\n\nconst ProfileTable = (props: any) => {\n\n  const { Profile }  = useContext(AppContext)\n  const { PersonalInfo } = Profile\n  return (\n    <Table size=\"sm\" responsive>\n      <thead>\n        <tr>\n          <th>First Name</th>\n          <th>Last Name</th>\n          <th>Gender</th>\n          <th>Phone</th>\n          <th>Alt. Phone</th>\n          <th>Email Address</th>\n          <th>Birth Date</th>\n          <th>Ethnicity</th>\n          <th>Previous Tests only</th>\n        </tr>\n      </thead>\n      <tbody>\n        <tr>\n          <td>{PersonalInfo.firstName}</td>\n          <td>{PersonalInfo.lastName}</td>\n          <td>{PersonalInfo.gender}</td>\n          <td>{`${PersonalInfo.phoneCode} ${PersonalInfo.phone}`}</td>\n          <td>{`${PersonalInfo.altPhoneCode} ${PersonalInfo.altPhone}`}</td>\n          <td>{PersonalInfo.email}</td>\n          <td>{PersonalInfo.birthDate}</td>\n          <td>{PersonalInfo.ethnicity}</td>\n          <td>{PersonalInfo.previousTests.join(\",\")}</td>\n        </tr>\n      </tbody>\n    </Table>\n  );\n}\n\nexport default ProfileTable;","/private/var/www/oberholtzermedia-form/src/components/Profile/Address/table.tsx",["214"],"import { useContext } from 'react';\nimport { Table } from 'reactstrap';\nimport { AppContext } from '../../../context/App.Contex';\nimport { ProfileInterface } from '../../../context/Profile.Contex';\n\nconst AddressTable = (props: any) => {\n  const { Profile }  = useContext(AppContext)\n  const { Address } = Profile\n  return (\n    <Table size=\"sm\" hover>\n      <thead>\n        <tr>\n          <th>Full Address</th>\n        </tr>\n      </thead>\n      <tbody>\n        <tr>\n          <td>{`${Address.streetLine}, ${Address.city} - ${Address.state} ${Address.postalCode}`}</td>\n        </tr>\n      </tbody>\n    </Table>\n  );\n}\n\nexport default AddressTable;",["215","216"],"/private/var/www/oberholtzermedia-form/src/components/Profile/MedicareID/table.tsx",["217"],"import { useContext } from 'react';\nimport { Table } from 'reactstrap';\nimport { AppContext } from '../../../context/App.Contex';\nimport { ProfileInterface } from '../../../context/Profile.Contex';\n\nconst MedicareTable = (props: any) => {\n\n  const { Profile }  = useContext(AppContext)\n  const { Medicare } = Profile\n  return (\n    <Table size=\"sm\" hover>\n      <thead>\n        <tr>\n          <th>Medicare memberID</th>\n        </tr>\n      </thead>\n      <tbody>\n        <tr>\n          <td>{Medicare.memberID}</td>\n        </tr>\n      </tbody>\n    </Table>\n  );\n}\n\nexport default MedicareTable;","/private/var/www/oberholtzermedia-form/src/components/ProgressHeader.tsx",[],"/private/var/www/oberholtzermedia-form/src/context/App.Contex.tsx",[],"/private/var/www/oberholtzermedia-form/src/context/Tabs.Context.tsx",[],"/private/var/www/oberholtzermedia-form/src/actions/profile.ts",[],"/private/var/www/oberholtzermedia-form/src/index.tsx",[],"/private/var/www/oberholtzermedia-form/src/components/Progress.tsx",[],"/private/var/www/oberholtzermedia-form/src/components/Profile/index.tsx",[],"/private/var/www/oberholtzermedia-form/src/components/Review/index.tsx",["218","219","220","221"],"/private/var/www/oberholtzermedia-form/src/reportWebVitals.ts",[],"/private/var/www/oberholtzermedia-form/src/components/Form/Item.tsx",[],"/private/var/www/oberholtzermedia-form/src/components/Diabetes/index.tsx",[],"/private/var/www/oberholtzermedia-form/src/context/Diabetes.Contex.tsx",[],"/private/var/www/oberholtzermedia-form/src/components/Diabetes/Diagnostic/index.tsx",["222","223","224"],"import { useContext, useState } from 'react';\nimport { Container, Row, CustomInput, Col, Form, FormGroup, Label, Input,\n    Alert, Button } from 'reactstrap';\nimport { AppContext } from '../../../context/App.Contex';\nimport TableInfo from \"./table\"\n\nimport { DiabetesDiagnosticList } from \"../../../context/Diabetes.Contex\"\n\nconst Diagnostic = (props:any) => {\n\n  const [loading, setLoading] = useState<boolean>(false)\n\n  const { Diabetes, updateContext, Error }  = useContext(AppContext)\n  const { Diagnostic } = Diabetes\n  const { Diabetes : { Diagnostic: ComponentError }} = Error\n  \n    if (props.table) {\n        return <TableInfo {...props} />\n    }\n    return (\n    <div className=\"col-xs-12\">\n      <Form>\n        <Container>\n            {\n              ComponentError && (\n                <Row>\n                    <Col>\n                        <Alert color=\"danger\">\n                            {ComponentError}\n                        </Alert>\n                    </Col>\n                </Row>\n              )\n            }\n          <Row>\n            <Col xs=\"12\">\n                <Label><b>Have you been diagnosed with any of the following?</b></Label>\n            </Col>\n            <Col xs=\"12\">\n                <p> (check all that apply)</p>\n            </Col>\n            <Col xs=\"12\">\n              {\n                DiabetesDiagnosticList.map((diagnostic: string) => (\n                  <FormGroup check inline>\n                    <Label check>\n                      <Input type=\"checkbox\" value={diagnostic} checked={Diagnostic.list.includes(diagnostic)} onChange={e => {\n                        if (e.target.checked) {\n                          updateContext(\"list\", [\n                            ...Diagnostic.list,\n                            e.target.value\n                          ])\n                        } else {\n                          const index = Diagnostic.list.findIndex((i: string) => i === e.target.value)\n                          const newPreviousTests = Diagnostic.list\n                          newPreviousTests.splice(index, 1)\n                          updateContext(\"list\", newPreviousTests)\n                        }\n                    }}  /> { diagnostic }\n                    </Label>\n                  </FormGroup>\n                ))\n              }\n            </Col> \n          </Row>\n          <Row>\n            <Col xs=\"12\">\n              <br />\n              <FormGroup>\n                <Label for=\"isRCEDiabetesTransferCheckbox\"><b>Check here if doing a RCE Diabetes transfer</b></Label>\n                <div>\n                  <CustomInput\n                    onClick={(e: any) => {\n                      updateContext(\"isRCEDiabetesTransfer\", e.target.checked)\n                    }}\n                    checked={Diagnostic.isRCEDiabetesTransfer}\n                    type=\"checkbox\"\n                    id=\"isRCEDiabetesTransferCheckbox\"\n                    label=\"Yes, I'm.\" />\n                </div>\n              </FormGroup>\n            </Col>\n          </Row>\n        </Container>\n        </Form>\n    </div>\n  )}\n  \n  \n  export default Diagnostic","/private/var/www/oberholtzermedia-form/src/components/Diabetes/BMI/index.tsx",["225","226","227","228","229"],"import { useContext, useState } from 'react';\nimport FormItem from  \"../../Form/Item\"\nimport { Container, Row, Col, Form, FormGroup, Label, Input,\n    Alert, Button } from 'reactstrap';\nimport { AppContext } from '../../../context/App.Contex';\nimport TableInfo from \"./table\"\n\n\nconst BMIComponent = (props:any) => {\n\n  const [loading, setLoading] = useState<boolean>(false)\n\n  const { Diabetes, updateContext, Error }  = useContext(AppContext)\n  const { BMI } = Diabetes\n\n  console.log(\"BMI\", {BMI})\n    if (props.table) {\n        return <TableInfo {...props} />\n    }\n    return (\n    <div className=\"col-xs-12\">\n      <Form>\n        <Container>\n            {\n              Error.Diabetes.BMI && (\n                <Row>\n                    <Col>\n                        <Alert color=\"danger\">\n                            {Error.Diabetes.BMI}\n                        </Alert>\n                    </Col>\n                </Row>\n              )\n            }\n          <Row>\n            <Col xs=\"12\">\n              <FormItem \n                label=\"BMI\"\n                  error={Error.Diabetes.BMI}\n                  onChange={(e: any) => {\n                    updateContext(\"value\", e.target.value)\n                  }}\n                  placeholder=\"BMI\"\n                  id=\"BMI\"\n                  value={BMI.value}\n                  disabled={loading}\n                />\n            </Col>\n          </Row>\n        </Container>\n      </Form>\n    </div>\n  )}\n  \n  \n  export default BMIComponent","/private/var/www/oberholtzermedia-form/src/components/Diabetes/BMI/table.tsx",[],"/private/var/www/oberholtzermedia-form/src/components/Diabetes/FamilyMember/index.tsx",["230","231","232","233","234"],"import { useContext, useState } from 'react';\nimport DiabetesFamilyMemberForm from  \"../../Form/DiabetesFamilyMember\"\nimport { Container, Row, Col, Form, FormGroup, Label, Input,\n    Alert, Button } from 'reactstrap';\nimport { AppContext } from '../../../context/App.Contex';\nimport TableInfo from \"./table\"\nimport { familyMemberData, DiabetesFamilyMemberInterface } from '../../../context/Diabetes.Contex';\n\nimport { guidGenerator } from \"../../../utils\"\n\nconst DiabetesFamilyMemberComponent = (props:any) => {\n\n  const [loading, setLoading] = useState<boolean>(false)\n  const [limit, setLimit] = useState<number>(3)\n\n  const { Diabetes, updateContext, Error, setError }  = useContext(AppContext)\n  const { FamilyMember } = Diabetes\n  console.log(\"FamilyMember\", FamilyMember)\n    if (props.table) {\n        return <TableInfo {...props} />\n    }\n    return (\n    <div className=\"col-xs-12\">\n      <Form>\n        <Container>\n            {\n              Error.Diabetes.FamilyMember && (\n                <Row>\n                    <Col>\n                        <Alert color=\"danger\">\n                            {Error.Diabetes.FamilyMember}\n                        </Alert>\n                    </Col>\n                </Row>\n              )\n            }\n            {\n              FamilyMember.list.length > 0 && FamilyMember.list.map((FM: DiabetesFamilyMemberInterface, index: number) =>(\n                <Row key={`FamilyMemberDataInterface-${FM.id}`}>\n                  <Col xs=\"12\">\n                    <DiabetesFamilyMemberForm \n                      index={index}\n                      error={Error.Diabetes.FamilyMember && Error.Diabetes.FamilyMember[index]}\n                      id={`FamilyMemberDataInterface-id-${FM.id}`}\n                      success={false}\n                      onSave={(fm: DiabetesFamilyMemberInterface) => {\n                        console.log(\"DiabetesFamilyMemberForm | onchange\", {fm},{index})\n                        FamilyMember.list[index] = fm;\n                        updateContext(\"list\",FamilyMember.list)\n                      }}\n                      loading={loading}\n                      disabled={loading}\n                      model={FM}\n                      onRemove={() => {\n                        FamilyMember.list.splice(index,1);\n                        updateContext(\"list\",FamilyMember.list)\n                        setLimit(limit + 1)\n                      }}\n                    />\n                  </Col>\n                </Row>\n              ))\n            }\n            {\n              ( limit > 0 ) && (\n                <Row>\n                  <Col xs=\"12\">\n                    <Button onClick={() => {\n                      updateContext(\"list\", [\n                        ...FamilyMember.list,\n                        {\n                          ...familyMemberData,\n                          id: guidGenerator()\n                        }\n                      ])\n                      setLimit(limit - 1)\n                    }}>Add Family Member</Button>\n                  </Col>\n                </Row>\n              )\n            }\n        </Container>\n      </Form>\n    </div>\n  )}\n  \n  \n  export default DiabetesFamilyMemberComponent","/private/var/www/oberholtzermedia-form/src/components/Diabetes/FamilyMember/table.tsx",[],"/private/var/www/oberholtzermedia-form/src/components/Diabetes/Diagnostic/table.tsx",["235","236","237"],"import { useContext } from 'react';\nimport { Table } from 'reactstrap';\nimport { AppContext } from '../../../context/App.Contex';\nimport { ProfileInterface } from '../../../context/Profile.Contex';\n\nconst AddressTable = (props: any) => {\n  const { Diabetes, updateContext, Error }  = useContext(AppContext)\n  const { Diagnostic } = Diabetes\n  return (\n    <Table size=\"sm\" hover>\n      <thead>\n        <tr>\n          <th>List of diagnostics</th>\n          <th>Is RCE Diabetes transfer</th>\n        </tr>\n      </thead>\n      <tbody>\n        <tr>\n          <td>{Diagnostic.list.join(\", \")}.</td>\n          <td>{Diagnostic.isRCEDiabetesTransfer ? 'Yes' : 'No'}</td>\n        </tr>\n      </tbody>\n    </Table>\n  );\n}\n\nexport default AddressTable;","/private/var/www/oberholtzermedia-form/src/components/Form/DiabetesFamilyMember.tsx",["238"],"import FormItem from  \"./Item\"\nimport { Container, Row, Col, Form, FormGroup, Label, Input,\n    Alert, Button, Card, CustomInput } from 'reactstrap';\nimport { DiabetesFamilyMemberInterface } from \"../../context/Diabetes.Contex\";\nimport { useState } from \"react\";\n\ninterface FormDiabetesFamilyMemberInterface {\n  success: boolean;\n  error: string;\n  onSave: (fm: DiabetesFamilyMemberInterface) => void;\n  onRemove: () => void;\n  id: string;\n  loading: boolean;\n  disabled: boolean;\n  model: DiabetesFamilyMemberInterface;\n  index: number;\n}\n\nconst Relationship = [{value: \"MOM\", label:\"Mom\"},\n{value: \"DAD\", label:\"Dad\"},\n{value: \"BROTHER\", label:\"Brother\"},\n{value: \"SISTER\", label:\"Sister\"},\n{value: \"GRANDMOTHER\", label:\"Grandmother\"},\n{value: \"GRANDFATHER\", label:\"Grandfather\"},\n{value: \"COUSIN\", label:\"Cousin\"},\n{value: \"AUNT\", label:\"Aunt\"},\n{value: \"UNCLE\", label:\"Uncle\"},\n{value: \"GREATGRANDMOTHER\", label:\"Great Grandmother\"},\n{value: \"GREATGRANDFATHER\", label:\"Great Grandfather\"},\n{value: \"SON\", label:\"Son\"},\n{value: \"DAUGHTER\", label:\"Daughter\"},\n{value: \"NIECE\", label:\"Niece\"},\n{value: \"NEWPHEW\", label:\"Nephew\"},\n{value: \"HALF-SISTER\", label:\"Half-sister\"},\n{value: \"HALF-BROTHER\", label:\"Half-brother\"}]\n\nconst DiabetesFamilyMemberForm = ({model, success, error, onSave, id, loading, disabled, index, onRemove }: FormDiabetesFamilyMemberInterface) => {\n  const [fData, onChange] = useState(model);\n  \n  return (\n  <div className=\"col-xs-12\" style={{marginBottom: \"20px\"}}>\n    <Card style={{padding: \"15px\"}}>\n    <Container >\n      <Row>\n        <Col xs=\"11\">\n          <h4>Family Member {index + 1}</h4>\n        </Col>\n        <Col xs=\"1\">\n          <Button outline color=\"secondary\"\n            onClick={onRemove}\n          >X</Button>\n        </Col>\n      </Row>\n        {\n          error && (\n            <Row>\n                <Col>\n                    <Alert color=\"danger\">\n                        {error}\n                    </Alert>\n                </Col>\n            </Row>\n          )\n        }\n      <Row>\n        <Col xs=\"12\" sm=\"4\">\n            <FormItem id={`userFirstNameFormFamilyMember-${id}`} label=\"First name (*)\" value={fData.firstName}\n            onChange={(e: any)=>{\n              onChange({\n                ...fData,\n                firstName: e.target.value\n              })\n            }}/>\n          </Col>\n          <Col xs=\"12\" sm=\"4\">\n            <FormItem id={`userLastNameFormFamilyMember-${id}`} label=\"Last name (*)\"  value={fData.lastName} onChange={(e: any)=>{\n              onChange({\n                ...fData,\n                lastName: e.target.value\n              })\n\n            }}/>\n          </Col>\n          <Col xs=\"12\" sm=\"4\">\n            <Label for={`genderFormFamilyMember-${id}-male`}>Gender</Label>\n            <FormGroup>\n              <CustomInput  onChange={e => {\n                onChange({\n                ...fData,\n                gender: e.target.value\n              })\n                }}\n                bsSize=\"sm\" type=\"radio\" value=\"male\" checked={fData.gender === \"male\"} name={`genderFormFamilyMember-${id}`} id={`genderFormFamilyMember-${id}-male`} label=\"Male\"  inline/>\n                <CustomInput  onChange={e => {\n                  onChange({\n                ...fData,\n                gender: e.target.value\n              })\n                }}\n                bsSize=\"sm\" type=\"radio\" value=\"female\" checked={fData.gender === \"female\"}  name={`genderFormFamilyMember-${id}`} id={`genderFormFamilyMember-${id}-female`} label=\"Female\"  inline/>\n            </FormGroup>\n          </Col>\n      </Row>\n      <Row>\n        <Col xs=\"12\" sm=\"6\" >\n          <FormGroup>\n            <Label for=\"birthDate\">Birth Date</Label>\n            <Input\n              bsSize=\"sm\"\n              type=\"date\"\n              name=\"date\"\n              id=\"birthDate\"\n              placeholder=\"Birth date\"\n              value={fData.birthDate}\n              onChange={e => {\n                onChange({\n                  ...fData,\n                  birthDate: e.target.value\n                })\n              }}\n              \n            />\n          </FormGroup>\n        </Col>\n        <Col xs=\"12\" sm=\"6\">\n          <FormGroup>\n            <Label for={`RelationshipFormFamilyMember`}>Relationship to patient</Label>\n            <CustomInput\n            value={fData.relationship}\n            onChange={(e:any) => {\n              onChange({\n                ...fData,\n                relationship: e.target.value\n              })\n            }}\n             type=\"select\" id={`RelationshipFormFamilyMember`} name=\"family_member_one_cancer\">\n              <option value=\"\">Select</option>\n              {\n                Relationship.map((s) => (\n                  <option key={`relationship-diabetes-${s.value}`}  value={s.value} >{s.label}</option>\n                ))\n              }\n            </CustomInput>\n          </FormGroup>\n        </Col>\n          <Col xs=\"12\" sm=\"6\">\n            <FormItem id={`DiagnosisOrSymptomFormFamilyMember-${id}`} label=\"Diagnosis or Symptoms (*)\" value={fData.diagnosisOrSymptoms} onChange={(e: any)=>{\n              onChange({\n                ...fData,\n                diagnosisOrSymptoms: e.target.value\n              })\n            }}/>\n          </Col>\n          <Col xs=\"12\" sm=\"6\">\n            <FormItem \n              id={`AgeOfOnsetFormFamilyMember-${id}`}\n              label=\"Age of onset (*)\" value={fData.ageOfOnset}\n              onChange={(e: any)=>{\n                onChange({\n                  ...fData,\n                  ageOfOnset: e.target.value\n                })\n              }}/>\n          </Col>\n      </Row>\n      <Row>\n        <Col sm={{ size: '2', offset: 10 }}>\n          <Button color=\"success\" onClick={() => {\n            onSave(fData)\n          }}>Save</Button>\n        </Col>\n      </Row>\n      <Row>\n        <Col>\n          {\n            fData !== model && <span>Unsaved data</span>\n          }\n        </Col>\n      </Row>\n    </Container>\n  </Card>\n</div>\n  )}\n\n  export default DiabetesFamilyMemberForm","/private/var/www/oberholtzermedia-form/src/components/Cardiac/FamilyMember/index.tsx",["239","240","241","242","243"],"import { useContext, useState } from 'react';\nimport CardiacFamilyMemberForm from  \"../../Form/CardiacFamilyMember\"\nimport { Container, Row, Col, Form, FormGroup, Label, Input,\n    Alert, Button } from 'reactstrap';\nimport { AppContext } from '../../../context/App.Contex';\nimport TableInfo from \"./table\"\nimport { familyMemberData, CardiacFamilyMemberInterface } from '../../../context/Cardiac.Contex';\nimport { guidGenerator } from '../../../utils';\n\n\nconst CardiacFamilyMemberComponent = (props:any) => {\n\n  const [loading, setLoading] = useState<boolean>(false)\n  const [limit, setLimit] = useState<number>(3)\n\n  const { Cardiac, updateContext, Error, setError }  = useContext(AppContext)\n  const { FamilyMember } = Cardiac\n  console.log(\"FamilyMember\", FamilyMember)\n    if (props.table) {\n        return <TableInfo {...props} />\n    }\n    return (\n    <div className=\"col-xs-12\">\n      <Form>\n        <Container>\n            {\n              Error.Cardiac.FamilyMember && (\n                <Row>\n                    <Col>\n                        <Alert color=\"danger\">\n                            {Error.Cardiac.FamilyMember}\n                        </Alert>\n                    </Col>\n                </Row>\n              )\n            }\n            {\n              FamilyMember.list.length > 0 && FamilyMember.list.map((FM: CardiacFamilyMemberInterface, index: number) =>(\n                <Row key={`CardiacFamilyMemberDataInterface-${FM.id}`}>\n                  <Col xs=\"12\">\n                    <CardiacFamilyMemberForm \n                      index={index}\n                      error={Error.Cardiac.FamilyMember && Error.Cardiac.FamilyMember[index]}\n                      id={`CardiacFamilyMemberDataInterface-id-${FM.id}`}\n                      success={false}\n                      onSave={(fm: CardiacFamilyMemberInterface) => {\n                        console.log(\"CardiacFamilyMemberForm | onchange\", {fm},{index})\n                        FamilyMember.list[index] = fm;\n                        updateContext(\"list\",FamilyMember.list)\n                      }}\n                      loading={loading}\n                      disabled={loading}\n                      model={FM}\n                      onRemove={() => {\n                        FamilyMember.list.splice(index,1);\n                        updateContext(\"list\",FamilyMember.list)\n                        setLimit(limit + 1)\n                      }}\n                    />\n                  </Col>\n                </Row>\n              ))\n            }\n            {\n              ( limit > 0 ) && (\n                <Row>\n                  <Col xs=\"12\">\n                    <Button onClick={() => {\n                      updateContext(\"list\", [\n                        ...FamilyMember.list,\n                        {\n                          ...familyMemberData,\n                          id: guidGenerator()\n                        }\n                      ])\n                      setLimit(limit - 1)\n                    }}>Add Family Member</Button>\n                  </Col>\n                </Row>\n              )\n            }\n        </Container>\n      </Form>\n    </div>\n  )}\n  \n  \n  export default CardiacFamilyMemberComponent","/private/var/www/oberholtzermedia-form/src/components/Form/CardiacFamilyMember.tsx",[],"/private/var/www/oberholtzermedia-form/src/components/Cardiac/FamilyMember/table.tsx",[],"/private/var/www/oberholtzermedia-form/src/context/Cardiac.Contex.tsx",[],"/private/var/www/oberholtzermedia-form/src/components/Cardiac/Diagnostic/index.tsx",["244","245","246"],"/private/var/www/oberholtzermedia-form/src/components/Cardiac/Diagnostic/table.tsx",["247","248","249"],"/private/var/www/oberholtzermedia-form/src/components/Cancer/FamilyMember/index.tsx",["250","251","252","253","254"],"/private/var/www/oberholtzermedia-form/src/components/Cancer/Diagnostic/table.tsx",["255","256","257"],"import { useContext } from 'react';\nimport { Table } from 'reactstrap';\nimport { AppContext } from '../../../context/App.Contex';\nimport { ProfileInterface } from '../../../context/Profile.Contex';\n\nconst AddressTable = (props: any) => {\n  const { Cancer, updateContext, Error }  = useContext(AppContext)\n  const { Diagnostic } = Cancer\n  return (\n    <Table size=\"sm\" responsive>\n      <thead>\n        <tr>\n          <th>Diagnosed</th>\n          <th>Prescribed Medications</th>\n          <th>Diabetes Type</th>\n          <th>Prescribed medications and all OTC</th>\n          <th>Is RCE Cancer transfer?</th>\n        </tr>\n      </thead>\n      <tbody>\n        <tr>\n          <td>{Diagnostic.indicationTest}</td>\n          <td>{Diagnostic.isDiagnosed ? 'Yes' : 'No'}</td>\n          <td>{Diagnostic.treatment}</td>\n          <td>{Diagnostic.OTC}</td>\n          <td>{Diagnostic.isRCECancerTransfer ? 'Yes' : 'No'}</td>\n        </tr>\n      </tbody>\n    </Table>\n  );\n}\n\nexport default AddressTable;","/private/var/www/oberholtzermedia-form/src/components/Cancer/FamilyMember/table.tsx",[],"/private/var/www/oberholtzermedia-form/src/components/Cancer/Diagnostic/index.tsx",["258","259","260","261"],"import { useContext, useState } from 'react';\nimport { Container, Row, Col, Form, FormGroup, Label, Input,\n    Alert, CustomInput, CardImgOverlay } from 'reactstrap';\nimport { AppContext } from '../../../context/App.Contex';\nimport TableInfo from \"./table\"\n\nimport { FamilyMemberHeartConditions, DiagnosedCancerList, TreatmentCancerList } from \"../../../context/Cancer.Contex\"\n\nconst Diagnostic = (props:any) => {\n\n  const [loading, setLoading] = useState<boolean>(false)\n\n  const { Cancer, updateContext, Error }  = useContext(AppContext)\n  const { Diagnostic } = Cancer\n  const { Cancer : { Diagnostic: ComponentError }} = Error\n    if (props.table) {\n      return <TableInfo {...props} />\n    }\n    return (\n    <div className=\"col-xs-12\">\n      <Form>\n        <Container>\n            {\n              ComponentError && (\n                <Row>\n                    <Col>\n                        <Alert color=\"danger\">\n                            {ComponentError}\n                        </Alert>\n                    </Col>\n                </Row>\n              )\n            }\n          <Row>\n            <Col xs=\"12\">\n             <FormGroup>\n                <Label for=\"Cancer-FamilyMemberHeartConditions-indicationTest-1\"><b>Indication for testing selection</b></Label>\n                <div>\n                  {\n                    DiagnosedCancerList.map((type: any, index: number) => (\n                      <CustomInput\n                      inline\n                      onClick={(e: any) => {\n                        updateContext(\"indicationTest\", e.target.value)\n                      }}\n                      value={type.value}\n                      checked={Diagnostic.indicationTest === type.value}\n                      type=\"radio\" id={`Cancer-FamilyMemberHeartConditions-indicationTest-${index}`} key={`Cancer-FamilyMemberHeartConditions-indicationTest-${index}`} name=\"Cancer-FamilyMemberHeartConditions-indicationTest-Radio\" label={type.label} />\n                    ))\n                  }\n                </div>\n              </FormGroup>\n            </Col> \n            </Row>\n          <Row>\n            <Col xs=\"12\">\n             <FormGroup>\n                <Label for=\"Cancer-FamilyMemberHeartConditions-isDiagnosed-1\"><b>Have you ever been diagnosed with any type of cancer?</b></Label>\n                <div>\n                  {\n                    [\"Yes\", \"No\"].map((type: string, index: number) => (\n                      <CustomInput\n                      inline\n                      onClick={(e: any) => {\n                        updateContext(\"isDiagnosed\", e.target.checked)\n                      }}\n                      value={type}\n                      checked={Diagnostic.isDiagnosed}\n                      type=\"radio\" id={`Cancer-FamilyMemberHeartConditions-isDiagnosed-${index}`} key={`Cancer-FamilyMemberHeartConditions-isDiagnosed-${index}`} name=\"Cancer-FamilyMemberHeartConditions-isDiagnosed-Radio\" label={type} />\n                    ))\n                  }\n                </div>\n              </FormGroup>\n            </Col> \n            </Row>\n          <Row>\n            <Col xs=\"12\">\n             <FormGroup>\n                <Label for=\"Cancer-FamilyMemberHeartConditions-treatment-1\"><b>Previous or current treatment</b></Label>\n                <div>\n                  {\n                    TreatmentCancerList.map((treatment: any, index: number) => (\n                      <CustomInput\n                      inline\n                      onClick={(e: any) => {\n                        updateContext(\"treatment\", e.target.value)\n                      }}\n                      value={treatment.value}\n                      checked={Diagnostic.treatment.value}\n                      type=\"radio\" id={`Cancer-FamilyMemberHeartConditions-treatment-${index}`} key={`Cancer-FamilyMemberHeartConditions-treatment-${index}`} name=\"Cancer-FamilyMemberHeartConditions-treatment-Radio\" label={treatment.label} />\n                    ))\n                  }\n                </div>\n              </FormGroup>\n            </Col> \n            </Row>\n          <Row>\n            <Col xs=\"12\">\n              <FormGroup>\n                <Label for=\"Cancer-FamilyMemberHeartConditions-OTC\"><b>List All medications, prescribed medications and all OTC:</b></Label>\n                <Input\n                  onChange={(e:any) => {\n                    updateContext(\"OTC\", e.target.value)\n                  }}\n                  value={Diagnostic.OTC}\n                  type=\"textarea\"\n                  name=\"text\"\n                  id=\"Cancer-FamilyMemberHeartConditions-OTC\" />\n              </FormGroup>\n            </Col>\n          </Row> \n          <Row>\n            <Col xs=\"12\">\n              <FormGroup>\n                <Label for=\"isRCECancerTransferCheckbox\"><b>Check here if doing a RCE Cancer transfer</b></Label>\n                <div>\n                  <CustomInput\n                    onClick={(e: any) => {\n                      updateContext(\"isRCECancerTransfer\", e.target.checked)\n                    }}\n                    checked={Diagnostic.isRCECancerTransfer}\n                    type=\"checkbox\"\n                    id=\"isRCECancerTransferCheckbox\"\n                    label=\"Yes, I'm.\" />\n                </div>\n              </FormGroup>\n            </Col>\n          </Row>\n        </Container>\n        </Form>\n    </div>\n  )}\n  \n  \n  export default Diagnostic","/private/var/www/oberholtzermedia-form/src/context/Cancer.Contex.tsx",[],"/private/var/www/oberholtzermedia-form/src/components/Form/CancerFamilyMember.tsx",["262"],"/private/var/www/oberholtzermedia-form/src/components/Cardiac/index.tsx",[],"/private/var/www/oberholtzermedia-form/src/utils/index.ts",[],"/private/var/www/oberholtzermedia-form/src/components/Cancer/index.tsx",[],"/private/var/www/oberholtzermedia-form/src/components/SubmitFormModal/index.tsx",[],{"ruleId":"263","replacedBy":"264"},{"ruleId":"265","replacedBy":"266"},{"ruleId":"263","replacedBy":"267"},{"ruleId":"265","replacedBy":"268"},{"ruleId":"263","replacedBy":"269"},{"ruleId":"265","replacedBy":"270"},{"ruleId":"271","severity":1,"message":"272","line":2,"column":127,"nodeType":"273","messageId":"274","endLine":2,"endColumn":136},{"ruleId":"263","replacedBy":"275"},{"ruleId":"265","replacedBy":"276"},{"ruleId":"271","severity":1,"message":"277","line":4,"column":10,"nodeType":"273","messageId":"274","endLine":4,"endColumn":26},{"ruleId":"263","replacedBy":"278"},{"ruleId":"265","replacedBy":"279"},{"ruleId":"271","severity":1,"message":"277","line":4,"column":10,"nodeType":"273","messageId":"274","endLine":4,"endColumn":26},{"ruleId":"271","severity":1,"message":"277","line":4,"column":10,"nodeType":"273","messageId":"274","endLine":4,"endColumn":26},{"ruleId":"263","replacedBy":"280"},{"ruleId":"265","replacedBy":"281"},{"ruleId":"271","severity":1,"message":"277","line":4,"column":10,"nodeType":"273","messageId":"274","endLine":4,"endColumn":26},{"ruleId":"271","severity":1,"message":"282","line":4,"column":110,"nodeType":"273","messageId":"274","endLine":4,"endColumn":120},{"ruleId":"271","severity":1,"message":"283","line":4,"column":122,"nodeType":"273","messageId":"274","endLine":4,"endColumn":136},{"ruleId":"271","severity":1,"message":"284","line":4,"column":139,"nodeType":"273","messageId":"274","endLine":4,"endColumn":147},{"ruleId":"271","severity":1,"message":"285","line":44,"column":20,"nodeType":"273","messageId":"274","endLine":44,"endColumn":29},{"ruleId":"271","severity":1,"message":"286","line":3,"column":12,"nodeType":"273","messageId":"274","endLine":3,"endColumn":18},{"ruleId":"271","severity":1,"message":"287","line":11,"column":10,"nodeType":"273","messageId":"274","endLine":11,"endColumn":17},{"ruleId":"271","severity":1,"message":"288","line":11,"column":19,"nodeType":"273","messageId":"274","endLine":11,"endColumn":29},{"ruleId":"271","severity":1,"message":"272","line":3,"column":37,"nodeType":"273","messageId":"274","endLine":3,"endColumn":46},{"ruleId":"271","severity":1,"message":"289","line":3,"column":48,"nodeType":"273","messageId":"274","endLine":3,"endColumn":53},{"ruleId":"271","severity":1,"message":"290","line":3,"column":55,"nodeType":"273","messageId":"274","endLine":3,"endColumn":60},{"ruleId":"271","severity":1,"message":"286","line":4,"column":12,"nodeType":"273","messageId":"274","endLine":4,"endColumn":18},{"ruleId":"271","severity":1,"message":"288","line":11,"column":19,"nodeType":"273","messageId":"274","endLine":11,"endColumn":29},{"ruleId":"271","severity":1,"message":"272","line":3,"column":37,"nodeType":"273","messageId":"274","endLine":3,"endColumn":46},{"ruleId":"271","severity":1,"message":"289","line":3,"column":48,"nodeType":"273","messageId":"274","endLine":3,"endColumn":53},{"ruleId":"271","severity":1,"message":"290","line":3,"column":55,"nodeType":"273","messageId":"274","endLine":3,"endColumn":60},{"ruleId":"271","severity":1,"message":"288","line":13,"column":19,"nodeType":"273","messageId":"274","endLine":13,"endColumn":29},{"ruleId":"271","severity":1,"message":"291","line":16,"column":43,"nodeType":"273","messageId":"274","endLine":16,"endColumn":51},{"ruleId":"271","severity":1,"message":"277","line":4,"column":10,"nodeType":"273","messageId":"274","endLine":4,"endColumn":26},{"ruleId":"271","severity":1,"message":"292","line":7,"column":21,"nodeType":"273","messageId":"274","endLine":7,"endColumn":34},{"ruleId":"271","severity":1,"message":"293","line":7,"column":36,"nodeType":"273","messageId":"274","endLine":7,"endColumn":41},{"ruleId":"271","severity":1,"message":"294","line":2,"column":31,"nodeType":"273","messageId":"274","endLine":2,"endColumn":35},{"ruleId":"271","severity":1,"message":"272","line":3,"column":37,"nodeType":"273","messageId":"274","endLine":3,"endColumn":46},{"ruleId":"271","severity":1,"message":"289","line":3,"column":48,"nodeType":"273","messageId":"274","endLine":3,"endColumn":53},{"ruleId":"271","severity":1,"message":"290","line":3,"column":55,"nodeType":"273","messageId":"274","endLine":3,"endColumn":60},{"ruleId":"271","severity":1,"message":"288","line":13,"column":19,"nodeType":"273","messageId":"274","endLine":13,"endColumn":29},{"ruleId":"271","severity":1,"message":"291","line":16,"column":42,"nodeType":"273","messageId":"274","endLine":16,"endColumn":50},{"ruleId":"271","severity":1,"message":"295","line":3,"column":25,"nodeType":"273","messageId":"274","endLine":3,"endColumn":39},{"ruleId":"271","severity":1,"message":"287","line":11,"column":10,"nodeType":"273","messageId":"274","endLine":11,"endColumn":17},{"ruleId":"271","severity":1,"message":"288","line":11,"column":19,"nodeType":"273","messageId":"274","endLine":11,"endColumn":29},{"ruleId":"271","severity":1,"message":"277","line":4,"column":10,"nodeType":"273","messageId":"274","endLine":4,"endColumn":26},{"ruleId":"271","severity":1,"message":"292","line":7,"column":20,"nodeType":"273","messageId":"274","endLine":7,"endColumn":33},{"ruleId":"271","severity":1,"message":"293","line":7,"column":35,"nodeType":"273","messageId":"274","endLine":7,"endColumn":40},{"ruleId":"271","severity":1,"message":"272","line":3,"column":37,"nodeType":"273","messageId":"274","endLine":3,"endColumn":46},{"ruleId":"271","severity":1,"message":"289","line":3,"column":48,"nodeType":"273","messageId":"274","endLine":3,"endColumn":53},{"ruleId":"271","severity":1,"message":"290","line":3,"column":55,"nodeType":"273","messageId":"274","endLine":3,"endColumn":60},{"ruleId":"271","severity":1,"message":"288","line":13,"column":19,"nodeType":"273","messageId":"274","endLine":13,"endColumn":29},{"ruleId":"271","severity":1,"message":"291","line":16,"column":41,"nodeType":"273","messageId":"274","endLine":16,"endColumn":49},{"ruleId":"271","severity":1,"message":"277","line":4,"column":10,"nodeType":"273","messageId":"274","endLine":4,"endColumn":26},{"ruleId":"271","severity":1,"message":"292","line":7,"column":19,"nodeType":"273","messageId":"274","endLine":7,"endColumn":32},{"ruleId":"271","severity":1,"message":"293","line":7,"column":34,"nodeType":"273","messageId":"274","endLine":7,"endColumn":39},{"ruleId":"271","severity":1,"message":"295","line":3,"column":25,"nodeType":"273","messageId":"274","endLine":3,"endColumn":39},{"ruleId":"271","severity":1,"message":"296","line":7,"column":10,"nodeType":"273","messageId":"274","endLine":7,"endColumn":37},{"ruleId":"271","severity":1,"message":"287","line":11,"column":10,"nodeType":"273","messageId":"274","endLine":11,"endColumn":17},{"ruleId":"271","severity":1,"message":"288","line":11,"column":19,"nodeType":"273","messageId":"274","endLine":11,"endColumn":29},{"ruleId":"271","severity":1,"message":"296","line":4,"column":39,"nodeType":"273","messageId":"274","endLine":4,"endColumn":66},"no-native-reassign",["297"],"no-negated-in-lhs",["298"],["297"],["298"],["297"],["298"],"@typescript-eslint/no-unused-vars","'FormGroup' is defined but never used.","Identifier","unusedVar",["297"],["298"],"'ProfileInterface' is defined but never used.",["297"],["298"],["297"],["298"],"'Breadcrumb' is defined but never used.","'BreadcrumbItem' is defined but never used.","'Collapse' is defined but never used.","'setTables' is assigned a value but never used.","'Button' is defined but never used.","'loading' is assigned a value but never used.","'setLoading' is assigned a value but never used.","'Label' is defined but never used.","'Input' is defined but never used.","'setError' is assigned a value but never used.","'updateContext' is assigned a value but never used.","'Error' is assigned a value but never used.","'Form' is defined but never used.","'CardImgOverlay' is defined but never used.","'FamilyMemberHeartConditions' is defined but never used.","no-global-assign","no-unsafe-negation"]