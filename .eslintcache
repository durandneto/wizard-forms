[{"/private/var/www/oberholtzermedia-form/src/v2/components/Cancer/FamilyHistory/form.tsx":"1","/private/var/www/oberholtzermedia-form/src/v2/components/common/Stepper/index.tsx":"2","/private/var/www/oberholtzermedia-form/src/App.tsx":"3","/private/var/www/oberholtzermedia-form/src/v2/components/Cancer/FamilyHistory/index.tsx":"4","/private/var/www/oberholtzermedia-form/src/v2/Reducer/Cancer/Cancer.initialState.ts":"5","/private/var/www/oberholtzermedia-form/src/v2/components/User/forms/PersonalInfo.tsx":"6","/private/var/www/oberholtzermedia-form/src/v2/Reducer/Cancer/index.ts":"7","/private/var/www/oberholtzermedia-form/src/v2/components/Agent/index.tsx":"8","/private/var/www/oberholtzermedia-form/src/actions/profile.ts":"9","/private/var/www/oberholtzermedia-form/src/v2/components/Cancer/Quiz2/index.tsx":"10","/private/var/www/oberholtzermedia-form/src/v2/Reducer/User/User.initialState.ts":"11","/private/var/www/oberholtzermedia-form/src/reportWebVitals.ts":"12","/private/var/www/oberholtzermedia-form/src/v2/Reducer/User/index.tsx":"13","/private/var/www/oberholtzermedia-form/src/utils/index.ts":"14","/private/var/www/oberholtzermedia-form/src/v2/components/User/forms/AditionalInfo.tsx":"15","/private/var/www/oberholtzermedia-form/src/v2/components/common/Accordeon/index.tsx":"16","/private/var/www/oberholtzermedia-form/src/context/Auth.Context.tsx":"17","/private/var/www/oberholtzermedia-form/src/v2/components/User/forms/MediCare2.tsx":"18","/private/var/www/oberholtzermedia-form/src/v2/Reducer/Stepper.tsx":"19"},{"size":8559,"mtime":1614130389967,"results":"20","hashOfConfig":"21"},{"size":3090,"mtime":1614022602144,"results":"22","hashOfConfig":"21"},{"size":2966,"mtime":1614107779603,"results":"23","hashOfConfig":"21"},{"size":3250,"mtime":1614117376976,"results":"24","hashOfConfig":"21"},{"size":6201,"mtime":1614117953442,"results":"25","hashOfConfig":"21"},{"size":9104,"mtime":1614110998634,"results":"26","hashOfConfig":"21"},{"size":3072,"mtime":1614117400949,"results":"27","hashOfConfig":"21"},{"size":5275,"mtime":1614106926189,"results":"28","hashOfConfig":"21"},{"size":2289,"mtime":1613977269014,"results":"29","hashOfConfig":"21"},{"size":5695,"mtime":1614090530853,"results":"30","hashOfConfig":"21"},{"size":2455,"mtime":1614127142658,"results":"31","hashOfConfig":"21"},{"size":425,"mtime":1613576502476,"results":"32","hashOfConfig":"21"},{"size":9947,"mtime":1613980921692,"results":"33","hashOfConfig":"21"},{"size":494,"mtime":1613677416518,"results":"34","hashOfConfig":"21"},{"size":10739,"mtime":1613978314575,"results":"35","hashOfConfig":"21"},{"size":5600,"mtime":1614105127294,"results":"36","hashOfConfig":"21"},{"size":982,"mtime":1613576453991,"results":"37","hashOfConfig":"21"},{"size":8309,"mtime":1614127815558,"results":"38","hashOfConfig":"21"},{"size":2427,"mtime":1614130548165,"results":"39","hashOfConfig":"21"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42"},"1j9z5km",{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"45","messages":"46","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"48"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"55"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"58","messages":"59","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"60","messages":"61","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62","usedDeprecatedRules":"63"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66","usedDeprecatedRules":"63"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"75","messages":"76","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"81","messages":"82","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/private/var/www/oberholtzermedia-form/src/v2/components/Cancer/FamilyHistory/form.tsx",["86","87","88","89","90"],"import React, { useContext, useState, useCallback } from \"react\";\nimport { makeStyles, createStyles, Theme } from \"@material-ui/core/styles\";\nimport Grid from \"@material-ui/core/Grid\";\nimport { AppContext } from \"../../../store\";\nimport Alert from \"@material-ui/lab/Alert\";\nimport RemoveCircleIcon from \"@material-ui/icons/RemoveCircle\";\nimport AddCircleOutlineIcon from \"@material-ui/icons/AddCircleOutline\";\nimport {\n  Button,\n  Checkbox,\n  FormControl,\n  FormGroup,\n  FormHelperText,\n  InputLabel,\n  Select,\n  TextField,\n  FormLabel,\n  RadioGroup,\n  FormControlLabel,\n  Radio,\n} from \"@material-ui/core\";\n\nimport DateFnsUtils from \"@date-io/date-fns\";\nimport {\n  KeyboardDatePicker,\n  MuiPickersUtilsProvider,\n} from \"@material-ui/pickers\";\n\nimport { CancerFamilyMemberInterface } from \"../../../Reducer/Cancer/Cancer.model\";\nimport { Relationship } from \"../../../Reducer/Cancer/Cancer.initialState\";\ninterface FamilyMemberFormInterface {\n  familyMember: CancerFamilyMemberInterface;\n  onRemove: (id: string) => void;\n  onSave: (fm: CancerFamilyMemberInterface) => void;\n}\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    formControl: {\n      margin: `0 ${theme.spacing(3)}px`,\n    },\n    radio: {\n      flexDirection: \"row\",\n    },\n    action: {\n      justifyContent: \"flex-end\",\n      display: \"flex\",\n      marginTop: \"30px\",\n      borderBottom: \"solid 1px #ebebeb\",\n      borderRadius: \"20px\",\n      boxShadow: \"0px 4px 1px -3px #ebebeb\",\n      padding: \"20px\",\n    },\n    button: {\n      margin: \"0 15px\",\n    },\n  })\n);\n\nconst FamilyMemberForm = ({\n  familyMember,\n  onRemove,\n  onSave,\n}: FamilyMemberFormInterface) => {\n  const [FM, setFM] = useState<CancerFamilyMemberInterface>(familyMember);\n  const classes = useStyles();\n\n  const handleChange = useCallback(\n    (name: string, value: unknown) => {\n      console.log(\"handleChange\", name, value);\n      // if (event.name) {\n      setFM({\n        ...FM,\n        [name]: value,\n      });\n      // }\n    },\n    [FM]\n  );\n\n  return (\n    <Grid container>\n      <Grid item xs={12}>\n        <h2>New Family Member {familyMember.id}</h2>\n      </Grid>\n      <Grid item xs={12} sm={6}>\n        <TextField\n          id=\"outlined-full-width\"\n          label=\"Full name\"\n          required\n          // error={UserState.errorMessage.PersonalInfo.message.firstName !== \"\"}\n          style={{ margin: 8 }}\n          placeholder=\"Placeholder\"\n          helperText={\n            \"Required\"\n            // UserState.errorMessage.PersonalInfo.message.firstName !== \"\"\n            //   ? UserState.errorMessage.PersonalInfo.message.firstName\n            //   : \"Required\"\n          }\n          fullWidth\n          InputLabelProps={{\n            shrink: true,\n          }}\n          margin=\"dense\"\n          variant=\"outlined\"\n          value={FM.name}\n          name={\"name\"}\n          onChange={(e: any) => handleChange(e.target.name, e.target.value)}\n        />\n      </Grid>\n      <Grid item xs={12} sm={4} style={{ marginLeft: \"30px\" }}>\n        <MuiPickersUtilsProvider utils={DateFnsUtils}>\n          <KeyboardDatePicker\n            margin=\"normal\"\n            id=\"date-picker-dialog\"\n            label=\"DOB\"\n            // error={UserState.errorMessage.PersonalInfo.message.birthDate}\n            format=\"MM/dd/yyyy\"\n            value={FM.dob}\n            name={\"dob\"}\n            onChange={(date: any, value: any) => {\n              handleChange(\"dob\", value);\n            }}\n            InputLabelProps={{\n              shrink: true,\n            }}\n            KeyboardButtonProps={{\n              \"aria-label\": \"change date\",\n            }}\n          />\n        </MuiPickersUtilsProvider>\n      </Grid>\n      <Grid item xs={12} sm={6}>\n        <FormControl\n          required\n          // disabled={loading}\n          className={classes.formControl}\n          // error={UserState.errorMessage.AddressInfo.message.state !== \"\"}\n        >\n          <InputLabel htmlFor=\"state-required\">Relationship</InputLabel>\n          <Select\n            native\n            name=\"relationship\"\n            inputProps={{\n              id: \"is-required\",\n              name: \"relationship\",\n            }}\n            value={FM.relationship}\n            onChange={(e: any) => handleChange(e.target.name, e.target.value)}\n          >\n            <option aria-label=\"None\" value=\"\" />\n            {Relationship.map((state: { value: string; label: string }) => (\n              <option\n                value={state.value}\n                key={`Cancer-FM-Relationship-${state.value}`}\n              >\n                {state.label}\n              </option>\n            ))}\n          </Select>\n          <FormHelperText>\n            Required\n            {/* {UserState.errorMessage.AddressInfo.message.state !== \"\"\n                  ? UserState.errorMessage.AddressInfo.message.state\n                  : \"Required\"} */}\n          </FormHelperText>\n        </FormControl>\n      </Grid>\n      <Grid item xs={12} sm={6}>\n        <FormControl\n          component=\"fieldset\"\n          // error={UserState.errorMessage.PersonalInfo.message.gender}\n          className={classes.formControl}\n        >\n          <FormLabel component=\"legend\">Gender (*) </FormLabel>\n          <RadioGroup\n            aria-label=\"gender\"\n            name=\"gender\"\n            value={FM.gender}\n            onChange={(e: any) => handleChange(e.target.name, e.target.value)}\n            className={classes.radio}\n          >\n            <FormControlLabel value=\"male\" control={<Radio />} label=\"Male\" />\n            <FormControlLabel\n              value=\"famale\"\n              control={<Radio />}\n              label=\"Female\"\n            />\n          </RadioGroup>\n          <FormHelperText>\n            {/* {UserState.errorMessage.PersonalInfo.message.gender !== \"\"\n              ? UserState.errorMessage.PersonalInfo.message.gender\n              : \"Required\"} */}\n          </FormHelperText>\n        </FormControl>\n      </Grid>\n      <Grid item xs={12}>\n        <TextField\n          id=\"outlined-full-width\"\n          label=\"Diagnosis and/or Symptoms:\"\n          required\n          type={\"textarea\"}\n          rows={4}\n          // error={UserState.errorMessage.PersonalInfo.message.firstName !== \"\"}\n          style={{ margin: 8 }}\n          placeholder=\"Diagnosis and/or Symptoms:\"\n          helperText={\n            \"Required\"\n            // UserState.errorMessage.PersonalInfo.message.firstName !== \"\"\n            //   ? UserState.errorMessage.PersonalInfo.message.firstName\n            //   : \"Required\"\n          }\n          fullWidth\n          InputLabelProps={{\n            shrink: true,\n          }}\n          margin=\"dense\"\n          variant=\"outlined\"\n          value={FM.diagnosisOrSymptoms}\n          name={\"diagnosisOrSymptoms\"}\n          onChange={(e: any) => handleChange(e.target.name, e.target.value)}\n        />\n      </Grid>\n      <Grid item xs={6}>\n        <TextField\n          id=\"outlined-full-width\"\n          label=\"Age of Onset\"\n          required\n          type={\"number\"}\n          rows={4}\n          // error={UserState.errorMessage.PersonalInfo.message.firstName !== \"\"}\n          style={{ margin: 8 }}\n          placeholder=\"Age of Onset\"\n          helperText={\n            \"Required\"\n            // UserState.errorMessage.PersonalInfo.message.firstName !== \"\"\n            //   ? UserState.errorMessage.PersonalInfo.message.firstName\n            //   : \"Required\"\n          }\n          fullWidth\n          InputLabelProps={{\n            shrink: true,\n          }}\n          margin=\"dense\"\n          variant=\"outlined\"\n          value={FM.ageOfDiagnosis}\n          name={\"ageOfDiagnosis\"}\n          onChange={(e: any) => handleChange(e.target.name, e.target.value)}\n        />\n      </Grid>\n      <Grid item xs={6} spacing={3} className={classes.action}>\n        <Button\n          variant=\"outlined\"\n          color=\"secondary\"\n          size=\"small\"\n          className={classes.button}\n          startIcon={<RemoveCircleIcon />}\n          // disabled={UserState.success}\n          onClick={() => {\n            onRemove(familyMember.id);\n          }}\n        >\n          Remove\n        </Button>\n        <Button\n          variant=\"contained\"\n          color=\"primary\"\n          size=\"small\"\n          className={classes.button}\n          startIcon={<AddCircleOutlineIcon />}\n          // disabled={UserState.success}\n          onClick={() => {\n            onSave(familyMember);\n          }}\n        >\n          Save\n        </Button>\n      </Grid>\n    </Grid>\n  );\n};\nexport default FamilyMemberForm;\n","/private/var/www/oberholtzermedia-form/src/v2/components/common/Stepper/index.tsx",[],"/private/var/www/oberholtzermedia-form/src/App.tsx",["91","92","93","94","95","96","97","98","99","100"],"import React, { useContext, useReducer } from \"react\";\nimport reducer, { AppInterface, init } from \"./v2/Reducer/App\";\nimport { StepperInterface } from \"./v2/components/common/Stepper\";\nimport SteppReducer, {\n  initialStepper,\n  SET_CURRENT_STEP,\n} from \"./v2/Reducer/Stepper\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport useScrollTrigger from \"@material-ui/core/useScrollTrigger\";\nimport Box from \"@material-ui/core/Box\";\nimport Container from \"@material-ui/core/Container\";\nimport Slide from \"@material-ui/core/Slide\";\nimport { makeStyles, Theme, createStyles } from \"@material-ui/core/styles\";\nimport Agent from \"./v2/components/Agent\";\nimport MainStepper from \"./v2/components/common/Stepper\";\nimport { AppContext } from \"./v2/store\";\n\ninterface Props {\n  /**\n   * Injected by the documentation to work in an iframe.\n   * You won't need it on your project.\n   */\n  window?: () => Window;\n  children?: React.ReactElement;\n}\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    Container: {},\n    AppBar: {\n      backgroundColor: \"#39394d\",\n      color: \"#fff\",\n      height: \"40px\",\n      padding: \"0 24px\",\n      top: 0,\n      margin: 0,\n      alignItems: \"center\",\n      position: \"fixed\",\n      width: \"100%\",\n    },\n    AppHeader: {\n      color: \"#232333\",\n      height: \"64px\",\n      marginTop: \"40px\",\n      padding: \"0 24px\",\n      alignItems: \"center\",\n      border: \"solid 1px #e7e7e7\",\n      backgroundColor: \"#fff\",\n    },\n  })\n);\n\nfunction Counter({ count }: AppInterface) {\n  const [state, dispatch] = useReducer(reducer, { count }, init);\n  return (\n    <>\n      Count: {state.count}\n      <button onClick={() => dispatch({ type: \"reset\", payload: { count } })}>\n        Reset\n      </button>\n      <button onClick={() => dispatch({ type: \"decrement\" })}>-</button>\n      <button onClick={() => dispatch({ type: \"increment\" })}>+</button>\n    </>\n  );\n}\n\nexport default function App(props: Props) {\n  const classes = useStyles();\n  const { StepperState, StepperDispatch } = useContext(AppContext);\n  return (\n    <React.Fragment>\n      <CssBaseline />\n      <Box className={classes.AppBar} my={2} display=\"flex\">\n        <div>Fixed bar</div>\n      </Box>{\" \"}\n      {/* \n      <Box className={classes.AppHeader} my={2} display=\"flex\">\n        <div>Header</div>\n      </Box> */}\n      {/* <Container className={classes.Container}> */}\n      {/* <Box my={2}> */}\n      <MainStepper\n        steps={StepperState.steps}\n        activeStep={StepperState.activeStep}\n        control={StepperState.control}\n        // onNext={(nextStep) => {\n        //   StepperDispatch({ type: SET_CURRENT_STEP, step: nextStep });\n        // }}\n        // onPrevious={(previoustStep) => {\n        //   StepperDispatch({ type: SET_CURRENT_STEP, step: previoustStep });\n        // }}\n        onFinished={() => {\n          alert(\"finished\");\n        }}\n      />\n      {/* </Box> */}\n      {/* </Container> */}\n    </React.Fragment>\n  );\n}\n",["101","102"],"/private/var/www/oberholtzermedia-form/src/v2/components/Cancer/FamilyHistory/index.tsx",["103","104","105"],"/private/var/www/oberholtzermedia-form/src/v2/Reducer/Cancer/Cancer.initialState.ts",[],"/private/var/www/oberholtzermedia-form/src/v2/components/User/forms/PersonalInfo.tsx",[],["106","107"],"/private/var/www/oberholtzermedia-form/src/v2/Reducer/Cancer/index.ts",[],"/private/var/www/oberholtzermedia-form/src/v2/components/Agent/index.tsx",["108","109","110","111"],"/private/var/www/oberholtzermedia-form/src/actions/profile.ts",["112","113","114","115"],"import axios from \"axios\";\nimport { token } from \"../context/Auth.Context\";\nimport { format, compareAsc } from \"date-fns\";\nimport {\n  ProfileAddressDataInterface,\n  ProfileMedicareDataInterface,\n  ProfileUserDataInterface,\n} from \"../context/Profile.Contex\";\nimport {\n  UserAddressInfoDataInterface,\n  UserInterface,\n} from \"../v2/Reducer/User/User.model\";\n\nexport const BASE_URL =\n  \"http://ec2co-ecsel-uixxpxra75ed-1580772910.us-west-2.elb.amazonaws.com\";\n\nexport const validateAddress = (Address: UserAddressInfoDataInterface) => {\n  const axiosConfig = {\n    headers: {\n      \"Content-Type\": \"application/json;charset=UTF-8\",\n      Authorization: `Bearer ${token}`,\n    },\n  };\n  const data = `?street=${Address.street}&street2=${Address.street2}&city=${Address.city}&state=${Address.state}&zipcode=${Address.zipcode}`;\n  return axios\n    .get(`${BASE_URL}/address-validation/${data}`, axiosConfig)\n    .then((r: any) => r.data);\n};\n\nexport const checkMedicare = (User: UserInterface) => {\n  const axiosConfig = {\n    headers: {\n      \"Content-Type\": \"application/json;charset=UTF-8\",\n      Authorization: `Bearer ${token}`,\n    },\n  };\n  if (!User.PersonalInfo.birthDate) {\n    // eslint-disable-next-line no-throw-literal\n    throw \"Invalid User DOB, Check Personal info section.\";\n  }\n  if (!User.PersonalInfo.firstName) {\n    // eslint-disable-next-line no-throw-literal\n    throw \"Invalid User firstname, Check Personal info section.\";\n  }\n  if (!User.PersonalInfo.lastName) {\n    // eslint-disable-next-line no-throw-literal\n    throw \"Invalid User lastname, Check Personal info section.\";\n  }\n\n  const DOB = new Date(User.PersonalInfo.birthDate);\n  // ?memberID=9dx2tp7pc18&Patient_DOB=1%2F22%2F1938&Patient_First=Rodolfo&Patient_Last=Gaytan&payerCode=00007&Provider_LastName=Fastflow%20Marketing&Provider_NPI=1609388842\n  const data = `?memberID=${User.MediCare.memberID}&Patient_DOB=${format(\n    new Date(DOB),\n    \"MM/dd/yyyy\"\n  )}&Patient_First=${User.PersonalInfo.firstName}&Patient_Last=${\n    User.PersonalInfo.lastName\n  }&payerCode=${User.MediCare.payerCode}&Provider_LastName=${\n    User.MediCare.Provider_LastName\n  }&Provider_NPI=${User.MediCare.Provider_NPI}`;\n  return axios\n    .get(`${BASE_URL}/medicare/${data}`, axiosConfig)\n    .then((r: any) => r.data);\n};\n",["116","117"],"/private/var/www/oberholtzermedia-form/src/v2/components/Cancer/Quiz2/index.tsx",["118","119","120","121"],"import React from \"react\";\nimport TextField from \"@material-ui/core/TextField\";\nimport { createStyles, makeStyles, Theme } from \"@material-ui/core/styles\";\nimport {\n  Button,\n  FormControl,\n  FormControlLabel,\n  FormLabel,\n  Grid,\n  Paper,\n  Radio,\n  FormHelperText,\n  RadioGroup,\n  Typography,\n} from \"@material-ui/core\";\nimport Accordeon from \"../../common/Accordeon\";\nimport { CancerDiagnosticErrorInterface } from \"../../../Reducer/Cancer/Cancer.model\";\n\ninterface CancerQuizInterface {\n  success?: boolean;\n  error?: boolean;\n  title: string;\n  onChange: (item: any) => void;\n  onUpdateChildren: (slug: string, key: string, value: any) => void;\n  value: string;\n  cancerList: any;\n  errorMessage: any;\n}\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    formControl: {\n      margin: `0 ${theme.spacing(15)}px`,\n    },\n    radio: {\n      flexDirection: \"row\",\n    },\n  })\n);\nexport default function CancerQuiz(props: CancerQuizInterface) {\n  const classes = useStyles();\n  console.log(props.errorMessage);\n  return (\n    <Accordeon\n      noBorder\n      // error={props.errorMessage.isDiagnosed !== \"\"}\n      {...props}\n      highlight\n      control\n      initialClosed\n    >\n      <Grid container spacing={3}>\n        {Object.entries(props.cancerList).map((list: any, index: number) => {\n          const [key, value] = list;\n          console.log([key, value]);\n          return (\n            <Accordeon\n              title={value.description}\n              value={value.value}\n              key={`cancer-list-map-${index}`}\n              control\n              initialClosed\n              error={props.errorMessage.message.cancerList[key] !== \"\"}\n              // success={props.errorMessage.cancerList[key].message.success}\n              onChange={(value: any) => {\n                props.onUpdateChildren(key, \"value\", value);\n              }}\n            >\n              <div style={{ marginRight: \"15px\" }}>\n                <TextField\n                  required\n                  id=\"outlined-full-width\"\n                  label={value.secondLabel}\n                  error={props.errorMessage.message.cancerList[key] !== \"\"}\n                  style={{ margin: 8 }}\n                  placeholder={value.secondLabel}\n                  type=\"number\"\n                  helperText={\n                    // AgentState.errorMessage.name !== \"\"\n                    // ? AgentState.errorMessage.name\n                    // : \"Required\"\n                    \"Number, required\"\n                  }\n                  fullWidth\n                  InputLabelProps={{\n                    shrink: true,\n                  }}\n                  margin=\"dense\"\n                  variant=\"outlined\"\n                  value={value.secondValue}\n                  name={\"name\"}\n                  onChange={(e: any) => {\n                    props.onUpdateChildren(key, \"secondValue\", e.target.value);\n                  }}\n                />\n              </div>\n              {value.number && (\n                <div>\n                  <TextField\n                    required\n                    id=\"outlined-full-width\"\n                    label={value.number.label}\n                    error={props.errorMessage.message.cancerList[key] !== \"\"}\n                    style={{ margin: 8 }}\n                    placeholder={value.number.label}\n                    type=\"number\"\n                    helperText={\n                      // AgentState.errorMessage.name !== \"\"\n                      // ? AgentState.errorMessage.name\n                      // : \"Required\"\n                      \"Number, required\"\n                    }\n                    fullWidth\n                    InputLabelProps={{\n                      shrink: true,\n                    }}\n                    margin=\"dense\"\n                    variant=\"outlined\"\n                    value={value.number.value}\n                    name={\"name\"}\n                    onChange={(e: any) => {\n                      props.onUpdateChildren(key, \"number\", {\n                        ...value.number,\n                        value: e.target.value,\n                      });\n                    }}\n                  />\n                </div>\n              )}\n              {value.radio && (\n                <div>\n                  <FormControl\n                    component=\"fieldset\"\n                    error={props.errorMessage.message.cancerList[key] !== \"\"}\n                    className={classes.formControl}\n                  >\n                    <FormLabel component=\"legend\">\n                      {value.radio.label}(*)\n                    </FormLabel>\n                    <RadioGroup\n                      aria-label=\"ethnicity\"\n                      name=\"ethnicity\"\n                      value={value.radio.value}\n                      onChange={(e: any) => {\n                        props.onUpdateChildren(key, \"radio\", {\n                          ...value.radio,\n                          value: e.target.value,\n                        });\n                      }}\n                      className={classes.radio}\n                    >\n                      {value.radio.items.map((et: any, key: number) => (\n                        <FormControlLabel\n                          value={et.value}\n                          key={et}\n                          control={<Radio />}\n                          label={et.label}\n                        />\n                      ))}\n                    </RadioGroup>\n                    <FormHelperText>Required</FormHelperText>\n                  </FormControl>\n                </div>\n              )}\n            </Accordeon>\n          );\n        })}\n      </Grid>\n    </Accordeon>\n  );\n}\n","/private/var/www/oberholtzermedia-form/src/v2/Reducer/User/User.initialState.ts",[],"/private/var/www/oberholtzermedia-form/src/reportWebVitals.ts",[],"/private/var/www/oberholtzermedia-form/src/v2/Reducer/User/index.tsx",[],"/private/var/www/oberholtzermedia-form/src/utils/index.ts",[],"/private/var/www/oberholtzermedia-form/src/v2/components/User/forms/AditionalInfo.tsx",["122","123","124","125","126","127","128","129","130","131"],"/private/var/www/oberholtzermedia-form/src/v2/components/common/Accordeon/index.tsx",[],"/private/var/www/oberholtzermedia-form/src/context/Auth.Context.tsx",[],"/private/var/www/oberholtzermedia-form/src/v2/components/User/forms/MediCare2.tsx",["132","133"],"import React, { useContext, useState } from \"react\";\nimport { makeStyles, createStyles, Theme } from \"@material-ui/core/styles\";\nimport Grid from \"@material-ui/core/Grid\";\nimport { AppContext } from \"../../../store\";\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableContainer from \"@material-ui/core/TableContainer\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Alert from \"@material-ui/lab/Alert\";\n\nimport { Button, TextField } from \"@material-ui/core\";\n\nimport {\n  USER_SET_ERROR_MEDI_CARE,\n  USER_UPDATE_MEDICARE_INFO,\n} from \"../../../Reducer/User\";\nimport { checkMedicare } from \"../../../../actions/profile\";\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      flexGrow: 1,\n    },\n    formControl: {\n      margin: `0 ${theme.spacing(3)}px`,\n      width: \"95%\",\n    },\n    radio: {\n      flexDirection: \"row\",\n    },\n    paper: {\n      height: 140,\n      width: 100,\n    },\n    button: {\n      margin: theme.spacing(1, 1, 0, 0),\n    },\n    table: {\n      minWidth: 650,\n    },\n    control: {\n      padding: theme.spacing(2),\n    },\n  })\n);\n\nfunction createData(name: string, value: any) {\n  return { name, value };\n}\n\nconst rows = [\n  createData(\"Frozen yoghurt\", 159),\n  createData(\"Ice cream sandwich\", 237),\n  createData(\"Eclair\", 262),\n  createData(\"Cupcake\", 305),\n  createData(\"Gingerbread\", 356),\n];\n// The first commit of Material-UI\n// const [selectedDate, setSelectedDate] = React.useState<Date | null>(\n//   new Date(UserState.MediCare.firstName)\n// );\n\nexport default function UserMedicareForm() {\n  const classes = useStyles();\n  const [loading, setLoading] = useState<boolean>(false);\n  const { UserState, UserDispatch } = useContext(AppContext);\n  const [internalError, setErr] = useState<string>(\"\");\n\n  const handleChange = (\n    event: React.ChangeEvent<{ name?: string | undefined; value: unknown }>\n  ) => {\n    console.log(\"handleChange\", event);\n    UserDispatch({\n      type: USER_UPDATE_MEDICARE_INFO,\n      key: (event.target as HTMLInputElement).name,\n      value: (event.target as HTMLInputElement).value,\n    });\n  };\n  return (\n    <Grid container className={classes.root} spacing={2}>\n      <Grid container className={classes.root} spacing={2}>\n        {internalError ? (\n          <Grid item xs={12}>\n            <Alert severity=\"error\">{internalError}</Alert>\n          </Grid>\n        ) : (\n          <>\n            {UserState.errorMessage.MediCare.success && (\n              <Grid item xs={12}>\n                <Alert severity=\"success\">\n                  This section was validated successfully .\n                </Alert>\n              </Grid>\n            )}\n          </>\n        )}\n\n        <Grid item xs={12} sm={6}>\n          <TextField\n            disabled={loading}\n            required\n            id=\"outlined-full-width\"\n            label=\"memberID\"\n            error={\n              UserState.errorMessage.MediCare.message.memberID !== \"\" ||\n              internalError !== \"\"\n            }\n            style={{ margin: 8 }}\n            placeholder=\"memberID\"\n            helperText={\n              UserState.errorMessage.MediCare.message.memberID !== \"\"\n                ? UserState.errorMessage.MediCare.message.memberID\n                : internalError\n                ? internalError\n                : \"Required\"\n            }\n            fullWidth\n            InputLabelProps={{\n              shrink: true,\n            }}\n            margin=\"dense\"\n            variant=\"outlined\"\n            value={UserState.MediCare.memberID}\n            name={\"memberID\"}\n            onChange={handleChange}\n          />\n        </Grid>\n        {/* // /////////////////////// */}\n      </Grid>\n      <Grid item xs={12}>\n        <Button\n          onClick={() => {\n            // UserDispatch({ type: USER_SET_ERROR_MEDI_CARE });\n            if (!loading) {\n              setLoading(true);\n              try {\n                if (UserState.MediCare.memberID === \"\") {\n                  UserDispatch({\n                    type: USER_SET_ERROR_MEDI_CARE,\n                  });\n                  setLoading(false);\n                } else\n                  checkMedicare(UserState)\n                    .then((r: any) => {\n                      setErr(\"\");\n                      UserDispatch({\n                        type: USER_UPDATE_MEDICARE_INFO,\n                        key: \"extendedMedicareLeadData\",\n                        value: r || {},\n                      });\n                      UserDispatch({ type: USER_SET_ERROR_MEDI_CARE });\n                      setLoading(false);\n                    })\n                    .catch((err: any) => {\n                      setErr(err);\n                      UserDispatch({\n                        type: USER_SET_ERROR_MEDI_CARE,\n                      });\n                      UserDispatch({\n                        type: USER_UPDATE_MEDICARE_INFO,\n                        key: \"extendedMedicareLeadData\",\n                        value: {},\n                      });\n                      setLoading(false);\n                    });\n              } catch (err) {\n                setErr(err);\n                UserDispatch({ type: USER_SET_ERROR_MEDI_CARE });\n                setLoading(false);\n              }\n            }\n          }}\n          variant=\"outlined\"\n          color=\"primary\"\n          className={classes.button}\n        >\n          Save\n        </Button>\n      </Grid>\n      {UserState.MediCare.extendedMedicareLeadData && (\n        <TableContainer component={Paper}>\n          <Table\n            className={classes.table}\n            size=\"small\"\n            aria-label=\"a dense table\"\n          >\n            <TableBody>\n              {Object.entries(UserState.MediCare.extendedMedicareLeadData).map(\n                (row: [string, any]) => {\n                  const [key, value] = row;\n                  console.log(row);\n                  switch (true) {\n                    case key === \"APIResponseMessage\":\n                    case key === \"EDIErrorMessage\":\n                    case key === \"DisclaimerMessage\":\n                    case key === \"PayerName\":\n                    case key === \"DOS\":\n                    case key === \"AddtionalInfo\":\n                      return (\n                        <TableRow key={key}>\n                          <TableCell component=\"th\" scope=\"row\">\n                            {key}\n                          </TableCell>\n                          <TableCell align=\"right\">\n                            <span\n                              dangerouslySetInnerHTML={{ __html: value }}\n                            ></span>\n                          </TableCell>\n                        </TableRow>\n                      );\n                    case key === \"MedicareInfoSummary\":\n                      return (\n                        <>\n                          {UserState.MediCare.extendedMedicareLeadData\n                            .MedicareInfoSummary &&\n                            Object.entries(\n                              UserState.MediCare.extendedMedicareLeadData\n                                .MedicareInfoSummary\n                            )\n                              .filter((r: any) => typeof r[1] === \"string\")\n                              .map((row2: [string, any]) => (\n                                <TableRow key={row2[0]}>\n                                  <TableCell component=\"th\" scope=\"row\">\n                                    {row2[0]}\n                                  </TableCell>\n                                  <TableCell align=\"right\">\n                                    <span\n                                      dangerouslySetInnerHTML={{\n                                        __html: row2[1],\n                                      }}\n                                    ></span>\n                                  </TableCell>\n                                </TableRow>\n                              ))}\n                        </>\n                      );\n                  }\n                }\n              )}\n            </TableBody>\n          </Table>\n        </TableContainer>\n      )}\n    </Grid>\n  );\n}\n","/private/var/www/oberholtzermedia-form/src/v2/Reducer/Stepper.tsx",[],{"ruleId":"134","severity":1,"message":"135","line":1,"column":17,"nodeType":"136","messageId":"137","endLine":1,"endColumn":27},{"ruleId":"134","severity":1,"message":"138","line":4,"column":10,"nodeType":"136","messageId":"137","endLine":4,"endColumn":20},{"ruleId":"134","severity":1,"message":"139","line":5,"column":8,"nodeType":"136","messageId":"137","endLine":5,"endColumn":13},{"ruleId":"134","severity":1,"message":"140","line":10,"column":3,"nodeType":"136","messageId":"137","endLine":10,"endColumn":11},{"ruleId":"134","severity":1,"message":"141","line":12,"column":3,"nodeType":"136","messageId":"137","endLine":12,"endColumn":12},{"ruleId":"134","severity":1,"message":"142","line":3,"column":10,"nodeType":"136","messageId":"137","endLine":3,"endColumn":26},{"ruleId":"134","severity":1,"message":"143","line":4,"column":8,"nodeType":"136","messageId":"137","endLine":4,"endColumn":20},{"ruleId":"134","severity":1,"message":"144","line":5,"column":3,"nodeType":"136","messageId":"137","endLine":5,"endColumn":17},{"ruleId":"134","severity":1,"message":"145","line":6,"column":3,"nodeType":"136","messageId":"137","endLine":6,"endColumn":19},{"ruleId":"134","severity":1,"message":"146","line":9,"column":8,"nodeType":"136","messageId":"137","endLine":9,"endColumn":24},{"ruleId":"134","severity":1,"message":"147","line":11,"column":8,"nodeType":"136","messageId":"137","endLine":11,"endColumn":17},{"ruleId":"134","severity":1,"message":"148","line":12,"column":8,"nodeType":"136","messageId":"137","endLine":12,"endColumn":13},{"ruleId":"134","severity":1,"message":"149","line":14,"column":8,"nodeType":"136","messageId":"137","endLine":14,"endColumn":13},{"ruleId":"134","severity":1,"message":"150","line":53,"column":10,"nodeType":"136","messageId":"137","endLine":53,"endColumn":17},{"ruleId":"134","severity":1,"message":"151","line":69,"column":25,"nodeType":"136","messageId":"137","endLine":69,"endColumn":40},{"ruleId":"152","replacedBy":"153"},{"ruleId":"154","replacedBy":"155"},{"ruleId":"134","severity":1,"message":"156","line":3,"column":24,"nodeType":"136","messageId":"137","endLine":3,"endColumn":29},{"ruleId":"134","severity":1,"message":"157","line":14,"column":7,"nodeType":"136","messageId":"137","endLine":14,"endColumn":17},{"ruleId":"134","severity":1,"message":"158","line":23,"column":7,"nodeType":"136","messageId":"137","endLine":23,"endColumn":13},{"ruleId":"152","replacedBy":"159"},{"ruleId":"154","replacedBy":"160"},{"ruleId":"134","severity":1,"message":"161","line":1,"column":40,"nodeType":"136","messageId":"137","endLine":1,"endColumn":50},{"ruleId":"134","severity":1,"message":"156","line":7,"column":24,"nodeType":"136","messageId":"137","endLine":7,"endColumn":29},{"ruleId":"162","severity":1,"message":"163","line":66,"column":6,"nodeType":"164","endLine":66,"endColumn":24,"suggestions":"165"},{"ruleId":"162","severity":1,"message":"163","line":73,"column":6,"nodeType":"164","endLine":73,"endColumn":26,"suggestions":"166"},{"ruleId":"134","severity":1,"message":"167","line":3,"column":18,"nodeType":"136","messageId":"137","endLine":3,"endColumn":28},{"ruleId":"134","severity":1,"message":"168","line":5,"column":3,"nodeType":"136","messageId":"137","endLine":5,"endColumn":30},{"ruleId":"134","severity":1,"message":"169","line":6,"column":3,"nodeType":"136","messageId":"137","endLine":6,"endColumn":31},{"ruleId":"134","severity":1,"message":"170","line":7,"column":3,"nodeType":"136","messageId":"137","endLine":7,"endColumn":27},{"ruleId":"152","replacedBy":"171"},{"ruleId":"154","replacedBy":"172"},{"ruleId":"134","severity":1,"message":"173","line":5,"column":3,"nodeType":"136","messageId":"137","endLine":5,"endColumn":9},{"ruleId":"134","severity":1,"message":"156","line":10,"column":3,"nodeType":"136","messageId":"137","endLine":10,"endColumn":8},{"ruleId":"134","severity":1,"message":"174","line":14,"column":3,"nodeType":"136","messageId":"137","endLine":14,"endColumn":13},{"ruleId":"134","severity":1,"message":"175","line":17,"column":10,"nodeType":"136","messageId":"137","endLine":17,"endColumn":40},{"ruleId":"134","severity":1,"message":"176","line":13,"column":3,"nodeType":"136","messageId":"137","endLine":13,"endColumn":12},{"ruleId":"134","severity":1,"message":"177","line":16,"column":8,"nodeType":"136","messageId":"137","endLine":16,"endColumn":20},{"ruleId":"134","severity":1,"message":"178","line":18,"column":3,"nodeType":"136","messageId":"137","endLine":18,"endColumn":21},{"ruleId":"134","severity":1,"message":"179","line":19,"column":3,"nodeType":"136","messageId":"137","endLine":19,"endColumn":26},{"ruleId":"134","severity":1,"message":"180","line":22,"column":8,"nodeType":"136","messageId":"137","endLine":22,"endColumn":13},{"ruleId":"134","severity":1,"message":"181","line":23,"column":8,"nodeType":"136","messageId":"137","endLine":23,"endColumn":18},{"ruleId":"134","severity":1,"message":"182","line":32,"column":10,"nodeType":"136","messageId":"137","endLine":32,"endColumn":23},{"ruleId":"134","severity":1,"message":"183","line":33,"column":8,"nodeType":"136","messageId":"137","endLine":33,"endColumn":18},{"ruleId":"134","severity":1,"message":"184","line":63,"column":25,"nodeType":"136","messageId":"137","endLine":63,"endColumn":31},{"ruleId":"134","severity":1,"message":"185","line":64,"column":9,"nodeType":"136","messageId":"137","endLine":64,"endColumn":25},{"ruleId":"134","severity":1,"message":"186","line":53,"column":7,"nodeType":"136","messageId":"137","endLine":53,"endColumn":11},{"ruleId":"187","severity":1,"message":"188","line":191,"column":38,"nodeType":"189","messageId":"190","endLine":191,"endColumn":40},"@typescript-eslint/no-unused-vars","'useContext' is defined but never used.","Identifier","unusedVar","'AppContext' is defined but never used.","'Alert' is defined but never used.","'Checkbox' is defined but never used.","'FormGroup' is defined but never used.","'StepperInterface' is defined but never used.","'SteppReducer' is defined but never used.","'initialStepper' is defined but never used.","'SET_CURRENT_STEP' is defined but never used.","'useScrollTrigger' is defined but never used.","'Container' is defined but never used.","'Slide' is defined but never used.","'Agent' is defined but never used.","'Counter' is defined but never used.","'StepperDispatch' is assigned a value but never used.","no-native-reassign",["191"],"no-negated-in-lhs",["192"],"'Paper' is defined but never used.","'cancerList' is assigned a value but never used.","'Sugery' is assigned a value but never used.",["191"],["192"],"'useReducer' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'StepperDispatch'. Either include it or remove the dependency array.","ArrayExpression",["193"],["194"],"'compareAsc' is defined but never used.","'ProfileAddressDataInterface' is defined but never used.","'ProfileMedicareDataInterface' is defined but never used.","'ProfileUserDataInterface' is defined but never used.",["191"],["192"],"'Button' is defined but never used.","'Typography' is defined but never used.","'CancerDiagnosticErrorInterface' is defined but never used.","'TextField' is defined but never used.","'DateFnsUtils' is defined but never used.","'KeyboardDatePicker' is defined but never used.","'MuiPickersUtilsProvider' is defined but never used.","'Radio' is defined but never used.","'RadioGroup' is defined but never used.","'EthnicityList' is defined but never used.","'InputPhone' is defined but never used.","'setErr' is assigned a value but never used.","'handleDateChange' is assigned a value but never used.","'rows' is assigned a value but never used.","array-callback-return","Array.prototype.map() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","no-global-assign","no-unsafe-negation",{"desc":"195","fix":"196"},{"desc":"197","fix":"198"},"Update the dependencies array to be: [AgentState.error, StepperDispatch]",{"range":"199","text":"200"},"Update the dependencies array to be: [AgentState.success, StepperDispatch]",{"range":"201","text":"202"},[1877,1895],"[AgentState.error, StepperDispatch]",[2050,2070],"[AgentState.success, StepperDispatch]"]