[{"/private/var/www/oberholtzermedia-form/src/reportWebVitals.ts":"1","/private/var/www/oberholtzermedia-form/src/App.tsx":"2","/private/var/www/oberholtzermedia-form/src/components/TabHeader.tsx":"3","/private/var/www/oberholtzermedia-form/src/components/Profile/index.tsx":"4","/private/var/www/oberholtzermedia-form/src/components/Profile/personal-info.component.tsx":"5","/private/var/www/oberholtzermedia-form/src/components/Profile/medical.component.tsx":"6","/private/var/www/oberholtzermedia-form/src/components/Cancer/index.tsx":"7","/private/var/www/oberholtzermedia-form/src/components/Cardiac/index.tsx":"8","/private/var/www/oberholtzermedia-form/src/components/Diabets/index.tsx":"9","/private/var/www/oberholtzermedia-form/src/components/Profile/address.component.tsx":"10","/private/var/www/oberholtzermedia-form/src/index.tsx":"11","/private/var/www/oberholtzermedia-form/src/components/Profile/physician-information.component.tsx":"12","/private/var/www/oberholtzermedia-form/src/components/Progress.tsx":"13","/private/var/www/oberholtzermedia-form/src/components/ProgressHeader.tsx":"14","/private/var/www/oberholtzermedia-form/src/components/DummyComponent.tsx":"15"},{"size":425,"mtime":1612288231251,"results":"16","hashOfConfig":"17"},{"size":4820,"mtime":1612473721103,"results":"18","hashOfConfig":"17"},{"size":1569,"mtime":1612363409115,"results":"19","hashOfConfig":"17"},{"size":2450,"mtime":1612472321832,"results":"20","hashOfConfig":"17"},{"size":3208,"mtime":1612465599170,"results":"21","hashOfConfig":"17"},{"size":941,"mtime":1612460476284,"results":"22","hashOfConfig":"17"},{"size":1929,"mtime":1612472496839,"results":"23","hashOfConfig":"17"},{"size":2098,"mtime":1612472291258,"results":"24","hashOfConfig":"17"},{"size":2056,"mtime":1612472304456,"results":"25","hashOfConfig":"17"},{"size":1274,"mtime":1612474777600,"results":"26","hashOfConfig":"17"},{"size":500,"mtime":1612288231247,"results":"27","hashOfConfig":"17"},{"size":1019,"mtime":1612465362849,"results":"28","hashOfConfig":"17"},{"size":2622,"mtime":1612474141840,"results":"29","hashOfConfig":"17"},{"size":419,"mtime":1612468721875,"results":"30","hashOfConfig":"17"},{"size":251,"mtime":1612469479224,"results":"31","hashOfConfig":"17"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},"1j9z5km",{"filePath":"35","messages":"36","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"37","messages":"38","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"39","messages":"40","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44","usedDeprecatedRules":"34"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"34"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50","usedDeprecatedRules":"34"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"34"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"56","messages":"57","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"61","messages":"62","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"64"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},"/private/var/www/oberholtzermedia-form/src/reportWebVitals.ts",[],["71","72"],"/private/var/www/oberholtzermedia-form/src/App.tsx",["73","74"],"/private/var/www/oberholtzermedia-form/src/components/TabHeader.tsx",["75"],"/private/var/www/oberholtzermedia-form/src/components/Profile/index.tsx",["76","77","78"],"import { Fragment, useState } from \"react\"\nimport { Container, Row, Col, Breadcrumb, BreadcrumbItem } from 'reactstrap';\n\nimport { TabItemInterface } from '../TabHeader'\nimport PersonalInfo from \"./personal-info.component\"\nimport Address from \"./address.component\"\nimport MedicareID from \"./medical.component\"\nimport PhysicianInformation from \"./physician-information.component\"\n\nimport Progress from \"../Progress\"\n\nconst Tabs: Array<TabItemInterface> = [\n   {\n      id: 1,\n      label: \"Personal Information.\",\n      component: <PersonalInfo />,\n      success: true,\n      index: 0\n   },\n   {\n      id: 2,\n      label: \"Address\",\n      component: <Address />,\n      error: true,\n      index: 1\n   },\n   {\n      id: 3,\n      label: \"Medicare ID\",\n      component: <MedicareID />,\n      index: 2\n   },\n   {\n      id: 4,\n      label: \"Primary Care\",\n      component: <PhysicianInformation />,\n      index: 3\n   },\n]\n\nconst Profile = (props: any) => {\n   const [tabIndex, setTab] = useState<number>(0)\n   const activeTab: TabItemInterface = Tabs[tabIndex]\n   return (\n      <div id=\"wizard_container\">\n         <div id=\"top-wizard\">\n            <Container>\n               <Row>\n                  <Col>\n                     <Progress\n                        tabs={Tabs}\n                        activeTab={activeTab}\n                        nextTab={props.nextTab}\n                        prevTab={props.prevTab}\n                        setTab={setTab}\n                        currentIndex={tabIndex}\n                        onNext={() => {\n                           setTab(tabIndex + 1)\n                        }}\n                        goToNextTab={props.goToNextTab}\n                        backToPrevTab={props.backToPrevTab}\n                        onPrev={() => {\n                           setTab(tabIndex - 1)\n                        }}\n                     />\n                  </Col>\n               </Row>\n               <Row>\n                  <Col>\n                     <h3>{activeTab.label}</h3>\n                     <p>Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, </p>\n                  </Col>\n               </Row>\n            </Container>\n         </div>\n         <div id=\"middle-wizard\">\n            {activeTab.component}\n         </div>\n         <div id=\"bottom-wizard\">\n         </div>\n      </div>\n)}\n\n\nexport default Profile","/private/var/www/oberholtzermedia-form/src/components/Profile/personal-info.component.tsx",["79"],"import { Container, Row, Col, Form, FormGroup, Label, Input, CustomInput } from 'reactstrap';\n\ninterface formInputInterface {\n  id: string;\n  label: string;\n}\nconst FormInput = ({id, label}: formInputInterface) => (\n  <FormGroup>\n    <Label for={`form-input-id-${id}`}>{label}</Label>\n    <Input bsSize=\"sm\" type=\"text\" name=\"lastName\" id={`form-input-id-${id}`} placeholder={label} />\n  </FormGroup>\n)\n\nconst Ethnicity: Array<string>= [\"Asian\", \"African American\", \"Ashkenzai Jewish\", \"Caucasian\", \"French Canadian\", \"Hispanic\", \"Indian\", \"Middle Eastern\", \"Native American\", \"Pacific Islander\", \"Other\"]\nconst Separator = () => <Col xs=\"12\"><hr /></Col>\nconst PersonalInfo = () => {\n  return (\n  <div className=\"col-xs-12\">\n    <Form>\n      <Container>\n        <Row>\n          <Col xs=\"12\" sm=\"4\">\n            <FormInput id=\"userFirstName\" label=\"First name\" />\n          </Col>\n          <Col xs=\"12\" sm=\"4\">\n            <FormInput id=\"userLastName\" label=\"Last name\" />\n          </Col>\n          <Col xs=\"12\" sm=\"4\">\n              <Label for=\"RadioMale\">Gender</Label>\n              <FormGroup>\n                <CustomInput bsSize=\"sm\" type=\"radio\"  name=\"gender\" id=\"RadioMale\" label=\"Male\"  inline/>\n                <CustomInput bsSize=\"sm\" type=\"radio\"  name=\"gender\" id=\"RadioFemale\" label=\"Female\"  inline/>\n              </FormGroup>\n          </Col>\n          <Col xs=\"12\" sm=\"6\">\n            <FormInput id=\"firstContact\" label=\"Phone\" />\n          </Col>\n          <Col xs=\"12\" sm=\"6\">\n            <FormInput id=\"AltContactNumber\" label=\"Alt. Phone\" />\n          </Col>\n          <Col xs=\"12\">\n            <FormInput id=\"emailAddress\" label=\"Email Address\" />\n          </Col>\n          <Col xs=\"12\" >\n            <FormGroup>\n              <Label for=\"birthDate\">Birth Date</Label>\n              <Input\n                bsSize=\"sm\"\n                type=\"date\"\n                name=\"date\"\n                id=\"birthDate\"\n                placeholder=\"Birth date\"\n              />\n            </FormGroup>\n          </Col>\n          <Col xs=\"12\">\n              <Label for=\"RadioEthnicity\">Ethnicity</Label>\n              <FormGroup>\n                {\n                  Ethnicity.map((et, key) => (\n                    <CustomInput bsSize=\"sm\" type=\"radio\"  name=\"RadioEthnicity\" id={`Ethnicity-id-${key}`} key={`Ethnicity-id-${key}`} label={et}  inline/>\n                  ))\n                }\n              </FormGroup>\n          </Col>\n          <Col xs=\"12\">\n              <Label for=\"RadioEthnicity\">Previous Tests only </Label>\n          </Col>\n          <Col xs=\"12\">\n              <FormGroup check inline>\n                <Label check>\n                  <Input type=\"checkbox\" /> Cardiac\n                </Label>\n              </FormGroup>\n              <FormGroup check inline>\n                <Label check>\n                  <Input type=\"checkbox\" /> Diabetes\n                </Label>\n              </FormGroup>\n              <FormGroup check inline>\n                <Label check>\n                  <Input type=\"checkbox\" />  Cancer\n                </Label>\n              </FormGroup>\n          </Col>\n        </Row>\n      </Container>\n      </Form>\n  </div>\n)}\n\n\nexport default PersonalInfo","/private/var/www/oberholtzermedia-form/src/components/Profile/medical.component.tsx",["80","81","82","83","84","85"],"import React, { useState } from 'react';\nimport {\n  InputGroup,\n  InputGroupAddon,\n  InputGroupButtonDropdown,\n  Input,\n  Button,\n  DropdownToggle,\n  DropdownMenu,\n  DropdownItem,\n  Form,\n  Col,\n  Row,\n  Container\n } from 'reactstrap';\n\nconst MedicareID = () => {\n  const [dropdownOpen, setDropdownOpen] = useState(false);\n  const [splitButtonOpen, setSplitButtonOpen] = useState(false);\n\n  const toggleDropDown = () => setDropdownOpen(!dropdownOpen);\n\n  const toggleSplit = () => setSplitButtonOpen(!splitButtonOpen);\n\n  return (\n      <Container>\n        <Row>\n          <Col xs=\"12\">\n            <Form>\n              <InputGroup>\n                <Input placeholder=\"Medicare ID\" />\n                <InputGroupAddon addonType=\"append\"><Button color=\"secondary\">Check Elgibility</Button></InputGroupAddon>\n              </InputGroup>\n            </Form>\n          </Col>\n        </Row>\n      </Container>\n  );\n}\n\n\nexport default MedicareID;","/private/var/www/oberholtzermedia-form/src/components/Cancer/index.tsx",["86","87","88"],"import { Fragment, useState } from \"react\"\nimport { Container, Row, Col, Breadcrumb, BreadcrumbItem } from 'reactstrap';\nimport { TabItemInterface } from '../TabHeader'\nimport DummyComponent from \"../DummyComponent\"\nimport Progress from \"../Progress\"\n\nconst Tabs: Array<TabItemInterface> = [\n   {\n      id: 1,\n      label: \"Diagnostic\",\n      component: <DummyComponent />,\n      index: 0\n   },\n   {\n      id: 3,\n      label: \"Family Member\",\n      component: <DummyComponent />,\n      index: 1\n   },\n]\n\nconst Cancer = (props: any) => {\n   const [tabIndex, setTab] = useState<number>(0)\n   const activeTab: TabItemInterface = Tabs[tabIndex]\n   return (\n      <div id=\"wizard_container\">\n      <div id=\"top-wizard\">\n         <Container>\n            <Row>\n               <Col>\n                  <Progress\n                     tabs={Tabs}\n                     activeTab={activeTab}\n                     nextTab={props.nextTab}\n                     prevTab={props.prevTab}\n                     setTab={setTab}\n                     currentIndex={tabIndex}\n                     onNext={() => {\n                        setTab(tabIndex + 1)\n                     }}\n                     goToNextTab={props.goToNextTab}\n                     backToPrevTab={props.backToPrevTab}\n                     onPrev={() => {\n                        setTab(tabIndex - 1)\n                     }}\n                  />\n               </Col>\n            </Row>\n            <Row>\n               <Col>\n                  <h3>{activeTab.label}</h3>\n                  <p>Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, </p>\n               </Col>\n            </Row>\n         </Container>\n      </div>\n      <div id=\"middle-wizard\">\n         {activeTab.component}\n      </div>\n      <div id=\"bottom-wizard\">\n      </div>\n   </div>\n)}\n\n\nexport default Cancer","/private/var/www/oberholtzermedia-form/src/components/Cardiac/index.tsx",["89","90","91"],"import { Fragment, useState } from \"react\"\nimport { Container, Row, Col, Breadcrumb, BreadcrumbItem } from 'reactstrap';\nimport { TabItemInterface } from '../TabHeader'\nimport DummyComponent from \"../DummyComponent\"\nimport Progress from \"../Progress\"\n\nconst Tabs: Array<TabItemInterface> = [\n   {\n      id: 1,\n      label: \"Diagnostic\",\n      component: <DummyComponent />,\n      success: true,\n      index: 0\n   },\n   {\n      id: 2,\n      label: \"Medications\",\n      component: <DummyComponent />,\n      success: true,\n      index: 1\n   },\n   {\n      id: 3,\n      label: \"Family Member\",\n      component: <DummyComponent />,\n      success: true,\n      index: 3\n   },\n]\n\nconst Cardiac = (props: any) => {\n   const [tabIndex, setTab] = useState<number>(0)\n   const activeTab: TabItemInterface = Tabs[tabIndex]\n   return (\n      <div id=\"wizard_container\">\n      <div id=\"top-wizard\">\n         <Container>\n            <Row>\n               <Col>\n                  <Progress\n                     tabs={Tabs}\n                     activeTab={activeTab}\n                     nextTab={props.nextTab}\n                     prevTab={props.prevTab}\n                     setTab={setTab}\n                     currentIndex={tabIndex}\n                     onNext={() => {\n                        setTab(tabIndex + 1)\n                     }}\n                     goToNextTab={props.goToNextTab}\n                     backToPrevTab={props.backToPrevTab}\n                     onPrev={() => {\n                        setTab(tabIndex - 1)\n                     }}\n                  />\n               </Col>\n            </Row>\n            <Row>\n               <Col>\n                  <h3>{activeTab.label}</h3>\n                  <p>Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, </p>\n               </Col>\n            </Row>\n         </Container>\n      </div>\n      <div id=\"middle-wizard\">\n         {activeTab.component}\n      </div>\n      <div id=\"bottom-wizard\">\n      </div>\n   </div>\n)}\n\n\nexport default Cardiac","/private/var/www/oberholtzermedia-form/src/components/Diabets/index.tsx",["92","93","94"],"/private/var/www/oberholtzermedia-form/src/components/Profile/address.component.tsx",["95","96"],"import { Container, Row, Col, Form, FormGroup, Label, Input, CustomInput, FormFeedback, FormText } from 'reactstrap';\n\ninterface formInputInterface {\n  id: string;\n  label: string;\n}\nconst FormInput = ({id, label}: formInputInterface) => (\n  <FormGroup>\n    <Label for={`form-input-id-${id}`}>{label}</Label>\n    <Input type=\"text\" bsSize=\"sm\" name=\"lastName\" id={`form-input-id-${id}`} placeholder={label} />\n  </FormGroup>\n)\nconst Address = () => {\n  return (\n  <div className=\"col-xs-12\">\n    <Form>\n      <Container>\n        <Row>\n          <Col xs=\"12\" sm=\"6\">\n            <FormGroup className=\"position-relative\">\n              <Label for=\"examplePassword\">Full Address</Label>\n              <Input invalid />\n              <FormFeedback tooltip>Invalid Address, Example of a valid address here.</FormFeedback>\n          </FormGroup>\n          </Col>\n          <Col xs=\"12\" sm=\"6\">\n            <FormInput id=\"address2\" label=\"Address (line 2)\" />\n          </Col> \n          <Col xs=\"12\" sm=\"6\" >\n            <FormInput id=\"city\" label=\"City / State\" />\n          </Col> \n          <Col xs=\"12\" sm=\"6\" >\n            <FormInput id=\"postalCode\" label=\"Postal Code\" />\n          </Col> \n        </Row>\n      </Container>\n      </Form>\n  </div>\n)}\n\n\nexport default Address","/private/var/www/oberholtzermedia-form/src/index.tsx",[],"/private/var/www/oberholtzermedia-form/src/components/Profile/physician-information.component.tsx",["97"],"import { Container, Row, Col, Form, FormGroup, Label, Input, CustomInput } from 'reactstrap';\n\ninterface formInputInterface {\n  id: string;\n  label: string;\n}\nconst FormInput = ({id, label}: formInputInterface) => (\n  <FormGroup>\n    <Label for={`form-input-id-${id}`}>{label}</Label>\n    <Input bsSize=\"sm\" type=\"text\" name=\"lastName\" id={`form-input-id-${id}`} placeholder={label} />\n  </FormGroup>\n)\n\n/** \nPrimary Care Doctor Full name - Primary Care Contact Phone\nPrimary Care Address - Address (Line 2)\nPrimary Care City - Primary Care State  - Primary Care Postal\n*/\nconst PhysicianInformation = () => {\n  return (\n  <div className=\"col-xs-12\">\n    <Form>\n      <Container>\n        <Row>\n          <Col xs=\"12\" sm=\"6\">\n            <FormInput id=\" DoctorFullname\" label=\" Doctor Full name\" />\n          </Col>\n          <Col xs=\"12\" sm=\"6\">\n            <FormInput id=\"ContactPhone\" label=\"Phone\" />\n          </Col> \n        </Row>\n      </Container>\n      </Form>\n  </div>\n)}\n\n\nexport default PhysicianInformation",["98","99"],"/private/var/www/oberholtzermedia-form/src/components/Progress.tsx",["100","101","102","103","104","105","106","107","108"],"/private/var/www/oberholtzermedia-form/src/components/ProgressHeader.tsx",[],"/private/var/www/oberholtzermedia-form/src/components/DummyComponent.tsx",[],{"ruleId":"109","replacedBy":"110"},{"ruleId":"111","replacedBy":"112"},{"ruleId":"113","severity":1,"message":"114","line":3,"column":10,"nodeType":"115","messageId":"116","endLine":3,"endColumn":18},{"ruleId":"113","severity":1,"message":"117","line":4,"column":8,"nodeType":"115","messageId":"116","endLine":4,"endColumn":17},{"ruleId":"118","severity":1,"message":"119","line":25,"column":29,"nodeType":"120","endLine":25,"endColumn":98},{"ruleId":"113","severity":1,"message":"121","line":1,"column":10,"nodeType":"115","messageId":"116","endLine":1,"endColumn":18},{"ruleId":"113","severity":1,"message":"122","line":2,"column":31,"nodeType":"115","messageId":"116","endLine":2,"endColumn":41},{"ruleId":"113","severity":1,"message":"123","line":2,"column":43,"nodeType":"115","messageId":"116","endLine":2,"endColumn":57},{"ruleId":"113","severity":1,"message":"124","line":15,"column":7,"nodeType":"115","messageId":"116","endLine":15,"endColumn":16},{"ruleId":"113","severity":1,"message":"125","line":5,"column":3,"nodeType":"115","messageId":"116","endLine":5,"endColumn":27},{"ruleId":"113","severity":1,"message":"126","line":8,"column":3,"nodeType":"115","messageId":"116","endLine":8,"endColumn":17},{"ruleId":"113","severity":1,"message":"127","line":9,"column":3,"nodeType":"115","messageId":"116","endLine":9,"endColumn":15},{"ruleId":"113","severity":1,"message":"128","line":10,"column":3,"nodeType":"115","messageId":"116","endLine":10,"endColumn":15},{"ruleId":"113","severity":1,"message":"129","line":21,"column":9,"nodeType":"115","messageId":"116","endLine":21,"endColumn":23},{"ruleId":"113","severity":1,"message":"130","line":23,"column":9,"nodeType":"115","messageId":"116","endLine":23,"endColumn":20},{"ruleId":"113","severity":1,"message":"121","line":1,"column":10,"nodeType":"115","messageId":"116","endLine":1,"endColumn":18},{"ruleId":"113","severity":1,"message":"122","line":2,"column":31,"nodeType":"115","messageId":"116","endLine":2,"endColumn":41},{"ruleId":"113","severity":1,"message":"123","line":2,"column":43,"nodeType":"115","messageId":"116","endLine":2,"endColumn":57},{"ruleId":"113","severity":1,"message":"121","line":1,"column":10,"nodeType":"115","messageId":"116","endLine":1,"endColumn":18},{"ruleId":"113","severity":1,"message":"122","line":2,"column":31,"nodeType":"115","messageId":"116","endLine":2,"endColumn":41},{"ruleId":"113","severity":1,"message":"123","line":2,"column":43,"nodeType":"115","messageId":"116","endLine":2,"endColumn":57},{"ruleId":"113","severity":1,"message":"121","line":1,"column":10,"nodeType":"115","messageId":"116","endLine":1,"endColumn":18},{"ruleId":"113","severity":1,"message":"122","line":2,"column":31,"nodeType":"115","messageId":"116","endLine":2,"endColumn":41},{"ruleId":"113","severity":1,"message":"123","line":2,"column":43,"nodeType":"115","messageId":"116","endLine":2,"endColumn":57},{"ruleId":"113","severity":1,"message":"131","line":1,"column":62,"nodeType":"115","messageId":"116","endLine":1,"endColumn":73},{"ruleId":"113","severity":1,"message":"132","line":1,"column":89,"nodeType":"115","messageId":"116","endLine":1,"endColumn":97},{"ruleId":"113","severity":1,"message":"131","line":1,"column":62,"nodeType":"115","messageId":"116","endLine":1,"endColumn":73},{"ruleId":"109","replacedBy":"133"},{"ruleId":"111","replacedBy":"134"},{"ruleId":"113","severity":1,"message":"135","line":1,"column":17,"nodeType":"115","messageId":"116","endLine":1,"endColumn":25},{"ruleId":"113","severity":1,"message":"136","line":4,"column":3,"nodeType":"115","messageId":"116","endLine":4,"endColumn":11},{"ruleId":"113","severity":1,"message":"137","line":5,"column":3,"nodeType":"115","messageId":"116","endLine":5,"endColumn":9},{"ruleId":"113","severity":1,"message":"138","line":6,"column":3,"nodeType":"115","messageId":"116","endLine":6,"endColumn":6},{"ruleId":"113","severity":1,"message":"139","line":7,"column":3,"nodeType":"115","messageId":"116","endLine":7,"endColumn":10},{"ruleId":"113","severity":1,"message":"140","line":8,"column":3,"nodeType":"115","messageId":"116","endLine":8,"endColumn":10},{"ruleId":"113","severity":1,"message":"141","line":9,"column":3,"nodeType":"115","messageId":"116","endLine":9,"endColumn":8},{"ruleId":"113","severity":1,"message":"114","line":10,"column":3,"nodeType":"115","messageId":"116","endLine":10,"endColumn":11},{"ruleId":"113","severity":1,"message":"142","line":14,"column":3,"nodeType":"115","messageId":"116","endLine":14,"endColumn":12},"no-native-reassign",["143"],"no-negated-in-lhs",["144"],"@typescript-eslint/no-unused-vars","'Progress' is defined but never used.","Identifier","unusedVar","'TabHeader' is defined but never used.","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","'Fragment' is defined but never used.","'Breadcrumb' is defined but never used.","'BreadcrumbItem' is defined but never used.","'Separator' is assigned a value but never used.","'InputGroupButtonDropdown' is defined but never used.","'DropdownToggle' is defined but never used.","'DropdownMenu' is defined but never used.","'DropdownItem' is defined but never used.","'toggleDropDown' is assigned a value but never used.","'toggleSplit' is assigned a value but never used.","'CustomInput' is defined but never used.","'FormText' is defined but never used.",["143"],["144"],"'useState' is defined but never used.","'Collapse' is defined but never used.","'Navbar' is defined but never used.","'Nav' is defined but never used.","'NavItem' is defined but never used.","'NavLink' is defined but never used.","'Alert' is defined but never used.","'ToastBody' is defined but never used.","no-global-assign","no-unsafe-negation"]