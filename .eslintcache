[{"/private/var/www/oberholtzermedia-form/src/v2/components/Cancer/FamilyHistory/form.tsx":"1","/private/var/www/oberholtzermedia-form/src/v2/components/common/Stepper/index.tsx":"2","/private/var/www/oberholtzermedia-form/src/App.tsx":"3","/private/var/www/oberholtzermedia-form/src/v2/components/Cancer/FamilyHistory/index.tsx":"4","/private/var/www/oberholtzermedia-form/src/v2/Reducer/Cancer/Cancer.initialState.ts":"5","/private/var/www/oberholtzermedia-form/src/v2/components/User/forms/PersonalInfo.tsx":"6","/private/var/www/oberholtzermedia-form/src/v2/Reducer/Cancer/index.ts":"7","/private/var/www/oberholtzermedia-form/src/v2/components/Agent/index.tsx":"8","/private/var/www/oberholtzermedia-form/src/actions/profile.ts":"9","/private/var/www/oberholtzermedia-form/src/v2/Reducer/User/User.initialState.ts":"10","/private/var/www/oberholtzermedia-form/src/reportWebVitals.ts":"11","/private/var/www/oberholtzermedia-form/src/v2/Reducer/User/index.tsx":"12","/private/var/www/oberholtzermedia-form/src/utils/index.ts":"13","/private/var/www/oberholtzermedia-form/src/v2/components/User/forms/AditionalInfo.tsx":"14","/private/var/www/oberholtzermedia-form/src/v2/components/common/Accordeon/index.tsx":"15","/private/var/www/oberholtzermedia-form/src/context/Auth.Context.tsx":"16","/private/var/www/oberholtzermedia-form/src/v2/components/User/forms/MediCare2.tsx":"17","/private/var/www/oberholtzermedia-form/src/v2/Reducer/Stepper.tsx":"18","/private/var/www/oberholtzermedia-form/src/v2/Reducer/Cancer/Cancer.functions.ts":"19","/private/var/www/oberholtzermedia-form/src/v2/components/User/forms/AddressInfo.tsx":"20","/private/var/www/oberholtzermedia-form/src/v2/components/Cancer/index.tsx":"21","/private/var/www/oberholtzermedia-form/src/v2/components/Cancer/Quiz/index.tsx":"22","/private/var/www/oberholtzermedia-form/src/v2/components/Cancer/AvailableGenes/index.tsx":"23","/private/var/www/oberholtzermedia-form/src/v2/components/Cancer/RCETransfer.tsx":"24","/private/var/www/oberholtzermedia-form/src/v2/components/Cancer/IndicationsTesting/index.tsx":"25","/private/var/www/oberholtzermedia-form/src/index.tsx":"26","/private/var/www/oberholtzermedia-form/src/v2/Reducer/App.tsx":"27","/private/var/www/oberholtzermedia-form/src/v2/store/index.tsx":"28","/private/var/www/oberholtzermedia-form/src/v2/components/User/index.tsx":"29","/private/var/www/oberholtzermedia-form/src/v2/components/Cancer/TestDescription/index.tsx":"30","/private/var/www/oberholtzermedia-form/src/v2/components/User/forms/PrimaryCare.tsx":"31","/private/var/www/oberholtzermedia-form/src/v2/components/Cancer/PreviousTreatment/index.tsx":"32","/private/var/www/oberholtzermedia-form/src/v2/Reducer/Agent/index.tsx":"33","/private/var/www/oberholtzermedia-form/src/v2/components/Cancer/PreviousClinicalTestingResults/index.tsx":"34","/private/var/www/oberholtzermedia-form/src/v2/components/Cancer/PreviousTumorTestingResults/index.tsx":"35"},{"size":8682,"mtime":1614131212858,"results":"36","hashOfConfig":"37"},{"size":3090,"mtime":1614022602144,"results":"38","hashOfConfig":"37"},{"size":2966,"mtime":1614107779603,"results":"39","hashOfConfig":"37"},{"size":3258,"mtime":1614201031257,"results":"40","hashOfConfig":"37"},{"size":9986,"mtime":1614204901721,"results":"41","hashOfConfig":"37"},{"size":9104,"mtime":1614110998634,"results":"42","hashOfConfig":"37"},{"size":3072,"mtime":1614131248539,"results":"43","hashOfConfig":"37"},{"size":5275,"mtime":1614106926189,"results":"44","hashOfConfig":"37"},{"size":2289,"mtime":1613977269014,"results":"45","hashOfConfig":"37"},{"size":2455,"mtime":1614127142658,"results":"46","hashOfConfig":"37"},{"size":425,"mtime":1613576502476,"results":"47","hashOfConfig":"37"},{"size":9947,"mtime":1613980921692,"results":"48","hashOfConfig":"37"},{"size":494,"mtime":1613677416518,"results":"49","hashOfConfig":"37"},{"size":10739,"mtime":1613978314575,"results":"50","hashOfConfig":"37"},{"size":5600,"mtime":1614105127294,"results":"51","hashOfConfig":"37"},{"size":982,"mtime":1613576453991,"results":"52","hashOfConfig":"37"},{"size":8309,"mtime":1614127815558,"results":"53","hashOfConfig":"37"},{"size":2933,"mtime":1614201754579,"results":"54","hashOfConfig":"37"},{"size":1083,"mtime":1614028847328,"results":"55","hashOfConfig":"37"},{"size":8128,"mtime":1613978601087,"results":"56","hashOfConfig":"37"},{"size":5703,"mtime":1614204957088,"results":"57","hashOfConfig":"37"},{"size":9168,"mtime":1614179884079,"results":"58","hashOfConfig":"37"},{"size":3188,"mtime":1614202325579,"results":"59","hashOfConfig":"37"},{"size":4239,"mtime":1614198512487,"results":"60","hashOfConfig":"37"},{"size":4781,"mtime":1614204310122,"results":"61","hashOfConfig":"37"},{"size":559,"mtime":1613756313798,"results":"62","hashOfConfig":"37"},{"size":585,"mtime":1613749191644,"results":"63","hashOfConfig":"37"},{"size":1142,"mtime":1613985660200,"results":"64","hashOfConfig":"37"},{"size":5025,"mtime":1614127724263,"results":"65","hashOfConfig":"37"},{"size":2131,"mtime":1614203071873,"results":"66","hashOfConfig":"37"},{"size":3509,"mtime":1613974795349,"results":"67","hashOfConfig":"37"},{"size":5161,"mtime":1614201059634,"results":"68","hashOfConfig":"37"},{"size":1468,"mtime":1613973263777,"results":"69","hashOfConfig":"37"},{"size":5164,"mtime":1614204466614,"results":"70","hashOfConfig":"37"},{"size":5172,"mtime":1614204801184,"results":"71","hashOfConfig":"37"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74"},"1j9z5km",{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"77"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80","usedDeprecatedRules":"81"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"77"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"77"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"92","usedDeprecatedRules":"77"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"95","usedDeprecatedRules":"77"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"77"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"77"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"77"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"107","usedDeprecatedRules":"100"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"77"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"112","messages":"113","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"114","usedDeprecatedRules":"77"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"119"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"122","usedDeprecatedRules":"119"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"125","messages":"126","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"127","usedDeprecatedRules":"119"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"130","messages":"131","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"132","usedDeprecatedRules":"119"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"135"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"77"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"77"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"77"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"144","messages":"145","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"146","messages":"147","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"148","usedDeprecatedRules":"77"},{"filePath":"149","messages":"150","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"151","messages":"152","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"153","messages":"154","errorCount":0,"warningCount":15,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"155","messages":"156","errorCount":0,"warningCount":15,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/private/var/www/oberholtzermedia-form/src/v2/components/Cancer/FamilyHistory/form.tsx",["157","158","159","160","161"],"import React, { useContext, useState, useCallback } from \"react\";\nimport { makeStyles, createStyles, Theme } from \"@material-ui/core/styles\";\nimport Grid from \"@material-ui/core/Grid\";\nimport { AppContext } from \"../../../store\";\nimport Alert from \"@material-ui/lab/Alert\";\nimport RemoveCircleIcon from \"@material-ui/icons/RemoveCircle\";\nimport AddCircleOutlineIcon from \"@material-ui/icons/AddCircleOutline\";\nimport {\n  Button,\n  Checkbox,\n  FormControl,\n  FormGroup,\n  FormHelperText,\n  InputLabel,\n  Select,\n  TextField,\n  FormLabel,\n  RadioGroup,\n  FormControlLabel,\n  Radio,\n} from \"@material-ui/core\";\n\nimport DateFnsUtils from \"@date-io/date-fns\";\nimport {\n  KeyboardDatePicker,\n  MuiPickersUtilsProvider,\n} from \"@material-ui/pickers\";\n\nimport { CancerFamilyMemberInterface } from \"../../../Reducer/Cancer/Cancer.model\";\nimport { Relationship } from \"../../../Reducer/Cancer/Cancer.initialState\";\ninterface FamilyMemberFormInterface {\n  familyMember: CancerFamilyMemberInterface;\n  onRemove: (id: string) => void;\n  onSave: (fm: CancerFamilyMemberInterface) => void;\n}\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    formControl: {\n      margin: `0 ${theme.spacing(3)}px`,\n    },\n    radio: {\n      flexDirection: \"row\",\n    },\n    action: {\n      justifyContent: \"flex-end\",\n      display: \"flex\",\n      marginTop: \"30px\",\n      borderBottom: \"solid 1px #ebebeb\",\n      borderRadius: \"20px\",\n      boxShadow: \"0px 4px 1px -3px #ebebeb\",\n      padding: \"20px\",\n    },\n    button: {\n      margin: \"0 15px\",\n    },\n  })\n);\n\nconst FamilyMemberForm = ({\n  familyMember,\n  onRemove,\n  onSave,\n}: FamilyMemberFormInterface) => {\n  const [FM, setFM] = useState<CancerFamilyMemberInterface>(familyMember);\n  const classes = useStyles();\n\n  const handleChange = useCallback(\n    (name: string, value: unknown) => {\n      console.log(\"handleChange\", name, value);\n      // if (event.name) {\n      setFM({\n        ...FM,\n        [name]: value,\n      });\n      // }\n    },\n    [FM]\n  );\n\n  console.log(\n    JSON.stringify(familyMember) === JSON.stringify(FM),\n    familyMember,\n    FM\n  );\n  return (\n    <Grid container>\n      <Grid item xs={12}>\n        <h2>New Family Member {familyMember.id}</h2>\n      </Grid>\n      <Grid item xs={12} sm={6}>\n        <TextField\n          id=\"outlined-full-width\"\n          label=\"Full name\"\n          required\n          // error={UserState.errorMessage.PersonalInfo.message.firstName !== \"\"}\n          style={{ margin: 8 }}\n          placeholder=\"Placeholder\"\n          helperText={\n            \"Required\"\n            // UserState.errorMessage.PersonalInfo.message.firstName !== \"\"\n            //   ? UserState.errorMessage.PersonalInfo.message.firstName\n            //   : \"Required\"\n          }\n          fullWidth\n          InputLabelProps={{\n            shrink: true,\n          }}\n          margin=\"dense\"\n          variant=\"outlined\"\n          value={FM.name}\n          name={\"name\"}\n          onChange={(e: any) => handleChange(e.target.name, e.target.value)}\n        />\n      </Grid>\n      <Grid item xs={12} sm={4} style={{ marginLeft: \"30px\" }}>\n        <MuiPickersUtilsProvider utils={DateFnsUtils}>\n          <KeyboardDatePicker\n            margin=\"normal\"\n            id=\"date-picker-dialog\"\n            label=\"DOB\"\n            // error={UserState.errorMessage.PersonalInfo.message.birthDate}\n            format=\"MM/dd/yyyy\"\n            value={FM.dob}\n            name={\"dob\"}\n            onChange={(date: any, value: any) => {\n              handleChange(\"dob\", value);\n            }}\n            InputLabelProps={{\n              shrink: true,\n            }}\n            KeyboardButtonProps={{\n              \"aria-label\": \"change date\",\n            }}\n          />\n        </MuiPickersUtilsProvider>\n      </Grid>\n      <Grid item xs={12} sm={6}>\n        <FormControl\n          required\n          // disabled={loading}\n          className={classes.formControl}\n          // error={UserState.errorMessage.AddressInfo.message.state !== \"\"}\n        >\n          <InputLabel htmlFor=\"state-required\">Relationship</InputLabel>\n          <Select\n            native\n            name=\"relationship\"\n            inputProps={{\n              id: \"is-required\",\n              name: \"relationship\",\n            }}\n            value={FM.relationship}\n            onChange={(e: any) => handleChange(e.target.name, e.target.value)}\n          >\n            <option aria-label=\"None\" value=\"\" />\n            {Relationship.map((state: { value: string; label: string }) => (\n              <option\n                value={state.value}\n                key={`Cancer-FM-Relationship-${state.value}`}\n              >\n                {state.label}\n              </option>\n            ))}\n          </Select>\n          <FormHelperText>\n            Required\n            {/* {UserState.errorMessage.AddressInfo.message.state !== \"\"\n                  ? UserState.errorMessage.AddressInfo.message.state\n                  : \"Required\"} */}\n          </FormHelperText>\n        </FormControl>\n      </Grid>\n      <Grid item xs={12} sm={6}>\n        <FormControl\n          component=\"fieldset\"\n          // error={UserState.errorMessage.PersonalInfo.message.gender}\n          className={classes.formControl}\n        >\n          <FormLabel component=\"legend\">Gender (*) </FormLabel>\n          <RadioGroup\n            aria-label=\"gender\"\n            name=\"gender\"\n            value={FM.gender}\n            onChange={(e: any) => handleChange(e.target.name, e.target.value)}\n            className={classes.radio}\n          >\n            <FormControlLabel value=\"male\" control={<Radio />} label=\"Male\" />\n            <FormControlLabel\n              value=\"famale\"\n              control={<Radio />}\n              label=\"Female\"\n            />\n          </RadioGroup>\n          <FormHelperText>\n            {/* {UserState.errorMessage.PersonalInfo.message.gender !== \"\"\n              ? UserState.errorMessage.PersonalInfo.message.gender\n              : \"Required\"} */}\n          </FormHelperText>\n        </FormControl>\n      </Grid>\n      <Grid item xs={12}>\n        <TextField\n          id=\"outlined-full-width\"\n          label=\"Diagnosis and/or Symptoms:\"\n          required\n          type={\"textarea\"}\n          rows={4}\n          // error={UserState.errorMessage.PersonalInfo.message.firstName !== \"\"}\n          style={{ margin: 8 }}\n          placeholder=\"Diagnosis and/or Symptoms:\"\n          helperText={\n            \"Required\"\n            // UserState.errorMessage.PersonalInfo.message.firstName !== \"\"\n            //   ? UserState.errorMessage.PersonalInfo.message.firstName\n            //   : \"Required\"\n          }\n          fullWidth\n          InputLabelProps={{\n            shrink: true,\n          }}\n          margin=\"dense\"\n          variant=\"outlined\"\n          value={FM.diagnosisOrSymptoms}\n          name={\"diagnosisOrSymptoms\"}\n          onChange={(e: any) => handleChange(e.target.name, e.target.value)}\n        />\n      </Grid>\n      <Grid item xs={6}>\n        <TextField\n          id=\"outlined-full-width\"\n          label=\"Age of Onset\"\n          required\n          type={\"number\"}\n          rows={4}\n          // error={UserState.errorMessage.PersonalInfo.message.firstName !== \"\"}\n          style={{ margin: 8 }}\n          placeholder=\"Age of Onset\"\n          helperText={\n            \"Required\"\n            // UserState.errorMessage.PersonalInfo.message.firstName !== \"\"\n            //   ? UserState.errorMessage.PersonalInfo.message.firstName\n            //   : \"Required\"\n          }\n          fullWidth\n          InputLabelProps={{\n            shrink: true,\n          }}\n          margin=\"dense\"\n          variant=\"outlined\"\n          value={FM.ageOfDiagnosis}\n          name={\"ageOfDiagnosis\"}\n          onChange={(e: any) => handleChange(e.target.name, e.target.value)}\n        />\n      </Grid>\n      <Grid item xs={6} spacing={3} className={classes.action}>\n        <Button\n          variant=\"outlined\"\n          color=\"secondary\"\n          size=\"small\"\n          className={classes.button}\n          startIcon={<RemoveCircleIcon />}\n          // disabled={UserState.success}\n          onClick={() => {\n            onRemove(familyMember.id);\n          }}\n        >\n          Remove\n        </Button>\n        <Button\n          variant=\"contained\"\n          color=\"primary\"\n          size=\"small\"\n          className={classes.button}\n          startIcon={<AddCircleOutlineIcon />}\n          disabled={JSON.stringify(familyMember) === JSON.stringify(FM)}\n          onClick={() => {\n            onSave(FM);\n          }}\n        >\n          Save\n        </Button>\n      </Grid>\n    </Grid>\n  );\n};\nexport default FamilyMemberForm;\n","/private/var/www/oberholtzermedia-form/src/v2/components/common/Stepper/index.tsx",[],["162","163"],"/private/var/www/oberholtzermedia-form/src/App.tsx",["164","165","166","167","168","169","170","171","172","173"],"import React, { useContext, useReducer } from \"react\";\nimport reducer, { AppInterface, init } from \"./v2/Reducer/App\";\nimport { StepperInterface } from \"./v2/components/common/Stepper\";\nimport SteppReducer, {\n  initialStepper,\n  SET_CURRENT_STEP,\n} from \"./v2/Reducer/Stepper\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport useScrollTrigger from \"@material-ui/core/useScrollTrigger\";\nimport Box from \"@material-ui/core/Box\";\nimport Container from \"@material-ui/core/Container\";\nimport Slide from \"@material-ui/core/Slide\";\nimport { makeStyles, Theme, createStyles } from \"@material-ui/core/styles\";\nimport Agent from \"./v2/components/Agent\";\nimport MainStepper from \"./v2/components/common/Stepper\";\nimport { AppContext } from \"./v2/store\";\n\ninterface Props {\n  /**\n   * Injected by the documentation to work in an iframe.\n   * You won't need it on your project.\n   */\n  window?: () => Window;\n  children?: React.ReactElement;\n}\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    Container: {},\n    AppBar: {\n      backgroundColor: \"#39394d\",\n      color: \"#fff\",\n      height: \"40px\",\n      padding: \"0 24px\",\n      top: 0,\n      margin: 0,\n      alignItems: \"center\",\n      position: \"fixed\",\n      width: \"100%\",\n    },\n    AppHeader: {\n      color: \"#232333\",\n      height: \"64px\",\n      marginTop: \"40px\",\n      padding: \"0 24px\",\n      alignItems: \"center\",\n      border: \"solid 1px #e7e7e7\",\n      backgroundColor: \"#fff\",\n    },\n  })\n);\n\nfunction Counter({ count }: AppInterface) {\n  const [state, dispatch] = useReducer(reducer, { count }, init);\n  return (\n    <>\n      Count: {state.count}\n      <button onClick={() => dispatch({ type: \"reset\", payload: { count } })}>\n        Reset\n      </button>\n      <button onClick={() => dispatch({ type: \"decrement\" })}>-</button>\n      <button onClick={() => dispatch({ type: \"increment\" })}>+</button>\n    </>\n  );\n}\n\nexport default function App(props: Props) {\n  const classes = useStyles();\n  const { StepperState, StepperDispatch } = useContext(AppContext);\n  return (\n    <React.Fragment>\n      <CssBaseline />\n      <Box className={classes.AppBar} my={2} display=\"flex\">\n        <div>Fixed bar</div>\n      </Box>{\" \"}\n      {/* \n      <Box className={classes.AppHeader} my={2} display=\"flex\">\n        <div>Header</div>\n      </Box> */}\n      {/* <Container className={classes.Container}> */}\n      {/* <Box my={2}> */}\n      <MainStepper\n        steps={StepperState.steps}\n        activeStep={StepperState.activeStep}\n        control={StepperState.control}\n        // onNext={(nextStep) => {\n        //   StepperDispatch({ type: SET_CURRENT_STEP, step: nextStep });\n        // }}\n        // onPrevious={(previoustStep) => {\n        //   StepperDispatch({ type: SET_CURRENT_STEP, step: previoustStep });\n        // }}\n        onFinished={() => {\n          alert(\"finished\");\n        }}\n      />\n      {/* </Box> */}\n      {/* </Container> */}\n    </React.Fragment>\n  );\n}\n",["174","175"],"/private/var/www/oberholtzermedia-form/src/v2/components/Cancer/FamilyHistory/index.tsx",["176","177","178"],"/private/var/www/oberholtzermedia-form/src/v2/Reducer/Cancer/Cancer.initialState.ts",[],"/private/var/www/oberholtzermedia-form/src/v2/components/User/forms/PersonalInfo.tsx",[],"/private/var/www/oberholtzermedia-form/src/v2/Reducer/Cancer/index.ts",[],"/private/var/www/oberholtzermedia-form/src/v2/components/Agent/index.tsx",["179","180","181","182"],"import React, { useContext, useEffect, useReducer } from \"react\";\nimport TextField from \"@material-ui/core/TextField\";\nimport { createStyles, makeStyles, Theme } from \"@material-ui/core/styles\";\n\nimport { AppContext } from \"../../store\";\nimport { AGENT_UPDATE, AGENT_SET_ERROR } from \"../../Reducer/Agent\";\nimport { Button, Grid, Paper, Typography } from \"@material-ui/core\";\nimport {\n  SET_STEP_ERROR,\n  SET_STEP_SUCCESS,\n  GOT_TO_NEXT_STEP,\n} from \"../../Reducer/Stepper\";\nimport Accordeon from \"../common/Accordeon\";\nimport NavigateNextIcon from \"@material-ui/icons/NavigateNext\";\nimport ReportProblemIcon from \"@material-ui/icons/ReportProblem\";\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    form: {\n      \"& .MuiTextField-root\": {\n        margin: theme.spacing(1),\n        width: 200,\n      },\n    },\n    action: {\n      justifyContent: \"flex-end\",\n      display: \"flex\",\n      marginTop: \"30px\",\n    },\n    root: {\n      flexGrow: 1,\n      padding: \"30px 15px\",\n      backgroundColor: \"transparent\",\n    },\n    paper: {\n      padding: theme.spacing(2),\n      textAlign: \"center\",\n      color: theme.palette.text.secondary,\n      backgroundColor: \"transparent\",\n    },\n    button: {\n      margin: theme.spacing(1, 1, 0, 0),\n    },\n  })\n);\nexport default function Agent() {\n  const classes = useStyles();\n  const { AgentState, AgentDispatch, StepperDispatch } = useContext(AppContext);\n\n  const handleChange = (\n    event: React.ChangeEvent<{ name?: string | undefined; value: unknown }>\n  ) => {\n    console.log(\"handleChange\", event);\n    AgentDispatch({\n      type: AGENT_UPDATE,\n      key: (event.target as HTMLInputElement).name,\n      value: (event.target as HTMLInputElement).value,\n    });\n  };\n\n  useEffect(() => {\n    if (AgentState.error) {\n      console.log(\"useEffect ErroR\");\n      StepperDispatch({ type: SET_STEP_ERROR });\n    }\n  }, [AgentState.error]);\n\n  useEffect(() => {\n    if (AgentState.success) {\n      console.log(\"useEffect SUcces\");\n      StepperDispatch({ type: SET_STEP_SUCCESS });\n    }\n  }, [AgentState.success]);\n  return (\n    <div className={classes.root}>\n      <Grid container spacing={3}>\n        <Grid item xs={12} spacing={3}>\n          <Typography gutterBottom variant=\"h5\" component=\"h2\">\n            Agent\n          </Typography>\n          <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\n            Lizards are a widespread group of squamate reptiles, with over 6,000\n            species, ranging across all continents except Antarctica\n          </Typography>\n        </Grid>\n        <Accordeon\n          highlight\n          error={AgentState.error}\n          success={AgentState.success}\n          title=\"Info\"\n          description=\"description\"\n        >\n          <Grid container spacing={3}>\n            <Grid item xs={12} sm={6}>\n              <TextField\n                required\n                id=\"outlined-full-width\"\n                label=\"Agent name (*)\"\n                error={AgentState.errorMessage.name !== \"\"}\n                style={{ margin: 8 }}\n                placeholder=\"name\"\n                helperText={\n                  AgentState.errorMessage.name !== \"\"\n                    ? AgentState.errorMessage.name\n                    : \"Required\"\n                }\n                fullWidth\n                InputLabelProps={{\n                  shrink: true,\n                }}\n                margin=\"dense\"\n                variant=\"outlined\"\n                value={AgentState.name}\n                name={\"name\"}\n                onChange={handleChange}\n              />\n            </Grid>\n            <Grid item xs={12} sm={6}>\n              <TextField\n                required\n                id=\"outlined-full-width\"\n                label=\"Reacorded URL (*)\"\n                error={AgentState.errorMessage.url !== \"\"}\n                style={{ margin: 8 }}\n                placeholder=\"url\"\n                helperText={\n                  AgentState.errorMessage.url !== \"\"\n                    ? AgentState.errorMessage.url\n                    : \"Required\"\n                }\n                fullWidth\n                InputLabelProps={{\n                  shrink: true,\n                }}\n                margin=\"dense\"\n                variant=\"outlined\"\n                value={AgentState.url}\n                name={\"url\"}\n                onChange={handleChange}\n              />\n            </Grid>\n            <Grid item xs={12}>\n              <Button\n                onClick={() => {\n                  AgentDispatch({ type: AGENT_SET_ERROR });\n                }}\n                variant=\"outlined\"\n                color=\"primary\"\n                className={classes.button}\n              >\n                Save\n              </Button>\n            </Grid>\n          </Grid>\n        </Accordeon>\n      </Grid>\n      <Grid item xs={12} spacing={3} className={classes.action}>\n        <Button\n          variant=\"contained\"\n          color=\"primary\"\n          disabled={!AgentState.success}\n          endIcon={\n            AgentState.error ? <ReportProblemIcon /> : <NavigateNextIcon />\n          }\n          onClick={() => {\n            StepperDispatch({ type: GOT_TO_NEXT_STEP });\n          }}\n        >\n          Next\n        </Button>\n      </Grid>\n    </div>\n  );\n}\n","/private/var/www/oberholtzermedia-form/src/actions/profile.ts",["183","184","185","186"],"import axios from \"axios\";\nimport { token } from \"../context/Auth.Context\";\nimport { format, compareAsc } from \"date-fns\";\nimport {\n  ProfileAddressDataInterface,\n  ProfileMedicareDataInterface,\n  ProfileUserDataInterface,\n} from \"../context/Profile.Contex\";\nimport {\n  UserAddressInfoDataInterface,\n  UserInterface,\n} from \"../v2/Reducer/User/User.model\";\n\nexport const BASE_URL =\n  \"http://ec2co-ecsel-uixxpxra75ed-1580772910.us-west-2.elb.amazonaws.com\";\n\nexport const validateAddress = (Address: UserAddressInfoDataInterface) => {\n  const axiosConfig = {\n    headers: {\n      \"Content-Type\": \"application/json;charset=UTF-8\",\n      Authorization: `Bearer ${token}`,\n    },\n  };\n  const data = `?street=${Address.street}&street2=${Address.street2}&city=${Address.city}&state=${Address.state}&zipcode=${Address.zipcode}`;\n  return axios\n    .get(`${BASE_URL}/address-validation/${data}`, axiosConfig)\n    .then((r: any) => r.data);\n};\n\nexport const checkMedicare = (User: UserInterface) => {\n  const axiosConfig = {\n    headers: {\n      \"Content-Type\": \"application/json;charset=UTF-8\",\n      Authorization: `Bearer ${token}`,\n    },\n  };\n  if (!User.PersonalInfo.birthDate) {\n    // eslint-disable-next-line no-throw-literal\n    throw \"Invalid User DOB, Check Personal info section.\";\n  }\n  if (!User.PersonalInfo.firstName) {\n    // eslint-disable-next-line no-throw-literal\n    throw \"Invalid User firstname, Check Personal info section.\";\n  }\n  if (!User.PersonalInfo.lastName) {\n    // eslint-disable-next-line no-throw-literal\n    throw \"Invalid User lastname, Check Personal info section.\";\n  }\n\n  const DOB = new Date(User.PersonalInfo.birthDate);\n  // ?memberID=9dx2tp7pc18&Patient_DOB=1%2F22%2F1938&Patient_First=Rodolfo&Patient_Last=Gaytan&payerCode=00007&Provider_LastName=Fastflow%20Marketing&Provider_NPI=1609388842\n  const data = `?memberID=${User.MediCare.memberID}&Patient_DOB=${format(\n    new Date(DOB),\n    \"MM/dd/yyyy\"\n  )}&Patient_First=${User.PersonalInfo.firstName}&Patient_Last=${\n    User.PersonalInfo.lastName\n  }&payerCode=${User.MediCare.payerCode}&Provider_LastName=${\n    User.MediCare.Provider_LastName\n  }&Provider_NPI=${User.MediCare.Provider_NPI}`;\n  return axios\n    .get(`${BASE_URL}/medicare/${data}`, axiosConfig)\n    .then((r: any) => r.data);\n};\n","/private/var/www/oberholtzermedia-form/src/v2/Reducer/User/User.initialState.ts",[],"/private/var/www/oberholtzermedia-form/src/reportWebVitals.ts",[],["187","188"],"/private/var/www/oberholtzermedia-form/src/v2/Reducer/User/index.tsx",[],"/private/var/www/oberholtzermedia-form/src/utils/index.ts",[],"/private/var/www/oberholtzermedia-form/src/v2/components/User/forms/AditionalInfo.tsx",["189","190","191","192","193","194","195","196","197","198"],"import React, { useContext, useState } from \"react\";\nimport { makeStyles, createStyles, Theme } from \"@material-ui/core/styles\";\nimport Grid from \"@material-ui/core/Grid\";\nimport { AppContext } from \"../../../store\";\nimport Alert from \"@material-ui/lab/Alert\";\nimport {\n  Button,\n  Checkbox,\n  FormGroup,\n  FormHelperText,\n  InputLabel,\n  Select,\n  TextField,\n} from \"@material-ui/core\";\n\nimport DateFnsUtils from \"@date-io/date-fns\";\nimport {\n  KeyboardDatePicker,\n  MuiPickersUtilsProvider,\n} from \"@material-ui/pickers\";\n\nimport Radio from \"@material-ui/core/Radio\";\nimport RadioGroup from \"@material-ui/core/RadioGroup\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport FormLabel from \"@material-ui/core/FormLabel\";\nimport {\n  USER_UPDATE,\n  USER_SET_ERROR_ADITIONAL_INFO,\n  USER_UPDATE_ADITIONAL_INFO,\n} from \"../../../Reducer/User\";\nimport { EthnicityList } from \"../../../Reducer/User/User.initialState\";\nimport InputPhone from \"../../common/InputPhone\";\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      flexGrow: 1,\n    },\n    formControl: {\n      margin: `0 ${theme.spacing(3)}px`,\n      width: \"95%\",\n    },\n    radio: {\n      flexDirection: \"row\",\n    },\n    paper: {\n      height: 140,\n      width: 100,\n    },\n    button: {\n      margin: theme.spacing(1, 1, 0, 0),\n    },\n    control: {\n      padding: theme.spacing(2),\n    },\n  })\n);\n\nexport default function UserAditionalInformationInterface() {\n  const classes = useStyles();\n  const { UserState, UserDispatch } = useContext(AppContext);\n  const [internalError, setErr] = useState<string>(\"\");\n  const handleDateChange = (date: Date | null) => {\n    UserDispatch({\n      type: USER_UPDATE,\n      key: \"birthDate\",\n      value: date,\n    });\n  };\n\n  const handleChange = (\n    event: React.ChangeEvent<{ name?: string | undefined; value: unknown }>\n  ) => {\n    console.log(\"handleChange\", event);\n    UserDispatch({\n      type: USER_UPDATE_ADITIONAL_INFO,\n      key: (event.target as HTMLInputElement).name,\n      value: (event.target as HTMLInputElement).value,\n    });\n\n    //     previousTests: Array<string>;\n    //   salivaSwabTest?: boolean;\n    //   isAlzheimerorDementiatype?: boolean;\n    //   isNursingLiving?: boolean;\n  };\n  return (\n    <Grid container className={classes.root} spacing={2}>\n      <Grid container className={classes.root} spacing={2}>\n        {internalError ? (\n          <Grid item xs={12}>\n            <Alert severity=\"error\">{internalError}</Alert>\n          </Grid>\n        ) : (\n          <>\n            {UserState.errorMessage.AditionalInformation.success && (\n              <Grid item xs={12}>\n                <Alert severity=\"success\">\n                  This section was validated successfully .\n                </Alert>\n              </Grid>\n            )}\n          </>\n        )}\n        <Grid item xs={12}>\n          <FormControl\n            required\n            className={classes.formControl}\n            error={\n              UserState.errorMessage.AditionalInformation.message\n                .salivaSwabTest !== \"\"\n            }\n          >\n            <InputLabel htmlFor=\"salivaSwabTest-required\">\n              Have you ever taken a Saliva Swab DNA test?\n            </InputLabel>\n            <Select\n              native\n              name=\"salivaSwabTest\"\n              inputProps={{\n                id: \"is-required\",\n              }}\n              onChange={handleChange}\n            >\n              <option aria-label=\"None\" value=\"\" />\n              <option value={\"Yes\"}>Yes</option>\n              <option value={\"No\"}>No</option>\n            </Select>\n            <FormHelperText>\n              {UserState.errorMessage.AditionalInformation.message\n                .salivaSwabTest !== \"\"\n                ? UserState.errorMessage.AditionalInformation.message\n                    .salivaSwabTest\n                : \"Required\"}\n            </FormHelperText>\n          </FormControl>\n        </Grid>\n        <Grid item xs={12}>\n          <FormControl\n            required\n            className={classes.formControl}\n            error={\n              UserState.errorMessage.AditionalInformation.message\n                .isNursingLiving !== \"\"\n            }\n          >\n            <InputLabel htmlFor=\"isNursingLiving-required\">\n              Currenly living in a nursing home or assisted living facility?\n            </InputLabel>\n            <Select\n              native\n              name=\"isNursingLiving\"\n              inputProps={{\n                id: \"is-required\",\n              }}\n              onChange={handleChange}\n            >\n              <option aria-label=\"None\" value=\"\" />\n              <option value={\"Yes\"}>Yes</option>\n              <option value={\"No\"}>No</option>\n            </Select>\n            <FormHelperText>\n              {UserState.errorMessage.AditionalInformation.message\n                .isNursingLiving !== \"\"\n                ? UserState.errorMessage.AditionalInformation.message\n                    .isNursingLiving\n                : \"Required\"}\n            </FormHelperText>\n          </FormControl>\n        </Grid>\n        <Grid item xs={12}>\n          <FormControl\n            required\n            className={classes.formControl}\n            error={\n              UserState.errorMessage.AditionalInformation.message\n                .isAlzheimerorDementiatype !== \"\"\n            }\n          >\n            <InputLabel htmlFor=\"isAlzheimerorDementiatype-required\">\n              Do you have Alzheimer's or Dementia?\n            </InputLabel>\n            <Select\n              native\n              name=\"isAlzheimerorDementiatype\"\n              inputProps={{\n                id: \"is-required\",\n              }}\n              onChange={handleChange}\n            >\n              <option aria-label=\"None\" value=\"\" />\n              <option value={\"Yes\"}>Yes</option>\n              <option value={\"No\"}>No</option>\n            </Select>\n            <FormHelperText>\n              {UserState.errorMessage.AditionalInformation.message\n                .isAlzheimerorDementiatype !== \"\"\n                ? UserState.errorMessage.AditionalInformation.message\n                    .isAlzheimerorDementiatype\n                : \"Required\"}\n            </FormHelperText>\n          </FormControl>\n        </Grid>\n\n        <Grid item xs={12}>\n          <FormControl\n            required\n            error={\n              UserState.errorMessage.AditionalInformation.message\n                .previousTests !== \"\"\n            }\n            component=\"fieldset\"\n            className={classes.formControl}\n          >\n            <FormLabel component=\"legend\">Previous Generic Test</FormLabel>\n            <FormGroup>\n              {[\"Cancer\", \"Diabetes\", \"Cardio\"].map(\n                (item: string, index: number) => (\n                  <FormControlLabel\n                    key={`form-item-PreviousGenericTest${index}-${item}`}\n                    control={\n                      <Checkbox\n                        checked={UserState.AditionalInformation.previousTests.includes(\n                          item\n                        )}\n                        value={item}\n                        onChange={(\n                          event: React.ChangeEvent<{\n                            checked?: boolean | undefined;\n                            value: unknown;\n                          }>\n                        ) => {\n                          if (event.target.checked) {\n                            UserDispatch({\n                              type: USER_UPDATE_ADITIONAL_INFO,\n                              key: \"previousTests\",\n                              value: [\n                                ...UserState.AditionalInformation.previousTests,\n                                event.target.value,\n                              ],\n                            });\n                          } else {\n                            const index = UserState.AditionalInformation.previousTests.findIndex(\n                              (i: string) => i === event.target.value\n                            );\n                            const newPreviousTests =\n                              UserState.AditionalInformation.previousTests;\n                            newPreviousTests.splice(index, 1);\n\n                            UserDispatch({\n                              type: USER_UPDATE_ADITIONAL_INFO,\n                              key: \"previousTests\",\n                              value: newPreviousTests,\n                            });\n                          }\n                        }}\n                        name={item}\n                      />\n                    }\n                    label={item}\n                  />\n                )\n              )}\n            </FormGroup>\n            <FormHelperText>\n              {UserState.errorMessage.AditionalInformation.message\n                .previousTests !== \"\"\n                ? UserState.errorMessage.AditionalInformation.message\n                    .previousTests\n                : \"Required\"}\n            </FormHelperText>\n          </FormControl>\n        </Grid>\n        <Grid item xs={12}>\n          {/* <FormControl\n            component=\"fieldset\"\n            error={\n              UserState.errorMessage.AditionalInformation.message.ethnicity\n            }\n            className={classes.formControl}\n          >\n            <FormLabel component=\"legend\">Ethnicity (*) </FormLabel>\n            <RadioGroup\n              aria-label=\"ethnicity\"\n              name=\"ethnicity\"\n              value={UserState.AditionalInformation.ethnicity.value}\n              onChange={handleChange}\n              className={classes.radio}\n            >\n              {EthnicityList.map((et: string, key: number) => (\n                <FormControlLabel\n                  value={et}\n                  key={et}\n                  control={<Radio />}\n                  label={et}\n                />\n              ))}\n            </RadioGroup>\n            <FormHelperText>\n              {UserState.errorMessage.AditionalInformation.message.ethnicity !==\n              \"\"\n                ? UserState.errorMessage.AditionalInformation.message.ethnicity\n                : \"Required\"}\n            </FormHelperText>\n          </FormControl> */}\n        </Grid>\n        {/* // /////////////////////// */}\n      </Grid>\n      <Grid item xs={12}>\n        <Button\n          onClick={() => {\n            UserDispatch({ type: USER_SET_ERROR_ADITIONAL_INFO });\n          }}\n          variant=\"outlined\"\n          color=\"primary\"\n          className={classes.button}\n        >\n          Save\n        </Button>\n      </Grid>\n    </Grid>\n  );\n}\n","/private/var/www/oberholtzermedia-form/src/v2/components/common/Accordeon/index.tsx",[],"/private/var/www/oberholtzermedia-form/src/context/Auth.Context.tsx",[],"/private/var/www/oberholtzermedia-form/src/v2/components/User/forms/MediCare2.tsx",["199","200"],"import React, { useContext, useState } from \"react\";\nimport { makeStyles, createStyles, Theme } from \"@material-ui/core/styles\";\nimport Grid from \"@material-ui/core/Grid\";\nimport { AppContext } from \"../../../store\";\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableContainer from \"@material-ui/core/TableContainer\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Alert from \"@material-ui/lab/Alert\";\n\nimport { Button, TextField } from \"@material-ui/core\";\n\nimport {\n  USER_SET_ERROR_MEDI_CARE,\n  USER_UPDATE_MEDICARE_INFO,\n} from \"../../../Reducer/User\";\nimport { checkMedicare } from \"../../../../actions/profile\";\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      flexGrow: 1,\n    },\n    formControl: {\n      margin: `0 ${theme.spacing(3)}px`,\n      width: \"95%\",\n    },\n    radio: {\n      flexDirection: \"row\",\n    },\n    paper: {\n      height: 140,\n      width: 100,\n    },\n    button: {\n      margin: theme.spacing(1, 1, 0, 0),\n    },\n    table: {\n      minWidth: 650,\n    },\n    control: {\n      padding: theme.spacing(2),\n    },\n  })\n);\n\nfunction createData(name: string, value: any) {\n  return { name, value };\n}\n\nconst rows = [\n  createData(\"Frozen yoghurt\", 159),\n  createData(\"Ice cream sandwich\", 237),\n  createData(\"Eclair\", 262),\n  createData(\"Cupcake\", 305),\n  createData(\"Gingerbread\", 356),\n];\n// The first commit of Material-UI\n// const [selectedDate, setSelectedDate] = React.useState<Date | null>(\n//   new Date(UserState.MediCare.firstName)\n// );\n\nexport default function UserMedicareForm() {\n  const classes = useStyles();\n  const [loading, setLoading] = useState<boolean>(false);\n  const { UserState, UserDispatch } = useContext(AppContext);\n  const [internalError, setErr] = useState<string>(\"\");\n\n  const handleChange = (\n    event: React.ChangeEvent<{ name?: string | undefined; value: unknown }>\n  ) => {\n    console.log(\"handleChange\", event);\n    UserDispatch({\n      type: USER_UPDATE_MEDICARE_INFO,\n      key: (event.target as HTMLInputElement).name,\n      value: (event.target as HTMLInputElement).value,\n    });\n  };\n  return (\n    <Grid container className={classes.root} spacing={2}>\n      <Grid container className={classes.root} spacing={2}>\n        {internalError ? (\n          <Grid item xs={12}>\n            <Alert severity=\"error\">{internalError}</Alert>\n          </Grid>\n        ) : (\n          <>\n            {UserState.errorMessage.MediCare.success && (\n              <Grid item xs={12}>\n                <Alert severity=\"success\">\n                  This section was validated successfully .\n                </Alert>\n              </Grid>\n            )}\n          </>\n        )}\n\n        <Grid item xs={12} sm={6}>\n          <TextField\n            disabled={loading}\n            required\n            id=\"outlined-full-width\"\n            label=\"memberID\"\n            error={\n              UserState.errorMessage.MediCare.message.memberID !== \"\" ||\n              internalError !== \"\"\n            }\n            style={{ margin: 8 }}\n            placeholder=\"memberID\"\n            helperText={\n              UserState.errorMessage.MediCare.message.memberID !== \"\"\n                ? UserState.errorMessage.MediCare.message.memberID\n                : internalError\n                ? internalError\n                : \"Required\"\n            }\n            fullWidth\n            InputLabelProps={{\n              shrink: true,\n            }}\n            margin=\"dense\"\n            variant=\"outlined\"\n            value={UserState.MediCare.memberID}\n            name={\"memberID\"}\n            onChange={handleChange}\n          />\n        </Grid>\n        {/* // /////////////////////// */}\n      </Grid>\n      <Grid item xs={12}>\n        <Button\n          onClick={() => {\n            // UserDispatch({ type: USER_SET_ERROR_MEDI_CARE });\n            if (!loading) {\n              setLoading(true);\n              try {\n                if (UserState.MediCare.memberID === \"\") {\n                  UserDispatch({\n                    type: USER_SET_ERROR_MEDI_CARE,\n                  });\n                  setLoading(false);\n                } else\n                  checkMedicare(UserState)\n                    .then((r: any) => {\n                      setErr(\"\");\n                      UserDispatch({\n                        type: USER_UPDATE_MEDICARE_INFO,\n                        key: \"extendedMedicareLeadData\",\n                        value: r || {},\n                      });\n                      UserDispatch({ type: USER_SET_ERROR_MEDI_CARE });\n                      setLoading(false);\n                    })\n                    .catch((err: any) => {\n                      setErr(err);\n                      UserDispatch({\n                        type: USER_SET_ERROR_MEDI_CARE,\n                      });\n                      UserDispatch({\n                        type: USER_UPDATE_MEDICARE_INFO,\n                        key: \"extendedMedicareLeadData\",\n                        value: {},\n                      });\n                      setLoading(false);\n                    });\n              } catch (err) {\n                setErr(err);\n                UserDispatch({ type: USER_SET_ERROR_MEDI_CARE });\n                setLoading(false);\n              }\n            }\n          }}\n          variant=\"outlined\"\n          color=\"primary\"\n          className={classes.button}\n        >\n          Save\n        </Button>\n      </Grid>\n      {UserState.MediCare.extendedMedicareLeadData && (\n        <TableContainer component={Paper}>\n          <Table\n            className={classes.table}\n            size=\"small\"\n            aria-label=\"a dense table\"\n          >\n            <TableBody>\n              {Object.entries(UserState.MediCare.extendedMedicareLeadData).map(\n                (row: [string, any]) => {\n                  const [key, value] = row;\n                  console.log(row);\n                  switch (true) {\n                    case key === \"APIResponseMessage\":\n                    case key === \"EDIErrorMessage\":\n                    case key === \"DisclaimerMessage\":\n                    case key === \"PayerName\":\n                    case key === \"DOS\":\n                    case key === \"AddtionalInfo\":\n                      return (\n                        <TableRow key={key}>\n                          <TableCell component=\"th\" scope=\"row\">\n                            {key}\n                          </TableCell>\n                          <TableCell align=\"right\">\n                            <span\n                              dangerouslySetInnerHTML={{ __html: value }}\n                            ></span>\n                          </TableCell>\n                        </TableRow>\n                      );\n                    case key === \"MedicareInfoSummary\":\n                      return (\n                        <>\n                          {UserState.MediCare.extendedMedicareLeadData\n                            .MedicareInfoSummary &&\n                            Object.entries(\n                              UserState.MediCare.extendedMedicareLeadData\n                                .MedicareInfoSummary\n                            )\n                              .filter((r: any) => typeof r[1] === \"string\")\n                              .map((row2: [string, any]) => (\n                                <TableRow key={row2[0]}>\n                                  <TableCell component=\"th\" scope=\"row\">\n                                    {row2[0]}\n                                  </TableCell>\n                                  <TableCell align=\"right\">\n                                    <span\n                                      dangerouslySetInnerHTML={{\n                                        __html: row2[1],\n                                      }}\n                                    ></span>\n                                  </TableCell>\n                                </TableRow>\n                              ))}\n                        </>\n                      );\n                  }\n                }\n              )}\n            </TableBody>\n          </Table>\n        </TableContainer>\n      )}\n    </Grid>\n  );\n}\n","/private/var/www/oberholtzermedia-form/src/v2/Reducer/Stepper.tsx",["201"],"/private/var/www/oberholtzermedia-form/src/v2/Reducer/Cancer/Cancer.functions.ts",[],["202","203"],"/private/var/www/oberholtzermedia-form/src/v2/components/User/forms/AddressInfo.tsx",["204","205","206","207","208","209","210","211","212","213","214"],"import React, { useContext, useState } from \"react\";\nimport { makeStyles, createStyles, Theme } from \"@material-ui/core/styles\";\nimport Grid from \"@material-ui/core/Grid\";\nimport { AppContext } from \"../../../store\";\nimport Alert from \"@material-ui/lab/Alert\";\nimport {\n  Button,\n  Checkbox,\n  FormGroup,\n  FormHelperText,\n  InputLabel,\n  Select,\n  TextField,\n} from \"@material-ui/core\";\n\nimport DateFnsUtils from \"@date-io/date-fns\";\nimport {\n  KeyboardDatePicker,\n  MuiPickersUtilsProvider,\n} from \"@material-ui/pickers\";\n\nimport Radio from \"@material-ui/core/Radio\";\nimport RadioGroup from \"@material-ui/core/RadioGroup\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport FormLabel from \"@material-ui/core/FormLabel\";\nimport {\n  USER_SET_ERROR_ADDRESS_INFO,\n  USER_UPDATE_ADDRESS_INFO,\n} from \"../../../Reducer/User\";\nimport { AddressStatesList } from \"../../../Reducer/User/User.initialState\";\nimport InputPhone from \"../../common/InputPhone\";\nimport { validateAddress } from \"../../../../actions/profile\";\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      flexGrow: 1,\n    },\n    formControl: {\n      margin: `0 ${theme.spacing(3)}px`,\n      width: \"95%\",\n    },\n    radio: {\n      flexDirection: \"row\",\n    },\n    paper: {\n      height: 140,\n      width: 100,\n    },\n    button: {\n      margin: theme.spacing(1, 1, 0, 0),\n    },\n    control: {\n      padding: theme.spacing(2),\n    },\n  })\n);\n\n// The first commit of Material-UI\n// const [selectedDate, setSelectedDate] = React.useState<Date | null>(\n//   new Date(UserState.AddressInfo.firstName)\n// );\n\nexport default function UserAddressInfoForm() {\n  const classes = useStyles();\n  const [loading, setLoading] = useState<boolean>(false);\n  const { UserState, UserDispatch } = useContext(AppContext);\n  const [internalError, setErr] = useState<string>(\"\");\n\n  const handleDateChange = (date: Date | null) => {\n    UserDispatch({\n      type: USER_UPDATE_ADDRESS_INFO,\n      key: \"birthDate\",\n      value: date,\n    });\n  };\n\n  const handleChange = (\n    event: React.ChangeEvent<{ name?: string | undefined; value: unknown }>\n  ) => {\n    console.log(\"handleChange\", event);\n    UserDispatch({\n      type: USER_UPDATE_ADDRESS_INFO,\n      key: (event.target as HTMLInputElement).name,\n      value: (event.target as HTMLInputElement).value,\n    });\n  };\n  return (\n    <Grid container className={classes.root} spacing={2}>\n      <Grid container className={classes.root} spacing={2}>\n        {internalError ? (\n          <Grid item xs={12}>\n            <Alert severity=\"error\">{internalError}</Alert>\n          </Grid>\n        ) : (\n          <>\n            {UserState.errorMessage.AddressInfo.success && (\n              <Grid item xs={12}>\n                <Alert severity=\"success\">\n                  This section was validated successfully .\n                </Alert>\n              </Grid>\n            )}\n          </>\n        )}\n        <Grid item xs={12} sm={6}>\n          <TextField\n            disabled={loading}\n            required\n            id=\"outlined-full-width\"\n            label=\"Street\"\n            error={UserState.errorMessage.AddressInfo.message.street !== \"\"}\n            style={{ margin: 8 }}\n            placeholder=\"Street\"\n            helperText={\n              UserState.errorMessage.AddressInfo.message.street !== \"\"\n                ? UserState.errorMessage.AddressInfo.message.street\n                : \"Required\"\n            }\n            fullWidth\n            InputLabelProps={{\n              shrink: true,\n            }}\n            margin=\"dense\"\n            variant=\"outlined\"\n            value={UserState.AddressInfo.street}\n            name={\"street\"}\n            onChange={handleChange}\n          />\n        </Grid>\n        <Grid item xs={12} sm={6}>\n          <TextField\n            disabled={loading}\n            id=\"outlined-full-width\"\n            label=\"Apartament/ Unit\"\n            style={{ margin: 8 }}\n            placeholder=\"Apartament/ Unit\"\n            helperText={\"optional\"}\n            fullWidth\n            InputLabelProps={{\n              shrink: true,\n            }}\n            margin=\"dense\"\n            variant=\"outlined\"\n            value={UserState.AddressInfo.street2}\n            name={\"street2\"}\n            onChange={handleChange}\n          />\n        </Grid>\n\n        <Grid item xs={12} sm={4}>\n          <TextField\n            disabled={loading}\n            required\n            id=\"outlined-full-width\"\n            label=\"City\"\n            error={UserState.errorMessage.AddressInfo.message.city !== \"\"}\n            style={{ margin: 8 }}\n            placeholder=\"City\"\n            helperText={\n              UserState.errorMessage.AddressInfo.message.city !== \"\"\n                ? UserState.errorMessage.AddressInfo.message.city\n                : \"Required\"\n            }\n            fullWidth\n            InputLabelProps={{\n              shrink: true,\n            }}\n            margin=\"dense\"\n            variant=\"outlined\"\n            value={UserState.AddressInfo.city}\n            name={\"city\"}\n            onChange={handleChange}\n          />\n        </Grid>\n        <Grid item xs={12} sm={4}>\n          <Grid item xs={12}>\n            <FormControl\n              required\n              disabled={loading}\n              className={classes.formControl}\n              error={UserState.errorMessage.AddressInfo.message.state !== \"\"}\n            >\n              <InputLabel htmlFor=\"state-required\">State</InputLabel>\n              <Select\n                native\n                name=\"state\"\n                inputProps={{\n                  id: \"is-required\",\n                  name: \"state\",\n                }}\n                onChange={handleChange}\n              >\n                <option aria-label=\"None\" value=\"\" />\n                {AddressStatesList.map((state: string) => (\n                  <option value={state} key={`AddressStatesList-${state}`}>\n                    {state}\n                  </option>\n                ))}\n              </Select>\n              <FormHelperText>\n                {UserState.errorMessage.AddressInfo.message.state !== \"\"\n                  ? UserState.errorMessage.AddressInfo.message.state\n                  : \"Required\"}\n              </FormHelperText>\n            </FormControl>\n          </Grid>\n        </Grid>\n        <Grid item xs={12} sm={4}>\n          <TextField\n            disabled={loading}\n            required\n            id=\"outlined-full-width\"\n            label=\"Zipcode\"\n            error={UserState.errorMessage.AddressInfo.message.zipcode !== \"\"}\n            style={{ margin: 8 }}\n            placeholder=\"Zipcode\"\n            helperText={\n              UserState.errorMessage.AddressInfo.message.zipcode !== \"\"\n                ? UserState.errorMessage.AddressInfo.message.zipcode\n                : \"Required\"\n            }\n            fullWidth\n            InputLabelProps={{\n              shrink: true,\n            }}\n            margin=\"dense\"\n            variant=\"outlined\"\n            value={UserState.AddressInfo.zipcode}\n            name={\"zipcode\"}\n            onChange={handleChange}\n          />\n        </Grid>\n        {/* // /////////////////////// */}\n      </Grid>\n      <Grid item xs={12}>\n        <Button\n          onClick={() => {\n            // UserDispatch({ type: USER_SET_ERROR_ADDRESS_INFO });\n            if (!loading) {\n              setLoading(true);\n              validateAddress(UserState.AddressInfo)\n                .then((r: any) => {\n                  setErr(\"\");\n                  UserDispatch({ type: USER_SET_ERROR_ADDRESS_INFO });\n                  setLoading(false);\n                })\n                .catch((err: any) => {\n                  UserDispatch({ type: USER_SET_ERROR_ADDRESS_INFO });\n                  setErr(err.response.data.message);\n                  setLoading(false);\n                });\n            }\n          }}\n          variant=\"outlined\"\n          color=\"primary\"\n          className={classes.button}\n        >\n          Save\n        </Button>\n      </Grid>\n    </Grid>\n  );\n}\n","/private/var/www/oberholtzermedia-form/src/v2/components/Cancer/index.tsx",["215","216","217","218","219"],"/private/var/www/oberholtzermedia-form/src/v2/components/Cancer/Quiz/index.tsx",["220","221","222","223"],"import React from \"react\";\nimport TextField from \"@material-ui/core/TextField\";\nimport { createStyles, makeStyles, Theme } from \"@material-ui/core/styles\";\nimport {\n  Button,\n  FormControl,\n  FormControlLabel,\n  FormLabel,\n  Grid,\n  Paper,\n  Radio,\n  FormHelperText,\n  RadioGroup,\n  Typography,\n} from \"@material-ui/core\";\nimport Accordeon from \"../../common/Accordeon\";\nimport { CancerDiagnosticErrorInterface } from \"../../../Reducer/Cancer/Cancer.model\";\n\ninterface CancerQuizInterface {\n  success?: boolean;\n  error?: boolean;\n  title: string;\n  onChange: (item: any) => void;\n  onOtherChange: (item: any, value: any) => void;\n  onUpdateChildren: (slug: string, key: string, value: any) => void;\n  value: string;\n  cancerList: any;\n  other: any;\n  errorMessage: any;\n}\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    formControl: {\n      margin: `0 ${theme.spacing(15)}px`,\n    },\n    radio: {\n      flexDirection: \"row\",\n    },\n  })\n);\nexport default function CancerQuiz(props: CancerQuizInterface) {\n  const classes = useStyles();\n  const { cancerList, other } = props;\n\n  return (\n    <Accordeon\n      noBorder\n      // error={props.errorMessage.isDiagnosed !== \"\"}\n      {...props}\n      highlight\n      control\n      initialClosed\n    >\n      <Grid container spacing={3}>\n        {Object.entries(cancerList).map((list: any, index: number) => {\n          const [key, value] = list;\n          console.log([key, value]);\n          return (\n            <Accordeon\n              title={value.description}\n              value={value.value}\n              key={`cancer-list-map-${index}`}\n              control\n              initialClosed\n              error={props.errorMessage.message.cancerList[key] !== \"\"}\n              // success={props.errorMessage.cancerList[key].message.success}\n              onChange={(value: any) => {\n                props.onUpdateChildren(key, \"value\", value);\n              }}\n            >\n              <div style={{ marginRight: \"15px\" }}>\n                <TextField\n                  required\n                  id=\"outlined-full-width\"\n                  label={value.secondLabel}\n                  error={props.errorMessage.message.cancerList[key] !== \"\"}\n                  style={{ margin: 8 }}\n                  placeholder={value.secondLabel}\n                  type=\"number\"\n                  helperText={\n                    // AgentState.errorMessage.name !== \"\"\n                    // ? AgentState.errorMessage.name\n                    // : \"Required\"\n                    \"Number, required\"\n                  }\n                  fullWidth\n                  InputLabelProps={{\n                    shrink: true,\n                  }}\n                  margin=\"dense\"\n                  variant=\"outlined\"\n                  value={value.secondValue}\n                  name={\"name\"}\n                  onChange={(e: any) => {\n                    props.onUpdateChildren(key, \"secondValue\", e.target.value);\n                  }}\n                />\n              </div>\n              {value.number && (\n                <div>\n                  <TextField\n                    required\n                    id=\"outlined-full-width\"\n                    label={value.number.label}\n                    error={props.errorMessage.message.cancerList[key] !== \"\"}\n                    style={{ margin: 8 }}\n                    placeholder={value.number.label}\n                    type=\"number\"\n                    helperText={\n                      // AgentState.errorMessage.name !== \"\"\n                      // ? AgentState.errorMessage.name\n                      // : \"Required\"\n                      \"Number, required\"\n                    }\n                    fullWidth\n                    InputLabelProps={{\n                      shrink: true,\n                    }}\n                    margin=\"dense\"\n                    variant=\"outlined\"\n                    value={value.number.value}\n                    name={\"name\"}\n                    onChange={(e: any) => {\n                      props.onUpdateChildren(key, \"number\", {\n                        ...value.number,\n                        value: e.target.value,\n                      });\n                    }}\n                  />\n                </div>\n              )}\n              {value.radio && (\n                <div>\n                  <FormControl\n                    component=\"fieldset\"\n                    error={props.errorMessage.message.cancerList[key] !== \"\"}\n                    className={classes.formControl}\n                  >\n                    <FormLabel component=\"legend\">\n                      {value.radio.label}(*)\n                    </FormLabel>\n                    <RadioGroup\n                      aria-label=\"ethnicity\"\n                      name=\"ethnicity\"\n                      value={value.radio.value}\n                      onChange={(e: any) => {\n                        props.onUpdateChildren(key, \"radio\", {\n                          ...value.radio,\n                          value: e.target.value,\n                        });\n                      }}\n                      className={classes.radio}\n                    >\n                      {value.radio.items.map((et: any, key: number) => (\n                        <FormControlLabel\n                          value={et.value}\n                          key={et}\n                          control={<Radio />}\n                          label={et.label}\n                        />\n                      ))}\n                    </RadioGroup>\n                    <FormHelperText>Required</FormHelperText>\n                  </FormControl>\n                </div>\n              )}\n            </Accordeon>\n          );\n        })}\n        <Accordeon\n          title={\"Other Cancer\"}\n          control\n          initialClosed={other.value !== \"Yes\"}\n          value={other.value}\n          error={props.errorMessage.message.other.value !== \"\"}\n          // success={props.errorMessage.cancerList[key].message.success}\n          onChange={(value: any) => {\n            props.onOtherChange(\"other\", {\n              ...other,\n              value,\n            });\n          }}\n        >\n          <div style={{ marginRight: \"15px\" }}>\n            <TextField\n              required\n              id=\"outlined-full-width\"\n              label={\"Onset Age\"}\n              error={props.errorMessage.message.other.age !== \"\"}\n              style={{ margin: 8 }}\n              placeholder={\"Onset Age\"}\n              type=\"number\"\n              helperText={\n                // AgentState.errorMessage.name !== \"\"\n                // ? AgentState.errorMessage.name\n                // : \"Required\"\n                \"Number, required\"\n              }\n              fullWidth\n              InputLabelProps={{\n                shrink: true,\n              }}\n              margin=\"dense\"\n              variant=\"outlined\"\n              value={other.age}\n              name={\"age\"}\n              onChange={(e: any) => {\n                props.onOtherChange(\"other\", {\n                  ...other,\n                  age: e.target.value,\n                });\n              }}\n            />\n          </div>\n          <div>\n            <TextField\n              required\n              id=\"outlined-full-width\"\n              label={\"Cancer Type\"}\n              error={props.errorMessage.message.other.type !== \"\"}\n              style={{ margin: 8 }}\n              // placeholder={value.number.label}\n              helperText={\n                // AgentState.errorMessage.name !== \"\"\n                // ? AgentState.errorMessage.name\n                // : \"Required\"\n                \"Required\"\n              }\n              fullWidth\n              InputLabelProps={{\n                shrink: true,\n              }}\n              margin=\"dense\"\n              variant=\"outlined\"\n              value={other.type}\n              name={\"type\"}\n              onChange={(e: any) => {\n                props.onOtherChange(\"other\", {\n                  ...other,\n                  type: e.target.value,\n                });\n              }}\n            />\n          </div>\n          <div style={{ marginLeft: \"15px\" }}>\n            <TextField\n              required\n              id=\"outlined-full-width\"\n              label={\"Clinical History\"}\n              error={props.errorMessage.message.other.history !== \"\"}\n              style={{ margin: 8 }}\n              // placeholder={value.number.label}\n              helperText={\n                // AgentState.errorMessage.name !== \"\"\n                // ? AgentState.errorMessage.name\n                // : \"Required\"\n                \"Required\"\n              }\n              fullWidth\n              InputLabelProps={{\n                shrink: true,\n              }}\n              margin=\"dense\"\n              variant=\"outlined\"\n              value={other.history}\n              name={\"history\"}\n              onChange={(e: any) => {\n                props.onOtherChange(\"other\", {\n                  ...other,\n                  history: e.target.value,\n                });\n              }}\n            />\n          </div>\n        </Accordeon>\n      </Grid>\n    </Accordeon>\n  );\n}\n","/private/var/www/oberholtzermedia-form/src/v2/components/Cancer/AvailableGenes/index.tsx",["224","225","226","227","228","229","230"],"/private/var/www/oberholtzermedia-form/src/v2/components/Cancer/RCETransfer.tsx",["231","232","233","234","235","236"],"import React, { useContext, useEffect, useReducer } from \"react\";\nimport { createStyles, makeStyles, Theme } from \"@material-ui/core/styles\";\n\nimport { AppContext } from \"../../store\";\nimport { CANCER_UPDATE, CANCER_SET_ERROR } from \"../../Reducer/Cancer\";\nimport { Button, Grid, Paper, Typography } from \"@material-ui/core\";\nimport {\n  SET_STEP_ERROR,\n  SET_STEP_SUCCESS,\n  GOT_TO_NEXT_STEP,\n} from \"../../Reducer/Stepper\";\nimport NavigateNextIcon from \"@material-ui/icons/NavigateNext\";\nimport SaveIcon from \"@material-ui/icons/Save\";\nimport ReportProblemIcon from \"@material-ui/icons/ReportProblem\";\nimport Alert from \"@material-ui/lab/Alert\";\n\nimport FamilyHistory from \"./FamilyHistory\";\nimport AvailableGenes from \"./AvailableGenes\";\nimport TestDescription from \"./TestDescription\";\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    form: {\n      \"& .MuiTextField-root\": {\n        margin: theme.spacing(1),\n        width: 200,\n      },\n    },\n    action: {\n      justifyContent: \"flex-end\",\n      display: \"flex\",\n      marginTop: \"30px\",\n    },\n    root: {\n      flexGrow: 1,\n      padding: \"30px 15px\",\n      backgroundColor: \"transparent\",\n    },\n    paper: {\n      padding: theme.spacing(2),\n      textAlign: \"center\",\n      color: theme.palette.text.secondary,\n      backgroundColor: \"transparent\",\n    },\n    button: {\n      margin: theme.spacing(1, 1, 0, 0),\n    },\n  })\n);\nexport default function Cancer() {\n  const classes = useStyles();\n  const { CancerState, CancerDispatch, StepperDispatch } = useContext(\n    AppContext\n  );\n\n  const handleChange = (\n    event: React.ChangeEvent<{ name?: string | undefined; value: unknown }>\n  ) => {\n    console.log(\"handleChange\", event);\n    CancerDispatch({\n      type: CANCER_UPDATE,\n      key: (event.target as HTMLInputElement).name,\n      value: (event.target as HTMLInputElement).value,\n    });\n  };\n\n  const handleKeyValueChange = (key: string, value: any) => {\n    CancerDispatch({\n      type: CANCER_UPDATE,\n      key,\n      value,\n    });\n  };\n\n  useEffect(() => {\n    if (CancerState.error) {\n      console.log(\"useEffect ErroR\");\n      StepperDispatch({ type: SET_STEP_ERROR });\n    }\n  }, [CancerState.error]);\n\n  useEffect(() => {\n    if (CancerState.success) {\n      console.log(\"useEffect SUcces\");\n      StepperDispatch({ type: SET_STEP_SUCCESS });\n    }\n  }, [CancerState.success]);\n\n  return (\n    <div className={classes.root}>\n      <Grid container spacing={3}>\n        <Grid item xs={12} spacing={3}>\n          {CancerState.error ? (\n            <Grid item xs={12}>\n              <Alert severity=\"error\">\n                {JSON.stringify(CancerState.errorMessage)}\n              </Alert>\n            </Grid>\n          ) : (\n            <>\n              {CancerState.success && (\n                <Grid item xs={12}>\n                  <Alert severity=\"success\">\n                    This section was validated successfully .\n                  </Alert>\n                </Grid>\n              )}\n            </>\n          )}\n        </Grid>\n        <Grid item xs={12} spacing={3}>\n          <Typography gutterBottom variant=\"h5\" component=\"h2\">\n            RCE Cancer Transfer\n          </Typography>\n        </Grid>\n        <AvailableGenes />\n        <TestDescription />\n        <FamilyHistory />\n        <Grid item xs={12} spacing={3} className={classes.action}>\n          <Button\n            variant=\"contained\"\n            color=\"primary\"\n            size=\"small\"\n            className={classes.button}\n            startIcon={<SaveIcon />}\n            disabled={CancerState.success}\n            onClick={() => {\n              CancerDispatch({ type: CANCER_SET_ERROR });\n            }}\n          >\n            Validate form\n          </Button>\n          <Button\n            variant=\"contained\"\n            color=\"primary\"\n            size=\"small\"\n            disabled={!CancerState.success}\n            className={classes.button}\n            endIcon={\n              CancerState.error ? <ReportProblemIcon /> : <NavigateNextIcon />\n            }\n            onClick={() => {\n              StepperDispatch({ type: GOT_TO_NEXT_STEP });\n            }}\n          >\n            Next\n          </Button>\n        </Grid>\n      </Grid>\n    </div>\n  );\n}\n","/private/var/www/oberholtzermedia-form/src/v2/components/Cancer/IndicationsTesting/index.tsx",["237","238","239","240","241"],"import React, { useContext } from \"react\";\nimport {\n  createStyles,\n  makeStyles,\n  useTheme,\n  Theme,\n} from \"@material-ui/core/styles\";\nimport clsx from \"clsx\";\nimport Input from \"@material-ui/core/Input\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport Select from \"@material-ui/core/Select\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\nimport Chip from \"@material-ui/core/Chip\";\nimport { CANCER_UPDATE, CANCER_SET_ERROR } from \"../../../Reducer/Cancer\";\n\nimport Accordeon from \"../../common/Accordeon\";\nimport { Grid, Paper, TextField } from \"@material-ui/core\";\nimport { AppContext } from \"../../../store\";\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    formControl: {\n      margin: theme.spacing(1),\n      width: \"100%\",\n    },\n    chips: {\n      display: \"flex\",\n      flexWrap: \"wrap\",\n    },\n    chip: {\n      margin: 2,\n    },\n    noLabel: {\n      marginTop: theme.spacing(3),\n    },\n  })\n);\n\nconst ITEM_HEIGHT = 48;\nconst ITEM_PADDING_TOP = 8;\nconst MenuProps = {\n  PaperProps: {\n    style: {\n      maxHeight: ITEM_HEIGHT * 4.5 + ITEM_PADDING_TOP,\n      width: 250,\n    },\n  },\n};\n\nconst names = [\n  \"Diagnostic\",\n  \"Presymptomatic\",\n  \"Family History\",\n  \"Family Variant\",\n  \"Other\",\n];\n\nfunction getStyles(name: string, indicationsTesting: string[], theme: Theme) {\n  return {\n    fontWeight:\n      indicationsTesting.indexOf(name) === -1\n        ? theme.typography.fontWeightRegular\n        : theme.typography.fontWeightMedium,\n  };\n}\n\nexport default function PreviousTreatment() {\n  const { CancerState, CancerDispatch } = useContext(AppContext);\n\n  const classes = useStyles();\n  const theme = useTheme();\n  const [indicationsTesting, setindicationsTesting] = React.useState<string[]>(\n    []\n  );\n\n  const handleChange = (event: React.ChangeEvent<{ value: unknown }>) => {\n    setindicationsTesting(event.target.value as string[]);\n    CancerDispatch({\n      type: CANCER_UPDATE,\n      key: \"indicationsTesting\",\n      value: event.target.value as string[],\n    });\n  };\n  return (\n    <Accordeon\n      noBorder\n      title=\"Indications for Testing\"\n      highlight\n      control\n      initialClosed\n    >\n      <Grid container spacing={3}>\n        <Grid item xs={12}>\n          <FormControl className={classes.formControl}>\n            <InputLabel id=\"demo-mutiple-chip-label\">\n              (Please select all that apply)\n            </InputLabel>\n            <Select\n              labelId=\"demo-mutiple-chip-label\"\n              id=\"demo-mutiple-chip\"\n              multiple\n              value={CancerState.Diagnostic.indicationsTesting}\n              onChange={handleChange}\n              input={<Input id=\"select-multiple-chip\" />}\n              renderValue={(selected) => (\n                <div className={classes.chips}>\n                  {(selected as string[]).map((value) => (\n                    <Chip key={value} label={value} className={classes.chip} />\n                  ))}\n                </div>\n              )}\n              MenuProps={MenuProps}\n            >\n              {names.map((name) => (\n                <MenuItem\n                  key={name}\n                  value={name}\n                  style={getStyles(\n                    name,\n                    CancerState.Diagnostic.indicationsTesting,\n                    theme\n                  )}\n                >\n                  {name}\n                </MenuItem>\n              ))}\n            </Select>\n          </FormControl>\n        </Grid>\n        <Grid item xs={12}>\n          {indicationsTesting.includes(\"Other\") && (\n            <TextField\n              required\n              id=\"outlined-full-width\"\n              label={\"Other Indications for Testing\"}\n              // error={props.errorMessage.message.cancerList[key] !== \"\"}\n              style={{ margin: 8 }}\n              // placeholder={value.number.label}\n              helperText={\n                // AgentState.errorMessage.name !== \"\"\n                // ? AgentState.errorMessage.name\n                // : \"Required\"\n                \"Required\"\n              }\n              fullWidth\n              InputLabelProps={{\n                shrink: true,\n              }}\n              margin=\"dense\"\n              variant=\"outlined\"\n              // value={value.number.value}\n              name={\"name\"}\n              onChange={(e: any) => {\n                // props.onUpdateChildren(key, \"number\", {\n                //   ...value.number,\n                //   value: e.target.value,\n                // });\n              }}\n            />\n          )}\n        </Grid>\n      </Grid>\n    </Accordeon>\n  );\n}\n","/private/var/www/oberholtzermedia-form/src/index.tsx",[],"/private/var/www/oberholtzermedia-form/src/v2/Reducer/App.tsx",[],"/private/var/www/oberholtzermedia-form/src/v2/store/index.tsx",[],"/private/var/www/oberholtzermedia-form/src/v2/components/User/index.tsx",["242","243","244"],"/private/var/www/oberholtzermedia-form/src/v2/components/Cancer/TestDescription/index.tsx",["245","246","247"],"/private/var/www/oberholtzermedia-form/src/v2/components/User/forms/PrimaryCare.tsx",["248"],"import React, { useContext, useState } from \"react\";\nimport { makeStyles, createStyles, Theme } from \"@material-ui/core/styles\";\nimport Grid from \"@material-ui/core/Grid\";\nimport { AppContext } from \"../../../store\";\nimport { Button, TextField } from \"@material-ui/core\";\nimport {\n  USER_SET_ERROR_PRIMARY_CARE,\n  USER_UPDATE_PRIMARYCARE,\n} from \"../../../Reducer/User\";\nimport InputPhone from \"../../common/InputPhone\";\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      flexGrow: 1,\n    },\n    formControl: {\n      margin: `0 ${theme.spacing(3)}px`,\n      width: \"95%\",\n    },\n    radio: {\n      flexDirection: \"row\",\n    },\n    paper: {\n      height: 140,\n      width: 100,\n    },\n    button: {\n      margin: theme.spacing(1, 1, 0, 0),\n    },\n    table: {\n      minWidth: 650,\n    },\n    control: {\n      padding: theme.spacing(2),\n    },\n  })\n);\n\nexport default function UserPrimaryCareForm() {\n  const classes = useStyles();\n  const [loading, setLoading] = useState<boolean>(false);\n  const { UserState, UserDispatch } = useContext(AppContext);\n\n  const handleChange = (\n    event: React.ChangeEvent<{ name?: string | undefined; value: unknown }>\n  ) => {\n    console.log(\"handleChange\", event);\n    UserDispatch({\n      type: USER_UPDATE_PRIMARYCARE,\n      key: (event.target as HTMLInputElement).name,\n      value: (event.target as HTMLInputElement).value,\n    });\n  };\n  return (\n    <Grid container className={classes.root} spacing={2}>\n      <Grid container className={classes.root} spacing={2}>\n        <Grid item xs={12} sm={6}>\n          <TextField\n            disabled={loading}\n            required\n            id=\"outlined-full-width\"\n            label=\"Doctor full name\"\n            error={UserState.errorMessage.PrimaryCare.message.name !== \"\"}\n            style={{ margin: 8 }}\n            placeholder=\"Doctor full name\"\n            helperText={\n              UserState.errorMessage.PrimaryCare.message.name !== \"\"\n                ? UserState.errorMessage.PrimaryCare.message.name\n                : \"Required\"\n            }\n            fullWidth\n            InputLabelProps={{\n              shrink: true,\n            }}\n            margin=\"dense\"\n            variant=\"outlined\"\n            value={UserState.PrimaryCare.name}\n            name={\"name\"}\n            onChange={handleChange}\n          />\n        </Grid>\n        <Grid item xs={12} sm={6}>\n          <InputPhone\n            id=\"outlined-full-width\"\n            label=\"Phone (*) \"\n            error={UserState.errorMessage.PrimaryCare.message.phone !== \"\"}\n            style={{ margin: 8 }}\n            placeholder=\"Placeholder\"\n            helperText={\n              UserState.errorMessage.PrimaryCare.message.phone !== \"\"\n                ? UserState.errorMessage.PrimaryCare.message.phone\n                : \"Required\"\n            }\n            fullWidth\n            InputLabelProps={{\n              shrink: true,\n            }}\n            margin=\"dense\"\n            variant=\"outlined\"\n            value={UserState.PrimaryCare.phone}\n            name=\"phone\"\n            onChange={handleChange}\n          />\n        </Grid>\n        {/* // /////////////////////// */}\n      </Grid>\n      <Grid item xs={12}>\n        <Button\n          onClick={() => {\n            UserDispatch({ type: USER_SET_ERROR_PRIMARY_CARE });\n          }}\n          variant=\"outlined\"\n          color=\"primary\"\n          className={classes.button}\n        >\n          Save\n        </Button>\n      </Grid>\n    </Grid>\n  );\n}\n","/private/var/www/oberholtzermedia-form/src/v2/components/Cancer/PreviousTreatment/index.tsx",["249"],"/private/var/www/oberholtzermedia-form/src/v2/Reducer/Agent/index.tsx",[],"/private/var/www/oberholtzermedia-form/src/v2/components/Cancer/PreviousClinicalTestingResults/index.tsx",["250","251","252","253","254","255","256","257","258","259","260","261","262","263","264"],"/private/var/www/oberholtzermedia-form/src/v2/components/Cancer/PreviousTumorTestingResults/index.tsx",["265","266","267","268","269","270","271","272","273","274","275","276","277","278","279"],{"ruleId":"280","severity":1,"message":"281","line":1,"column":17,"nodeType":"282","messageId":"283","endLine":1,"endColumn":27},{"ruleId":"280","severity":1,"message":"284","line":4,"column":10,"nodeType":"282","messageId":"283","endLine":4,"endColumn":20},{"ruleId":"280","severity":1,"message":"285","line":5,"column":8,"nodeType":"282","messageId":"283","endLine":5,"endColumn":13},{"ruleId":"280","severity":1,"message":"286","line":10,"column":3,"nodeType":"282","messageId":"283","endLine":10,"endColumn":11},{"ruleId":"280","severity":1,"message":"287","line":12,"column":3,"nodeType":"282","messageId":"283","endLine":12,"endColumn":12},{"ruleId":"288","replacedBy":"289"},{"ruleId":"290","replacedBy":"291"},{"ruleId":"280","severity":1,"message":"292","line":3,"column":10,"nodeType":"282","messageId":"283","endLine":3,"endColumn":26},{"ruleId":"280","severity":1,"message":"293","line":4,"column":8,"nodeType":"282","messageId":"283","endLine":4,"endColumn":20},{"ruleId":"280","severity":1,"message":"294","line":5,"column":3,"nodeType":"282","messageId":"283","endLine":5,"endColumn":17},{"ruleId":"280","severity":1,"message":"295","line":6,"column":3,"nodeType":"282","messageId":"283","endLine":6,"endColumn":19},{"ruleId":"280","severity":1,"message":"296","line":9,"column":8,"nodeType":"282","messageId":"283","endLine":9,"endColumn":24},{"ruleId":"280","severity":1,"message":"297","line":11,"column":8,"nodeType":"282","messageId":"283","endLine":11,"endColumn":17},{"ruleId":"280","severity":1,"message":"298","line":12,"column":8,"nodeType":"282","messageId":"283","endLine":12,"endColumn":13},{"ruleId":"280","severity":1,"message":"299","line":14,"column":8,"nodeType":"282","messageId":"283","endLine":14,"endColumn":13},{"ruleId":"280","severity":1,"message":"300","line":53,"column":10,"nodeType":"282","messageId":"283","endLine":53,"endColumn":17},{"ruleId":"280","severity":1,"message":"301","line":69,"column":25,"nodeType":"282","messageId":"283","endLine":69,"endColumn":40},{"ruleId":"288","replacedBy":"302"},{"ruleId":"290","replacedBy":"303"},{"ruleId":"280","severity":1,"message":"304","line":3,"column":24,"nodeType":"282","messageId":"283","endLine":3,"endColumn":29},{"ruleId":"280","severity":1,"message":"305","line":14,"column":7,"nodeType":"282","messageId":"283","endLine":14,"endColumn":17},{"ruleId":"280","severity":1,"message":"306","line":23,"column":7,"nodeType":"282","messageId":"283","endLine":23,"endColumn":13},{"ruleId":"280","severity":1,"message":"307","line":1,"column":40,"nodeType":"282","messageId":"283","endLine":1,"endColumn":50},{"ruleId":"280","severity":1,"message":"304","line":7,"column":24,"nodeType":"282","messageId":"283","endLine":7,"endColumn":29},{"ruleId":"308","severity":1,"message":"309","line":66,"column":6,"nodeType":"310","endLine":66,"endColumn":24,"suggestions":"311"},{"ruleId":"308","severity":1,"message":"309","line":73,"column":6,"nodeType":"310","endLine":73,"endColumn":26,"suggestions":"312"},{"ruleId":"280","severity":1,"message":"313","line":3,"column":18,"nodeType":"282","messageId":"283","endLine":3,"endColumn":28},{"ruleId":"280","severity":1,"message":"314","line":5,"column":3,"nodeType":"282","messageId":"283","endLine":5,"endColumn":30},{"ruleId":"280","severity":1,"message":"315","line":6,"column":3,"nodeType":"282","messageId":"283","endLine":6,"endColumn":31},{"ruleId":"280","severity":1,"message":"316","line":7,"column":3,"nodeType":"282","messageId":"283","endLine":7,"endColumn":27},{"ruleId":"288","replacedBy":"317"},{"ruleId":"290","replacedBy":"318"},{"ruleId":"280","severity":1,"message":"319","line":13,"column":3,"nodeType":"282","messageId":"283","endLine":13,"endColumn":12},{"ruleId":"280","severity":1,"message":"320","line":16,"column":8,"nodeType":"282","messageId":"283","endLine":16,"endColumn":20},{"ruleId":"280","severity":1,"message":"321","line":18,"column":3,"nodeType":"282","messageId":"283","endLine":18,"endColumn":21},{"ruleId":"280","severity":1,"message":"322","line":19,"column":3,"nodeType":"282","messageId":"283","endLine":19,"endColumn":26},{"ruleId":"280","severity":1,"message":"323","line":22,"column":8,"nodeType":"282","messageId":"283","endLine":22,"endColumn":13},{"ruleId":"280","severity":1,"message":"324","line":23,"column":8,"nodeType":"282","messageId":"283","endLine":23,"endColumn":18},{"ruleId":"280","severity":1,"message":"325","line":32,"column":10,"nodeType":"282","messageId":"283","endLine":32,"endColumn":23},{"ruleId":"280","severity":1,"message":"326","line":33,"column":8,"nodeType":"282","messageId":"283","endLine":33,"endColumn":18},{"ruleId":"280","severity":1,"message":"327","line":63,"column":25,"nodeType":"282","messageId":"283","endLine":63,"endColumn":31},{"ruleId":"280","severity":1,"message":"328","line":64,"column":9,"nodeType":"282","messageId":"283","endLine":64,"endColumn":25},{"ruleId":"280","severity":1,"message":"329","line":53,"column":7,"nodeType":"282","messageId":"283","endLine":53,"endColumn":11},{"ruleId":"330","severity":1,"message":"331","line":191,"column":38,"nodeType":"332","messageId":"333","endLine":191,"endColumn":40},{"ruleId":"280","severity":1,"message":"334","line":5,"column":8,"nodeType":"282","messageId":"283","endLine":5,"endColumn":24},{"ruleId":"288","replacedBy":"335"},{"ruleId":"290","replacedBy":"336"},{"ruleId":"280","severity":1,"message":"286","line":8,"column":3,"nodeType":"282","messageId":"283","endLine":8,"endColumn":11},{"ruleId":"280","severity":1,"message":"287","line":9,"column":3,"nodeType":"282","messageId":"283","endLine":9,"endColumn":12},{"ruleId":"280","severity":1,"message":"320","line":16,"column":8,"nodeType":"282","messageId":"283","endLine":16,"endColumn":20},{"ruleId":"280","severity":1,"message":"321","line":18,"column":3,"nodeType":"282","messageId":"283","endLine":18,"endColumn":21},{"ruleId":"280","severity":1,"message":"322","line":19,"column":3,"nodeType":"282","messageId":"283","endLine":19,"endColumn":26},{"ruleId":"280","severity":1,"message":"323","line":22,"column":8,"nodeType":"282","messageId":"283","endLine":22,"endColumn":13},{"ruleId":"280","severity":1,"message":"324","line":23,"column":8,"nodeType":"282","messageId":"283","endLine":23,"endColumn":18},{"ruleId":"280","severity":1,"message":"337","line":24,"column":8,"nodeType":"282","messageId":"283","endLine":24,"endColumn":24},{"ruleId":"280","severity":1,"message":"338","line":26,"column":8,"nodeType":"282","messageId":"283","endLine":26,"endColumn":17},{"ruleId":"280","severity":1,"message":"326","line":32,"column":8,"nodeType":"282","messageId":"283","endLine":32,"endColumn":18},{"ruleId":"280","severity":1,"message":"328","line":71,"column":9,"nodeType":"282","messageId":"283","endLine":71,"endColumn":25},{"ruleId":"280","severity":1,"message":"307","line":1,"column":40,"nodeType":"282","messageId":"283","endLine":1,"endColumn":50},{"ruleId":"280","severity":1,"message":"304","line":6,"column":24,"nodeType":"282","messageId":"283","endLine":6,"endColumn":29},{"ruleId":"280","severity":1,"message":"339","line":61,"column":9,"nodeType":"282","messageId":"283","endLine":61,"endColumn":21},{"ruleId":"308","severity":1,"message":"309","line":85,"column":6,"nodeType":"310","endLine":85,"endColumn":25,"suggestions":"340"},{"ruleId":"308","severity":1,"message":"309","line":92,"column":6,"nodeType":"310","endLine":92,"endColumn":27,"suggestions":"341"},{"ruleId":"280","severity":1,"message":"342","line":5,"column":3,"nodeType":"282","messageId":"283","endLine":5,"endColumn":9},{"ruleId":"280","severity":1,"message":"304","line":10,"column":3,"nodeType":"282","messageId":"283","endLine":10,"endColumn":8},{"ruleId":"280","severity":1,"message":"343","line":14,"column":3,"nodeType":"282","messageId":"283","endLine":14,"endColumn":13},{"ruleId":"280","severity":1,"message":"344","line":17,"column":10,"nodeType":"282","messageId":"283","endLine":17,"endColumn":40},{"ruleId":"280","severity":1,"message":"342","line":4,"column":3,"nodeType":"282","messageId":"283","endLine":4,"endColumn":9},{"ruleId":"280","severity":1,"message":"345","line":14,"column":8,"nodeType":"282","messageId":"283","endLine":14,"endColumn":24},{"ruleId":"280","severity":1,"message":"346","line":16,"column":3,"nodeType":"282","messageId":"283","endLine":16,"endColumn":27},{"ruleId":"280","severity":1,"message":"347","line":18,"column":3,"nodeType":"282","messageId":"283","endLine":18,"endColumn":30},{"ruleId":"280","severity":1,"message":"348","line":19,"column":3,"nodeType":"282","messageId":"283","endLine":19,"endColumn":30},{"ruleId":"280","severity":1,"message":"349","line":21,"column":10,"nodeType":"282","messageId":"283","endLine":21,"endColumn":37},{"ruleId":"280","severity":1,"message":"350","line":22,"column":8,"nodeType":"282","messageId":"283","endLine":22,"endColumn":28},{"ruleId":"280","severity":1,"message":"307","line":1,"column":40,"nodeType":"282","messageId":"283","endLine":1,"endColumn":50},{"ruleId":"280","severity":1,"message":"304","line":6,"column":24,"nodeType":"282","messageId":"283","endLine":6,"endColumn":29},{"ruleId":"280","severity":1,"message":"339","line":56,"column":9,"nodeType":"282","messageId":"283","endLine":56,"endColumn":21},{"ruleId":"280","severity":1,"message":"351","line":67,"column":9,"nodeType":"282","messageId":"283","endLine":67,"endColumn":29},{"ruleId":"308","severity":1,"message":"309","line":80,"column":6,"nodeType":"310","endLine":80,"endColumn":25,"suggestions":"352"},{"ruleId":"308","severity":1,"message":"309","line":87,"column":6,"nodeType":"310","endLine":87,"endColumn":27,"suggestions":"353"},{"ruleId":"280","severity":1,"message":"354","line":8,"column":8,"nodeType":"282","messageId":"283","endLine":8,"endColumn":12},{"ruleId":"280","severity":1,"message":"355","line":13,"column":8,"nodeType":"282","messageId":"283","endLine":13,"endColumn":20},{"ruleId":"280","severity":1,"message":"286","line":15,"column":8,"nodeType":"282","messageId":"283","endLine":15,"endColumn":16},{"ruleId":"280","severity":1,"message":"356","line":17,"column":25,"nodeType":"282","messageId":"283","endLine":17,"endColumn":41},{"ruleId":"280","severity":1,"message":"304","line":20,"column":16,"nodeType":"282","messageId":"283","endLine":20,"endColumn":21},{"ruleId":"280","severity":1,"message":"304","line":6,"column":24,"nodeType":"282","messageId":"283","endLine":6,"endColumn":29},{"ruleId":"308","severity":1,"message":"309","line":60,"column":6,"nodeType":"310","endLine":60,"endColumn":23,"suggestions":"357"},{"ruleId":"308","severity":1,"message":"309","line":66,"column":6,"nodeType":"310","endLine":66,"endColumn":25,"suggestions":"358"},{"ruleId":"280","severity":1,"message":"338","line":6,"column":8,"nodeType":"282","messageId":"283","endLine":6,"endColumn":17},{"ruleId":"280","severity":1,"message":"343","line":7,"column":16,"nodeType":"282","messageId":"283","endLine":7,"endColumn":26},{"ruleId":"280","severity":1,"message":"359","line":47,"column":21,"nodeType":"282","messageId":"283","endLine":47,"endColumn":29},{"ruleId":"280","severity":1,"message":"360","line":42,"column":19,"nodeType":"282","messageId":"283","endLine":42,"endColumn":29},{"ruleId":"280","severity":1,"message":"304","line":3,"column":16,"nodeType":"282","messageId":"283","endLine":3,"endColumn":21},{"ruleId":"280","severity":1,"message":"361","line":5,"column":3,"nodeType":"282","messageId":"283","endLine":5,"endColumn":11},{"ruleId":"280","severity":1,"message":"354","line":8,"column":8,"nodeType":"282","messageId":"283","endLine":8,"endColumn":12},{"ruleId":"280","severity":1,"message":"362","line":9,"column":8,"nodeType":"282","messageId":"283","endLine":9,"endColumn":13},{"ruleId":"280","severity":1,"message":"363","line":10,"column":8,"nodeType":"282","messageId":"283","endLine":10,"endColumn":18},{"ruleId":"280","severity":1,"message":"364","line":11,"column":8,"nodeType":"282","messageId":"283","endLine":11,"endColumn":16},{"ruleId":"280","severity":1,"message":"365","line":12,"column":8,"nodeType":"282","messageId":"283","endLine":12,"endColumn":19},{"ruleId":"280","severity":1,"message":"355","line":13,"column":8,"nodeType":"282","messageId":"283","endLine":13,"endColumn":20},{"ruleId":"280","severity":1,"message":"366","line":14,"column":8,"nodeType":"282","messageId":"283","endLine":14,"endColumn":14},{"ruleId":"280","severity":1,"message":"286","line":15,"column":8,"nodeType":"282","messageId":"283","endLine":15,"endColumn":16},{"ruleId":"280","severity":1,"message":"367","line":16,"column":8,"nodeType":"282","messageId":"283","endLine":16,"endColumn":12},{"ruleId":"280","severity":1,"message":"304","line":19,"column":16,"nodeType":"282","messageId":"283","endLine":19,"endColumn":21},{"ruleId":"280","severity":1,"message":"368","line":23,"column":7,"nodeType":"282","messageId":"283","endLine":23,"endColumn":16},{"ruleId":"280","severity":1,"message":"369","line":44,"column":7,"nodeType":"282","messageId":"283","endLine":44,"endColumn":16},{"ruleId":"280","severity":1,"message":"370","line":53,"column":7,"nodeType":"282","messageId":"283","endLine":53,"endColumn":12},{"ruleId":"280","severity":1,"message":"371","line":61,"column":10,"nodeType":"282","messageId":"283","endLine":61,"endColumn":19},{"ruleId":"280","severity":1,"message":"361","line":5,"column":3,"nodeType":"282","messageId":"283","endLine":5,"endColumn":11},{"ruleId":"280","severity":1,"message":"354","line":8,"column":8,"nodeType":"282","messageId":"283","endLine":8,"endColumn":12},{"ruleId":"280","severity":1,"message":"362","line":9,"column":8,"nodeType":"282","messageId":"283","endLine":9,"endColumn":13},{"ruleId":"280","severity":1,"message":"363","line":10,"column":8,"nodeType":"282","messageId":"283","endLine":10,"endColumn":18},{"ruleId":"280","severity":1,"message":"364","line":11,"column":8,"nodeType":"282","messageId":"283","endLine":11,"endColumn":16},{"ruleId":"280","severity":1,"message":"365","line":12,"column":8,"nodeType":"282","messageId":"283","endLine":12,"endColumn":19},{"ruleId":"280","severity":1,"message":"355","line":13,"column":8,"nodeType":"282","messageId":"283","endLine":13,"endColumn":20},{"ruleId":"280","severity":1,"message":"366","line":14,"column":8,"nodeType":"282","messageId":"283","endLine":14,"endColumn":14},{"ruleId":"280","severity":1,"message":"286","line":15,"column":8,"nodeType":"282","messageId":"283","endLine":15,"endColumn":16},{"ruleId":"280","severity":1,"message":"367","line":16,"column":8,"nodeType":"282","messageId":"283","endLine":16,"endColumn":12},{"ruleId":"280","severity":1,"message":"304","line":19,"column":16,"nodeType":"282","messageId":"283","endLine":19,"endColumn":21},{"ruleId":"280","severity":1,"message":"368","line":23,"column":7,"nodeType":"282","messageId":"283","endLine":23,"endColumn":16},{"ruleId":"280","severity":1,"message":"369","line":44,"column":7,"nodeType":"282","messageId":"283","endLine":44,"endColumn":16},{"ruleId":"280","severity":1,"message":"370","line":53,"column":7,"nodeType":"282","messageId":"283","endLine":53,"endColumn":12},{"ruleId":"280","severity":1,"message":"371","line":61,"column":10,"nodeType":"282","messageId":"283","endLine":61,"endColumn":19},"@typescript-eslint/no-unused-vars","'useContext' is defined but never used.","Identifier","unusedVar","'AppContext' is defined but never used.","'Alert' is defined but never used.","'Checkbox' is defined but never used.","'FormGroup' is defined but never used.","no-native-reassign",["372"],"no-negated-in-lhs",["373"],"'StepperInterface' is defined but never used.","'SteppReducer' is defined but never used.","'initialStepper' is defined but never used.","'SET_CURRENT_STEP' is defined but never used.","'useScrollTrigger' is defined but never used.","'Container' is defined but never used.","'Slide' is defined but never used.","'Agent' is defined but never used.","'Counter' is defined but never used.","'StepperDispatch' is assigned a value but never used.",["372"],["373"],"'Paper' is defined but never used.","'cancerList' is assigned a value but never used.","'Sugery' is assigned a value but never used.","'useReducer' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'StepperDispatch'. Either include it or remove the dependency array.","ArrayExpression",["374"],["375"],"'compareAsc' is defined but never used.","'ProfileAddressDataInterface' is defined but never used.","'ProfileMedicareDataInterface' is defined but never used.","'ProfileUserDataInterface' is defined but never used.",["372"],["373"],"'TextField' is defined but never used.","'DateFnsUtils' is defined but never used.","'KeyboardDatePicker' is defined but never used.","'MuiPickersUtilsProvider' is defined but never used.","'Radio' is defined but never used.","'RadioGroup' is defined but never used.","'EthnicityList' is defined but never used.","'InputPhone' is defined but never used.","'setErr' is assigned a value but never used.","'handleDateChange' is assigned a value but never used.","'rows' is assigned a value but never used.","array-callback-return","Array.prototype.map() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","'RECTansferCancer' is defined but never used.",["372"],["373"],"'FormControlLabel' is defined but never used.","'FormLabel' is defined but never used.","'handleChange' is assigned a value but never used.",["376"],["377"],"'Button' is defined but never used.","'Typography' is defined but never used.","'CancerDiagnosticErrorInterface' is defined but never used.","'FamilyMemberForm' is defined but never used.","'CANCER_ADD_FAMILY_MEMBER' is defined but never used.","'CANCER_UPDATE_FAMILY_MEMBER' is defined but never used.","'CANCER_REMOVE_FAMILY_MEMBER' is defined but never used.","'CancerFamilyMemberInterface' is defined but never used.","'AddCircleOutlineIcon' is defined but never used.","'handleKeyValueChange' is assigned a value but never used.",["378"],["379"],"'clsx' is defined but never used.","'ListItemText' is defined but never used.","'CANCER_SET_ERROR' is defined but never used.",["380"],["381"],"'includes' is assigned a value but never used.","'setLoading' is assigned a value but never used.","'useTheme' is defined but never used.","'Input' is defined but never used.","'InputLabel' is defined but never used.","'MenuItem' is defined but never used.","'FormControl' is defined but never used.","'Select' is defined but never used.","'Chip' is defined but never used.","'useStyles' is assigned a value but never used.","'MenuProps' is assigned a value but never used.","'names' is assigned a value but never used.","'getStyles' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"382","fix":"383"},{"desc":"384","fix":"385"},{"desc":"386","fix":"387"},{"desc":"388","fix":"389"},{"desc":"386","fix":"390"},{"desc":"388","fix":"391"},{"desc":"392","fix":"393"},{"desc":"394","fix":"395"},"Update the dependencies array to be: [AgentState.error, StepperDispatch]",{"range":"396","text":"397"},"Update the dependencies array to be: [AgentState.success, StepperDispatch]",{"range":"398","text":"399"},"Update the dependencies array to be: [CancerState.error, StepperDispatch]",{"range":"400","text":"401"},"Update the dependencies array to be: [CancerState.success, StepperDispatch]",{"range":"402","text":"403"},{"range":"404","text":"401"},{"range":"405","text":"403"},"Update the dependencies array to be: [StepperDispatch, UserState.error]",{"range":"406","text":"407"},"Update the dependencies array to be: [StepperDispatch, UserState.success]",{"range":"408","text":"409"},[1877,1895],"[AgentState.error, StepperDispatch]",[2050,2070],"[AgentState.success, StepperDispatch]",[2471,2490],"[CancerState.error, StepperDispatch]",[2646,2667],"[CancerState.success, StepperDispatch]",[2178,2197],[2353,2374],[1719,1736],"[StepperDispatch, UserState.error]",[1851,1870],"[StepperDispatch, UserState.success]"]